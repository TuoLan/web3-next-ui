{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/chain/defineChain.ts"],"sourcesContent":["import type { Chain, ChainFormatters } from '../../types/chain.js'\nimport type { Assign, Prettify } from '../../types/utils.js'\n\nexport function defineChain<\n  formatters extends ChainFormatters,\n  const chain extends Chain<formatters>,\n>(chain: chain): Prettify<Assign<Chain<undefined>, chain>> {\n  return {\n    formatters: undefined,\n    fees: undefined,\n    serializers: undefined,\n    ...chain,\n  } as Assign<Chain<undefined>, chain>\n}\n"],"names":[],"mappings":";;;AAGM,SAAU,YAGd,KAAY;IACZ,OAAO;QACL,YAAY;QACZ,MAAM;QACN,aAAa;QACb,GAAG,KAAK;;AAEZ"}},
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/chains/definitions/mainnet.ts"],"sourcesContent":["import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const mainnet = /*#__PURE__*/ defineChain({\n  id: 1,\n  name: 'Ethereum',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://cloudflare-eth.com'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Etherscan',\n      url: 'https://etherscan.io',\n      apiUrl: 'https://api.etherscan.io/api',\n    },\n  },\n  contracts: {\n    ensRegistry: {\n      address: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',\n    },\n    ensUniversalResolver: {\n      address: '0xce01f8eee7E479C928F8919abD53E553a36CeF67',\n      blockCreated: 19_258_213,\n    },\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 14_353_601,\n    },\n  },\n})\n"],"names":[],"mappings":";;;;;;AAEO,MAAM,UAAU,WAAA,GAAc,CAAA,GAAA,yJAAA,CAAA,cAAW,AAAX,EAAY;IAC/C,IAAI;IACJ,MAAM;IACN,gBAAgB;QAAE,MAAM;QAAS,QAAQ;QAAO,UAAU;IAAE;IAC5D,SAAS;QACP,SAAS;YACP,MAAM;gBAAC;aAA6B;;;IAGxC,gBAAgB;QACd,SAAS;YACP,MAAM;YACN,KAAK;YACL,QAAQ;;;IAGZ,WAAW;QACT,aAAa;YACX,SAAS;;QAEX,sBAAsB;YACpB,SAAS;YACT,cAAc;;QAEhB,YAAY;YACV,SAAS;YACT,cAAc"}},
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/ens/normalize.ts"],"sourcesContent":["import { ens_normalize } from '@adraffy/ens-normalize'\nimport type { ErrorType } from '../../errors/utils.js'\n\nexport type NormalizeErrorType = ErrorType\n\n/**\n * @description Normalizes ENS name according to ENSIP-15.\n *\n * @example\n * normalize('wevm.eth')\n * 'wevm.eth'\n *\n * @see https://docs.ens.domains/contract-api-reference/name-processing#normalising-names\n * @see https://github.com/ensdomains/docs/blob/9edf9443de4333a0ea7ec658a870672d5d180d53/ens-improvement-proposals/ensip-15-normalization-standard.md\n */\nexport function normalize(name: string) {\n  return ens_normalize(name)\n}\n"],"names":[],"mappings":";;;;;;AAeM,SAAU,UAAU,IAAY;IACpC,OAAO,CAAA,GAAA,2JAAA,CAAA,gBAAa,AAAb,EAAc;AACvB"}},
    {"offset": {"line": 77, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/abi/formatAbiItem.ts"],"sourcesContent":["import type { AbiParameter } from 'abitype'\n\nimport {\n  InvalidDefinitionTypeError,\n  type InvalidDefinitionTypeErrorType,\n} from '../../errors/abi.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { AbiItem } from '../../types/contract.js'\n\nexport type FormatAbiItemErrorType =\n  | FormatAbiParamsErrorType\n  | InvalidDefinitionTypeErrorType\n  | ErrorType\n\nexport function formatAbiItem(\n  abiItem: AbiItem,\n  { includeName = false }: { includeName?: boolean | undefined } = {},\n) {\n  if (\n    abiItem.type !== 'function' &&\n    abiItem.type !== 'event' &&\n    abiItem.type !== 'error'\n  )\n    throw new InvalidDefinitionTypeError(abiItem.type)\n\n  return `${abiItem.name}(${formatAbiParams(abiItem.inputs, { includeName })})`\n}\n\nexport type FormatAbiParamsErrorType = ErrorType\n\nexport function formatAbiParams(\n  params: readonly AbiParameter[] | undefined,\n  { includeName = false }: { includeName?: boolean | undefined } = {},\n): string {\n  if (!params) return ''\n  return params\n    .map((param) => formatAbiParam(param, { includeName }))\n    .join(includeName ? ', ' : ',')\n}\n\nexport type FormatAbiParamErrorType = ErrorType\n\nfunction formatAbiParam(\n  param: AbiParameter,\n  { includeName }: { includeName: boolean },\n): string {\n  if (param.type.startsWith('tuple')) {\n    return `(${formatAbiParams(\n      (param as unknown as { components: AbiParameter[] }).components,\n      { includeName },\n    )})${param.type.slice('tuple'.length)}`\n  }\n  return param.type + (includeName && param.name ? ` ${param.name}` : '')\n}\n"],"names":[],"mappings":";;;;;;;AAcM,SAAU,cACd,OAAgB,EAChB,EAAE,cAAc,KAAK,EAAA,GAA4C,CAAA,CAAE;IAEnE,IACE,QAAQ,IAAI,KAAK,cACjB,QAAQ,IAAI,KAAK,WACjB,QAAQ,IAAI,KAAK,SAEjB,MAAM,IAAI,yIAAA,CAAA,6BAA0B,CAAC,QAAQ,IAAI;IAEnD,OAAO,CAAA,EAAG,QAAQ,IAAI,CAAA,CAAA,EAAI,gBAAgB,QAAQ,MAAM,EAAE;QAAE;IAAW,GAAG,CAAA,CAAG;AAC/E;AAIM,SAAU,gBACd,MAA2C,EAC3C,EAAE,cAAc,KAAK,EAAA,GAA4C,CAAA,CAAE;IAEnE,IAAI,CAAC,QAAQ,OAAO;IACpB,OAAO,OACJ,GAAG,CAAC,CAAC,QAAU,eAAe,OAAO;YAAE;QAAW,IAClD,IAAI,CAAC,cAAc,OAAO;AAC/B;AAIA,SAAS,eACP,KAAmB,EACnB,EAAE,WAAW,EAA4B;IAEzC,IAAI,MAAM,IAAI,CAAC,UAAU,CAAC,UAAU;QAClC,OAAO,CAAA,CAAA,EAAI,gBACR,MAAoD,UAAU,EAC/D;YAAE;QAAW,GACd,CAAA,EAAI,MAAM,IAAI,CAAC,KAAK,CAAC,QAAQ,MAAM,EAAC,CAAE;IACzC;IACA,OAAO,MAAM,IAAI,GAAG,CAAC,eAAe,MAAM,IAAI,GAAG,CAAA,CAAA,EAAI,MAAM,IAAI,CAAA,CAAE,GAAG,EAAE;AACxE"}},
    {"offset": {"line": 109, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 114, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/data/isHex.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\nimport type { Hex } from '../../types/misc.js'\n\nexport type IsHexErrorType = ErrorType\n\nexport function isHex(\n  value: unknown,\n  { strict = true }: { strict?: boolean | undefined } = {},\n): value is Hex {\n  if (!value) return false\n  if (typeof value !== 'string') return false\n  return strict ? /^0x[0-9a-fA-F]*$/.test(value) : value.startsWith('0x')\n}\n"],"names":[],"mappings":";;;AAKM,SAAU,MACd,KAAc,EACd,EAAE,SAAS,IAAI,EAAA,GAAuC,CAAA,CAAE;IAExD,IAAI,CAAC,OAAO,OAAO;IACnB,IAAI,OAAO,UAAU,UAAU,OAAO;IACtC,OAAO,SAAS,mBAAmB,IAAI,CAAC,SAAS,MAAM,UAAU,CAAC;AACpE"}},
    {"offset": {"line": 122, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 127, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/data/size.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\n\nimport { type IsHexErrorType, isHex } from './isHex.js'\n\nexport type SizeErrorType = IsHexErrorType | ErrorType\n\n/**\n * @description Retrieves the size of the value (in bytes).\n *\n * @param value The value (hex or byte array) to retrieve the size of.\n * @returns The size of the value (in bytes).\n */\nexport function size(value: Hex | ByteArray) {\n  if (isHex(value, { strict: false })) return Math.ceil((value.length - 2) / 2)\n  return value.length\n}\n"],"names":[],"mappings":";;;;;;AAaM,SAAU,KAAK,KAAsB;IACzC,IAAI,CAAA,GAAA,kJAAA,CAAA,QAAK,AAAL,EAAM,OAAO;QAAE,QAAQ;IAAK,IAAK,OAAO,KAAK,IAAI,CAAC,CAAC,MAAM,MAAM,GAAG,CAAC,IAAI;IAC3E,OAAO,MAAM,MAAM;AACrB"}},
    {"offset": {"line": 139, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 144, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/errors/version.ts"],"sourcesContent":["export const version = '2.21.33'\n"],"names":[],"mappings":";;;AAAO,MAAM,UAAU"}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 153, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/errors/base.ts"],"sourcesContent":["import { version } from './version.js'\n\ntype ErrorConfig = {\n  getDocsUrl?: ((args: BaseErrorParameters) => string | undefined) | undefined\n  version?: string | undefined\n}\n\nlet errorConfig: ErrorConfig = {\n  getDocsUrl: ({\n    docsBaseUrl,\n    docsPath = '',\n    docsSlug,\n  }: BaseErrorParameters) =>\n    docsPath\n      ? `${docsBaseUrl ?? 'https://viem.sh'}${docsPath}${\n          docsSlug ? `#${docsSlug}` : ''\n        }`\n      : undefined,\n  version: `viem@${version}`,\n}\n\nexport function setErrorConfig(config: ErrorConfig) {\n  errorConfig = config\n}\n\ntype BaseErrorParameters = {\n  cause?: BaseError | Error | undefined\n  details?: string | undefined\n  docsBaseUrl?: string | undefined\n  docsPath?: string | undefined\n  docsSlug?: string | undefined\n  metaMessages?: string[] | undefined\n  name?: string | undefined\n}\n\nexport type BaseErrorType = BaseError & { name: 'BaseError' }\nexport class BaseError extends Error {\n  details: string\n  docsPath?: string | undefined\n  metaMessages?: string[] | undefined\n  shortMessage: string\n  version: string\n\n  override name = 'BaseError'\n\n  constructor(shortMessage: string, args: BaseErrorParameters = {}) {\n    const details = (() => {\n      if (args.cause instanceof BaseError) return args.cause.details\n      if (args.cause?.message) return args.cause.message\n      return args.details!\n    })()\n    const docsPath = (() => {\n      if (args.cause instanceof BaseError)\n        return args.cause.docsPath || args.docsPath\n      return args.docsPath\n    })()\n    const docsUrl = errorConfig.getDocsUrl?.({ ...args, docsPath })\n\n    const message = [\n      shortMessage || 'An error occurred.',\n      '',\n      ...(args.metaMessages ? [...args.metaMessages, ''] : []),\n      ...(docsUrl ? [`Docs: ${docsUrl}`] : []),\n      ...(details ? [`Details: ${details}`] : []),\n      ...(errorConfig.version ? [`Version: ${errorConfig.version}`] : []),\n    ].join('\\n')\n\n    super(message, args.cause ? { cause: args.cause } : undefined)\n\n    this.details = details\n    this.docsPath = docsPath\n    this.metaMessages = args.metaMessages\n    this.name = args.name ?? this.name\n    this.shortMessage = shortMessage\n    this.version = version\n  }\n\n  walk(): Error\n  walk(fn: (err: unknown) => boolean): Error | null\n  walk(fn?: any): any {\n    return walk(this, fn)\n  }\n}\n\nfunction walk(\n  err: unknown,\n  fn?: ((err: unknown) => boolean) | undefined,\n): unknown {\n  if (fn?.(err)) return err\n  if (err && typeof err === 'object' && 'cause' in err)\n    return walk(err.cause, fn)\n  return fn ? null : err\n}\n"],"names":[],"mappings":";;;;;;;AAOA,IAAI,cAA2B;IAC7B,YAAY,CAAC,EACX,WAAW,EACX,WAAW,EAAE,EACb,QAAQ,EACY,GACpB,WACI,CAAA,EAAG,eAAe,kBAAiB,EAAG,SAAQ,EAC5C,WAAW,CAAA,CAAA,EAAI,SAAQ,CAAE,GAAG,GAC9B,CAAE,GACF;IACN,SAAS,CAAA,KAAA,EAAQ,6IAAA,CAAA,UAAO,CAAA,CAAE;;AAGtB,SAAU,eAAe,MAAmB;IAChD,cAAc;AAChB;AAaM,MAAO,kBAAkB;IAS7B,YAAY,YAAoB,EAAE,OAA4B,CAAA,CAAE,CAAA;QAC9D,MAAM,UAAU,CAAC;YACf,IAAI,KAAK,KAAK,YAAY,WAAW,OAAO,KAAK,KAAK,CAAC,OAAO;YAC9D,IAAI,KAAK,KAAK,EAAE,SAAS,OAAO,KAAK,KAAK,CAAC,OAAO;YAClD,OAAO,KAAK,OAAQ;QACtB,CAAC;QACD,MAAM,WAAW,CAAC;YAChB,IAAI,KAAK,KAAK,YAAY,WACxB,OAAO,KAAK,KAAK,CAAC,QAAQ,IAAI,KAAK,QAAQ;YAC7C,OAAO,KAAK,QAAQ;QACtB,CAAC;QACD,MAAM,UAAU,YAAY,UAAU,GAAG;YAAE,GAAG,IAAI;YAAE;QAAQ;QAE5D,MAAM,UAAU;YACd,gBAAgB;YAChB;eACI,KAAK,YAAY,GAAG;mBAAI,KAAK,YAAY;gBAAE;aAAG,GAAG,EAAE;eACnD,UAAU;gBAAC,CAAA,MAAA,EAAS,QAAO,CAAE;aAAC,GAAG,EAAE;eACnC,UAAU;gBAAC,CAAA,SAAA,EAAY,QAAO,CAAE;aAAC,GAAG,EAAE;eACtC,YAAY,OAAO,GAAG;gBAAC,CAAA,SAAA,EAAY,YAAY,OAAO,CAAA,CAAE;aAAC,GAAG,EAAE;SACnE,CAAC,IAAI,CAAC;QAEP,KAAK,CAAC,SAAS,KAAK,KAAK,GAAG;YAAE,OAAO,KAAK,KAAK;QAAA,IAAK;QA9BtD,OAAA,cAAA,CAAA,IAAA,EAAA,WAAA;;;;;;QACA,OAAA,cAAA,CAAA,IAAA,EAAA,YAAA;;;;;;QACA,OAAA,cAAA,CAAA,IAAA,EAAA,gBAAA;;;;;;QACA,OAAA,cAAA,CAAA,IAAA,EAAA,gBAAA;;;;;;QACA,OAAA,cAAA,CAAA,IAAA,EAAA,WAAA;;;;;;QAES,OAAA,cAAA,CAAA,IAAA,EAAA,QAAA;;;;mBAAO;;QA0Bd,IAAI,CAAC,OAAO,GAAG;QACf,IAAI,CAAC,QAAQ,GAAG;QAChB,IAAI,CAAC,YAAY,GAAG,KAAK,YAAY;QACrC,IAAI,CAAC,IAAI,GAAG,KAAK,IAAI,IAAI,IAAI,CAAC,IAAI;QAClC,IAAI,CAAC,YAAY,GAAG;QACpB,IAAI,CAAC,OAAO,GAAG,6IAAA,CAAA,UAAO;IACxB;IAIA,KAAK,EAAQ,EAAA;QACX,OAAO,KAAK,IAAI,EAAE;IACpB;;AAGF,SAAS,KACP,GAAY,EACZ,EAA4C;IAE5C,IAAI,KAAK,MAAM,OAAO;IACtB,IAAI,OAAO,OAAO,QAAQ,YAAY,WAAW,KAC/C,OAAO,KAAK,IAAI,KAAK,EAAE;IACzB,OAAO,KAAK,OAAO;AACrB"}},
    {"offset": {"line": 254, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 259, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/errors/abi.ts"],"sourcesContent":["import type { Abi, AbiEvent, AbiParameter } from 'abitype'\n\nimport type { Hex } from '../types/misc.js'\nimport { formatAbiItem, formatAbiParams } from '../utils/abi/formatAbiItem.js'\nimport { size } from '../utils/data/size.js'\n\nimport { BaseError } from './base.js'\n\nexport type AbiConstructorNotFoundErrorType = AbiConstructorNotFoundError & {\n  name: 'AbiConstructorNotFoundError'\n}\nexport class AbiConstructorNotFoundError extends BaseError {\n  constructor({ docsPath }: { docsPath: string }) {\n    super(\n      [\n        'A constructor was not found on the ABI.',\n        'Make sure you are using the correct ABI and that the constructor exists on it.',\n      ].join('\\n'),\n      {\n        docsPath,\n        name: 'AbiConstructorNotFoundError',\n      },\n    )\n  }\n}\n\nexport type AbiConstructorParamsNotFoundErrorType =\n  AbiConstructorParamsNotFoundError & {\n    name: 'AbiConstructorParamsNotFoundError'\n  }\n\nexport class AbiConstructorParamsNotFoundError extends BaseError {\n  constructor({ docsPath }: { docsPath: string }) {\n    super(\n      [\n        'Constructor arguments were provided (`args`), but a constructor parameters (`inputs`) were not found on the ABI.',\n        'Make sure you are using the correct ABI, and that the `inputs` attribute on the constructor exists.',\n      ].join('\\n'),\n      {\n        docsPath,\n        name: 'AbiConstructorParamsNotFoundError',\n      },\n    )\n  }\n}\n\nexport type AbiDecodingDataSizeInvalidErrorType =\n  AbiDecodingDataSizeInvalidError & {\n    name: 'AbiDecodingDataSizeInvalidError'\n  }\nexport class AbiDecodingDataSizeInvalidError extends BaseError {\n  constructor({ data, size }: { data: Hex; size: number }) {\n    super(\n      [\n        `Data size of ${size} bytes is invalid.`,\n        'Size must be in increments of 32 bytes (size % 32 === 0).',\n      ].join('\\n'),\n      {\n        metaMessages: [`Data: ${data} (${size} bytes)`],\n        name: 'AbiDecodingDataSizeInvalidError',\n      },\n    )\n  }\n}\n\nexport type AbiDecodingDataSizeTooSmallErrorType =\n  AbiDecodingDataSizeTooSmallError & {\n    name: 'AbiDecodingDataSizeTooSmallError'\n  }\nexport class AbiDecodingDataSizeTooSmallError extends BaseError {\n  data: Hex\n  params: readonly AbiParameter[]\n  size: number\n\n  constructor({\n    data,\n    params,\n    size,\n  }: { data: Hex; params: readonly AbiParameter[]; size: number }) {\n    super(\n      [`Data size of ${size} bytes is too small for given parameters.`].join(\n        '\\n',\n      ),\n      {\n        metaMessages: [\n          `Params: (${formatAbiParams(params, { includeName: true })})`,\n          `Data:   ${data} (${size} bytes)`,\n        ],\n        name: 'AbiDecodingDataSizeTooSmallError',\n      },\n    )\n\n    this.data = data\n    this.params = params\n    this.size = size\n  }\n}\n\nexport type AbiDecodingZeroDataErrorType = AbiDecodingZeroDataError & {\n  name: 'AbiDecodingZeroDataError'\n}\nexport class AbiDecodingZeroDataError extends BaseError {\n  constructor() {\n    super('Cannot decode zero data (\"0x\") with ABI parameters.', {\n      name: 'AbiDecodingZeroDataError',\n    })\n  }\n}\n\nexport type AbiEncodingArrayLengthMismatchErrorType =\n  AbiEncodingArrayLengthMismatchError & {\n    name: 'AbiEncodingArrayLengthMismatchError'\n  }\nexport class AbiEncodingArrayLengthMismatchError extends BaseError {\n  constructor({\n    expectedLength,\n    givenLength,\n    type,\n  }: { expectedLength: number; givenLength: number; type: string }) {\n    super(\n      [\n        `ABI encoding array length mismatch for type ${type}.`,\n        `Expected length: ${expectedLength}`,\n        `Given length: ${givenLength}`,\n      ].join('\\n'),\n      { name: 'AbiEncodingArrayLengthMismatchError' },\n    )\n  }\n}\n\nexport type AbiEncodingBytesSizeMismatchErrorType =\n  AbiEncodingBytesSizeMismatchError & {\n    name: 'AbiEncodingBytesSizeMismatchError'\n  }\nexport class AbiEncodingBytesSizeMismatchError extends BaseError {\n  constructor({ expectedSize, value }: { expectedSize: number; value: Hex }) {\n    super(\n      `Size of bytes \"${value}\" (bytes${size(\n        value,\n      )}) does not match expected size (bytes${expectedSize}).`,\n      { name: 'AbiEncodingBytesSizeMismatchError' },\n    )\n  }\n}\n\nexport type AbiEncodingLengthMismatchErrorType =\n  AbiEncodingLengthMismatchError & {\n    name: 'AbiEncodingLengthMismatchError'\n  }\nexport class AbiEncodingLengthMismatchError extends BaseError {\n  constructor({\n    expectedLength,\n    givenLength,\n  }: { expectedLength: number; givenLength: number }) {\n    super(\n      [\n        'ABI encoding params/values length mismatch.',\n        `Expected length (params): ${expectedLength}`,\n        `Given length (values): ${givenLength}`,\n      ].join('\\n'),\n      { name: 'AbiEncodingLengthMismatchError' },\n    )\n  }\n}\n\nexport type AbiErrorInputsNotFoundErrorType = AbiErrorInputsNotFoundError & {\n  name: 'AbiErrorInputsNotFoundError'\n}\nexport class AbiErrorInputsNotFoundError extends BaseError {\n  constructor(errorName: string, { docsPath }: { docsPath: string }) {\n    super(\n      [\n        `Arguments (\\`args\\`) were provided to \"${errorName}\", but \"${errorName}\" on the ABI does not contain any parameters (\\`inputs\\`).`,\n        'Cannot encode error result without knowing what the parameter types are.',\n        'Make sure you are using the correct ABI and that the inputs exist on it.',\n      ].join('\\n'),\n      {\n        docsPath,\n        name: 'AbiErrorInputsNotFoundError',\n      },\n    )\n  }\n}\n\nexport type AbiErrorNotFoundErrorType = AbiErrorNotFoundError & {\n  name: 'AbiErrorNotFoundError'\n}\nexport class AbiErrorNotFoundError extends BaseError {\n  constructor(\n    errorName?: string | undefined,\n    { docsPath }: { docsPath?: string | undefined } = {},\n  ) {\n    super(\n      [\n        `Error ${errorName ? `\"${errorName}\" ` : ''}not found on ABI.`,\n        'Make sure you are using the correct ABI and that the error exists on it.',\n      ].join('\\n'),\n      {\n        docsPath,\n        name: 'AbiErrorNotFoundError',\n      },\n    )\n  }\n}\n\nexport type AbiErrorSignatureNotFoundErrorType =\n  AbiErrorSignatureNotFoundError & {\n    name: 'AbiErrorSignatureNotFoundError'\n  }\nexport class AbiErrorSignatureNotFoundError extends BaseError {\n  signature: Hex\n\n  constructor(signature: Hex, { docsPath }: { docsPath: string }) {\n    super(\n      [\n        `Encoded error signature \"${signature}\" not found on ABI.`,\n        'Make sure you are using the correct ABI and that the error exists on it.',\n        `You can look up the decoded signature here: https://openchain.xyz/signatures?query=${signature}.`,\n      ].join('\\n'),\n      {\n        docsPath,\n        name: 'AbiErrorSignatureNotFoundError',\n      },\n    )\n    this.signature = signature\n  }\n}\n\nexport type AbiEventSignatureEmptyTopicsErrorType =\n  AbiEventSignatureEmptyTopicsError & {\n    name: 'AbiEventSignatureEmptyTopicsError'\n  }\nexport class AbiEventSignatureEmptyTopicsError extends BaseError {\n  constructor({ docsPath }: { docsPath: string }) {\n    super('Cannot extract event signature from empty topics.', {\n      docsPath,\n      name: 'AbiEventSignatureEmptyTopicsError',\n    })\n  }\n}\n\nexport type AbiEventSignatureNotFoundErrorType =\n  AbiEventSignatureNotFoundError & {\n    name: 'AbiEventSignatureNotFoundError'\n  }\nexport class AbiEventSignatureNotFoundError extends BaseError {\n  constructor(signature: Hex, { docsPath }: { docsPath: string }) {\n    super(\n      [\n        `Encoded event signature \"${signature}\" not found on ABI.`,\n        'Make sure you are using the correct ABI and that the event exists on it.',\n        `You can look up the signature here: https://openchain.xyz/signatures?query=${signature}.`,\n      ].join('\\n'),\n      {\n        docsPath,\n        name: 'AbiEventSignatureNotFoundError',\n      },\n    )\n  }\n}\n\nexport type AbiEventNotFoundErrorType = AbiEventNotFoundError & {\n  name: 'AbiEventNotFoundError'\n}\nexport class AbiEventNotFoundError extends BaseError {\n  constructor(\n    eventName?: string | undefined,\n    { docsPath }: { docsPath?: string | undefined } = {},\n  ) {\n    super(\n      [\n        `Event ${eventName ? `\"${eventName}\" ` : ''}not found on ABI.`,\n        'Make sure you are using the correct ABI and that the event exists on it.',\n      ].join('\\n'),\n      {\n        docsPath,\n        name: 'AbiEventNotFoundError',\n      },\n    )\n  }\n}\n\nexport type AbiFunctionNotFoundErrorType = AbiFunctionNotFoundError & {\n  name: 'AbiFunctionNotFoundError'\n}\nexport class AbiFunctionNotFoundError extends BaseError {\n  constructor(\n    functionName?: string | undefined,\n    { docsPath }: { docsPath?: string | undefined } = {},\n  ) {\n    super(\n      [\n        `Function ${functionName ? `\"${functionName}\" ` : ''}not found on ABI.`,\n        'Make sure you are using the correct ABI and that the function exists on it.',\n      ].join('\\n'),\n      {\n        docsPath,\n        name: 'AbiFunctionNotFoundError',\n      },\n    )\n  }\n}\n\nexport type AbiFunctionOutputsNotFoundErrorType =\n  AbiFunctionOutputsNotFoundError & {\n    name: 'AbiFunctionOutputsNotFoundError'\n  }\nexport class AbiFunctionOutputsNotFoundError extends BaseError {\n  constructor(functionName: string, { docsPath }: { docsPath: string }) {\n    super(\n      [\n        `Function \"${functionName}\" does not contain any \\`outputs\\` on ABI.`,\n        'Cannot decode function result without knowing what the parameter types are.',\n        'Make sure you are using the correct ABI and that the function exists on it.',\n      ].join('\\n'),\n      {\n        docsPath,\n        name: 'AbiFunctionOutputsNotFoundError',\n      },\n    )\n  }\n}\n\nexport type AbiFunctionSignatureNotFoundErrorType =\n  AbiFunctionSignatureNotFoundError & {\n    name: 'AbiFunctionSignatureNotFoundError'\n  }\nexport class AbiFunctionSignatureNotFoundError extends BaseError {\n  constructor(signature: Hex, { docsPath }: { docsPath: string }) {\n    super(\n      [\n        `Encoded function signature \"${signature}\" not found on ABI.`,\n        'Make sure you are using the correct ABI and that the function exists on it.',\n        `You can look up the signature here: https://openchain.xyz/signatures?query=${signature}.`,\n      ].join('\\n'),\n      {\n        docsPath,\n        name: 'AbiFunctionSignatureNotFoundError',\n      },\n    )\n  }\n}\n\nexport type AbiItemAmbiguityErrorType = AbiItemAmbiguityError & {\n  name: 'AbiItemAmbiguityError'\n}\nexport class AbiItemAmbiguityError extends BaseError {\n  constructor(\n    x: { abiItem: Abi[number]; type: string },\n    y: { abiItem: Abi[number]; type: string },\n  ) {\n    super('Found ambiguous types in overloaded ABI items.', {\n      metaMessages: [\n        `\\`${x.type}\\` in \\`${formatAbiItem(x.abiItem)}\\`, and`,\n        `\\`${y.type}\\` in \\`${formatAbiItem(y.abiItem)}\\``,\n        '',\n        'These types encode differently and cannot be distinguished at runtime.',\n        'Remove one of the ambiguous items in the ABI.',\n      ],\n      name: 'AbiItemAmbiguityError',\n    })\n  }\n}\n\nexport type BytesSizeMismatchErrorType = BytesSizeMismatchError & {\n  name: 'BytesSizeMismatchError'\n}\nexport class BytesSizeMismatchError extends BaseError {\n  constructor({\n    expectedSize,\n    givenSize,\n  }: { expectedSize: number; givenSize: number }) {\n    super(`Expected bytes${expectedSize}, got bytes${givenSize}.`, {\n      name: 'BytesSizeMismatchError',\n    })\n  }\n}\n\nexport type DecodeLogDataMismatchErrorType = DecodeLogDataMismatch & {\n  name: 'DecodeLogDataMismatch'\n}\nexport class DecodeLogDataMismatch extends BaseError {\n  abiItem: AbiEvent\n  data: Hex\n  params: readonly AbiParameter[]\n  size: number\n\n  constructor({\n    abiItem,\n    data,\n    params,\n    size,\n  }: {\n    abiItem: AbiEvent\n    data: Hex\n    params: readonly AbiParameter[]\n    size: number\n  }) {\n    super(\n      [\n        `Data size of ${size} bytes is too small for non-indexed event parameters.`,\n      ].join('\\n'),\n      {\n        metaMessages: [\n          `Params: (${formatAbiParams(params, { includeName: true })})`,\n          `Data:   ${data} (${size} bytes)`,\n        ],\n        name: 'DecodeLogDataMismatch',\n      },\n    )\n\n    this.abiItem = abiItem\n    this.data = data\n    this.params = params\n    this.size = size\n  }\n}\n\nexport type DecodeLogTopicsMismatchErrorType = DecodeLogTopicsMismatch & {\n  name: 'DecodeLogTopicsMismatch'\n}\nexport class DecodeLogTopicsMismatch extends BaseError {\n  abiItem: AbiEvent\n\n  constructor({\n    abiItem,\n    param,\n  }: {\n    abiItem: AbiEvent\n    param: AbiParameter & { indexed: boolean }\n  }) {\n    super(\n      [\n        `Expected a topic for indexed event parameter${\n          param.name ? ` \"${param.name}\"` : ''\n        } on event \"${formatAbiItem(abiItem, { includeName: true })}\".`,\n      ].join('\\n'),\n      { name: 'DecodeLogTopicsMismatch' },\n    )\n\n    this.abiItem = abiItem\n  }\n}\n\nexport type InvalidAbiEncodingTypeErrorType = InvalidAbiEncodingTypeError & {\n  name: 'InvalidAbiEncodingTypeError'\n}\nexport class InvalidAbiEncodingTypeError extends BaseError {\n  constructor(type: string, { docsPath }: { docsPath: string }) {\n    super(\n      [\n        `Type \"${type}\" is not a valid encoding type.`,\n        'Please provide a valid ABI type.',\n      ].join('\\n'),\n      { docsPath, name: 'InvalidAbiEncodingType' },\n    )\n  }\n}\n\nexport type InvalidAbiDecodingTypeErrorType = InvalidAbiDecodingTypeError & {\n  name: 'InvalidAbiDecodingTypeError'\n}\nexport class InvalidAbiDecodingTypeError extends BaseError {\n  constructor(type: string, { docsPath }: { docsPath: string }) {\n    super(\n      [\n        `Type \"${type}\" is not a valid decoding type.`,\n        'Please provide a valid ABI type.',\n      ].join('\\n'),\n      { docsPath, name: 'InvalidAbiDecodingType' },\n    )\n  }\n}\n\nexport type InvalidArrayErrorType = InvalidArrayError & {\n  name: 'InvalidArrayError'\n}\nexport class InvalidArrayError extends BaseError {\n  constructor(value: unknown) {\n    super([`Value \"${value}\" is not a valid array.`].join('\\n'), {\n      name: 'InvalidArrayError',\n    })\n  }\n}\n\nexport type InvalidDefinitionTypeErrorType = InvalidDefinitionTypeError & {\n  name: 'InvalidDefinitionTypeError'\n}\nexport class InvalidDefinitionTypeError extends BaseError {\n  constructor(type: string) {\n    super(\n      [\n        `\"${type}\" is not a valid definition type.`,\n        'Valid types: \"function\", \"event\", \"error\"',\n      ].join('\\n'),\n      { name: 'InvalidDefinitionTypeError' },\n    )\n  }\n}\n\nexport type UnsupportedPackedAbiTypeErrorType = UnsupportedPackedAbiType & {\n  name: 'UnsupportedPackedAbiType'\n}\nexport class UnsupportedPackedAbiType extends BaseError {\n  constructor(type: unknown) {\n    super(`Type \"${type}\" is not supported for packed encoding.`, {\n      name: 'UnsupportedPackedAbiType',\n    })\n  }\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 639, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 644, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/errors/address.ts"],"sourcesContent":["import { BaseError } from './base.js'\n\nexport type InvalidAddressErrorType = InvalidAddressError & {\n  name: 'InvalidAddressError'\n}\nexport class InvalidAddressError extends BaseError {\n  constructor({ address }: { address: string }) {\n    super(`Address \"${address}\" is invalid.`, {\n      metaMessages: [\n        '- Address must be a hex value of 20 bytes (40 hex characters).',\n        '- Address must match its checksum counterpart.',\n      ],\n      name: 'InvalidAddressError',\n    })\n  }\n}\n"],"names":[],"mappings":";;;;;;AAKM,MAAO,4BAA4B,0IAAA,CAAA,YAAS;IAChD,YAAY,EAAE,OAAO,EAAuB,CAAA;QAC1C,KAAK,CAAC,CAAA,SAAA,EAAY,QAAO,aAAA,CAAe,EAAE;YACxC,cAAc;gBACZ;gBACA;aACD;YACD,MAAM;;IAEV"}},
    {"offset": {"line": 661, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 666, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/errors/data.ts"],"sourcesContent":["import { BaseError } from './base.js'\n\nexport type SliceOffsetOutOfBoundsErrorType = SliceOffsetOutOfBoundsError & {\n  name: 'SliceOffsetOutOfBoundsError'\n}\nexport class SliceOffsetOutOfBoundsError extends BaseError {\n  constructor({\n    offset,\n    position,\n    size,\n  }: { offset: number; position: 'start' | 'end'; size: number }) {\n    super(\n      `Slice ${\n        position === 'start' ? 'starting' : 'ending'\n      } at offset \"${offset}\" is out-of-bounds (size: ${size}).`,\n      { name: 'SliceOffsetOutOfBoundsError' },\n    )\n  }\n}\n\nexport type SizeExceedsPaddingSizeErrorType = SizeExceedsPaddingSizeError & {\n  name: 'SizeExceedsPaddingSizeError'\n}\nexport class SizeExceedsPaddingSizeError extends BaseError {\n  constructor({\n    size,\n    targetSize,\n    type,\n  }: {\n    size: number\n    targetSize: number\n    type: 'hex' | 'bytes'\n  }) {\n    super(\n      `${type.charAt(0).toUpperCase()}${type\n        .slice(1)\n        .toLowerCase()} size (${size}) exceeds padding size (${targetSize}).`,\n      { name: 'SizeExceedsPaddingSizeError' },\n    )\n  }\n}\n\nexport type InvalidBytesLengthErrorType = InvalidBytesLengthError & {\n  name: 'InvalidBytesLengthError'\n}\nexport class InvalidBytesLengthError extends BaseError {\n  constructor({\n    size,\n    targetSize,\n    type,\n  }: {\n    size: number\n    targetSize: number\n    type: 'hex' | 'bytes'\n  }) {\n    super(\n      `${type.charAt(0).toUpperCase()}${type\n        .slice(1)\n        .toLowerCase()} is expected to be ${targetSize} ${type} long, but is ${size} ${type} long.`,\n      { name: 'InvalidBytesLengthError' },\n    )\n  }\n}\n"],"names":[],"mappings":";;;;;;;;AAKM,MAAO,oCAAoC,0IAAA,CAAA,YAAS;IACxD,YAAY,EACV,MAAM,EACN,QAAQ,EACR,IAAI,EACwD,CAAA;QAC5D,KAAK,CACH,CAAA,MAAA,EACE,aAAa,UAAU,aAAa,SACtC,YAAA,EAAe,OAAM,0BAAA,EAA6B,KAAI,EAAA,CAAI,EAC1D;YAAE,MAAM;QAA6B;IAEzC;;AAMI,MAAO,oCAAoC,0IAAA,CAAA,YAAS;IACxD,YAAY,EACV,IAAI,EACJ,UAAU,EACV,IAAI,EAKL,CAAA;QACC,KAAK,CACH,CAAA,EAAG,KAAK,MAAM,CAAC,GAAG,WAAW,GAAE,EAAG,KAC/B,KAAK,CAAC,GACN,WAAW,GAAE,OAAA,EAAU,KAAI,wBAAA,EAA2B,WAAU,EAAA,CAAI,EACvE;YAAE,MAAM;QAA6B;IAEzC;;AAMI,MAAO,gCAAgC,0IAAA,CAAA,YAAS;IACpD,YAAY,EACV,IAAI,EACJ,UAAU,EACV,IAAI,EAKL,CAAA;QACC,KAAK,CACH,CAAA,EAAG,KAAK,MAAM,CAAC,GAAG,WAAW,GAAE,EAAG,KAC/B,KAAK,CAAC,GACN,WAAW,GAAE,mBAAA,EAAsB,WAAU,CAAA,EAAI,KAAI,cAAA,EAAiB,KAAI,CAAA,EAAI,KAAI,MAAA,CAAQ,EAC7F;YAAE,MAAM;QAAyB;IAErC"}},
    {"offset": {"line": 695, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 700, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/data/pad.ts"],"sourcesContent":["import {\n  SizeExceedsPaddingSizeError,\n  type SizeExceedsPaddingSizeErrorType,\n} from '../../errors/data.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\n\ntype PadOptions = {\n  dir?: 'left' | 'right' | undefined\n  size?: number | null | undefined\n}\nexport type PadReturnType<value extends ByteArray | Hex> = value extends Hex\n  ? Hex\n  : ByteArray\n\nexport type PadErrorType = PadHexErrorType | PadBytesErrorType | ErrorType\n\nexport function pad<value extends ByteArray | Hex>(\n  hexOrBytes: value,\n  { dir, size = 32 }: PadOptions = {},\n): PadReturnType<value> {\n  if (typeof hexOrBytes === 'string')\n    return padHex(hexOrBytes, { dir, size }) as PadReturnType<value>\n  return padBytes(hexOrBytes, { dir, size }) as PadReturnType<value>\n}\n\nexport type PadHexErrorType = SizeExceedsPaddingSizeErrorType | ErrorType\n\nexport function padHex(hex_: Hex, { dir, size = 32 }: PadOptions = {}) {\n  if (size === null) return hex_\n  const hex = hex_.replace('0x', '')\n  if (hex.length > size * 2)\n    throw new SizeExceedsPaddingSizeError({\n      size: Math.ceil(hex.length / 2),\n      targetSize: size,\n      type: 'hex',\n    })\n\n  return `0x${hex[dir === 'right' ? 'padEnd' : 'padStart'](\n    size * 2,\n    '0',\n  )}` as Hex\n}\n\nexport type PadBytesErrorType = SizeExceedsPaddingSizeErrorType | ErrorType\n\nexport function padBytes(\n  bytes: ByteArray,\n  { dir, size = 32 }: PadOptions = {},\n) {\n  if (size === null) return bytes\n  if (bytes.length > size)\n    throw new SizeExceedsPaddingSizeError({\n      size: bytes.length,\n      targetSize: size,\n      type: 'bytes',\n    })\n  const paddedBytes = new Uint8Array(size)\n  for (let i = 0; i < size; i++) {\n    const padEnd = dir === 'right'\n    paddedBytes[padEnd ? i : size - i - 1] =\n      bytes[padEnd ? i : bytes.length - i - 1]\n  }\n  return paddedBytes\n}\n"],"names":[],"mappings":";;;;;;;;AAiBM,SAAU,IACd,UAAiB,EACjB,EAAE,GAAG,EAAE,OAAO,EAAE,EAAA,GAAiB,CAAA,CAAE;IAEnC,IAAI,OAAO,eAAe,UACxB,OAAO,OAAO,YAAY;QAAE;QAAK;IAAI;IACvC,OAAO,SAAS,YAAY;QAAE;QAAK;IAAI;AACzC;AAIM,SAAU,OAAO,IAAS,EAAE,EAAE,GAAG,EAAE,OAAO,EAAE,EAAA,GAAiB,CAAA,CAAE;IACnE,IAAI,SAAS,MAAM,OAAO;IAC1B,MAAM,MAAM,KAAK,OAAO,CAAC,MAAM;IAC/B,IAAI,IAAI,MAAM,GAAG,OAAO,GACtB,MAAM,IAAI,0IAAA,CAAA,8BAA2B,CAAC;QACpC,MAAM,KAAK,IAAI,CAAC,IAAI,MAAM,GAAG;QAC7B,YAAY;QACZ,MAAM;;IAGV,OAAO,CAAA,EAAA,EAAK,GAAG,CAAC,QAAQ,UAAU,WAAW,WAAW,CACtD,OAAO,GACP,KACD,CAAS;AACZ;AAIM,SAAU,SACd,KAAgB,EAChB,EAAE,GAAG,EAAE,OAAO,EAAE,EAAA,GAAiB,CAAA,CAAE;IAEnC,IAAI,SAAS,MAAM,OAAO;IAC1B,IAAI,MAAM,MAAM,GAAG,MACjB,MAAM,IAAI,0IAAA,CAAA,8BAA2B,CAAC;QACpC,MAAM,MAAM,MAAM;QAClB,YAAY;QACZ,MAAM;;IAEV,MAAM,cAAc,IAAI,WAAW;IACnC,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,IAAK;QAC7B,MAAM,SAAS,QAAQ;QACvB,WAAW,CAAC,SAAS,IAAI,OAAO,IAAI,EAAE,GACpC,KAAK,CAAC,SAAS,IAAI,MAAM,MAAM,GAAG,IAAI,EAAE;IAC5C;IACA,OAAO;AACT"}},
    {"offset": {"line": 742, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 747, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/errors/encoding.ts"],"sourcesContent":["import type { ByteArray, Hex } from '../types/misc.js'\n\nimport { BaseError } from './base.js'\n\nexport type IntegerOutOfRangeErrorType = IntegerOutOfRangeError & {\n  name: 'IntegerOutOfRangeError'\n}\nexport class IntegerOutOfRangeError extends BaseError {\n  constructor({\n    max,\n    min,\n    signed,\n    size,\n    value,\n  }: {\n    max?: string | undefined\n    min: string\n    signed?: boolean | undefined\n    size?: number | undefined\n    value: string\n  }) {\n    super(\n      `Number \"${value}\" is not in safe ${\n        size ? `${size * 8}-bit ${signed ? 'signed' : 'unsigned'} ` : ''\n      }integer range ${max ? `(${min} to ${max})` : `(above ${min})`}`,\n      { name: 'IntegerOutOfRangeError' },\n    )\n  }\n}\n\nexport type InvalidBytesBooleanErrorType = InvalidBytesBooleanError & {\n  name: 'InvalidBytesBooleanError'\n}\nexport class InvalidBytesBooleanError extends BaseError {\n  constructor(bytes: ByteArray) {\n    super(\n      `Bytes value \"${bytes}\" is not a valid boolean. The bytes array must contain a single byte of either a 0 or 1 value.`,\n      {\n        name: 'InvalidBytesBooleanError',\n      },\n    )\n  }\n}\n\nexport type InvalidHexBooleanErrorType = InvalidHexBooleanError & {\n  name: 'InvalidHexBooleanError'\n}\nexport class InvalidHexBooleanError extends BaseError {\n  constructor(hex: Hex) {\n    super(\n      `Hex value \"${hex}\" is not a valid boolean. The hex value must be \"0x0\" (false) or \"0x1\" (true).`,\n      { name: 'InvalidHexBooleanError' },\n    )\n  }\n}\n\nexport type InvalidHexValueErrorType = InvalidHexValueError & {\n  name: 'InvalidHexValueError'\n}\nexport class InvalidHexValueError extends BaseError {\n  constructor(value: Hex) {\n    super(\n      `Hex value \"${value}\" is an odd length (${value.length}). It must be an even length.`,\n      { name: 'InvalidHexValueError' },\n    )\n  }\n}\n\nexport type SizeOverflowErrorType = SizeOverflowError & {\n  name: 'SizeOverflowError'\n}\nexport class SizeOverflowError extends BaseError {\n  constructor({ givenSize, maxSize }: { givenSize: number; maxSize: number }) {\n    super(\n      `Size cannot exceed ${maxSize} bytes. Given size: ${givenSize} bytes.`,\n      { name: 'SizeOverflowError' },\n    )\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;;AAOM,MAAO,+BAA+B,0IAAA,CAAA,YAAS;IACnD,YAAY,EACV,GAAG,EACH,GAAG,EACH,MAAM,EACN,IAAI,EACJ,KAAK,EAON,CAAA;QACC,KAAK,CACH,CAAA,QAAA,EAAW,MAAK,iBAAA,EACd,OAAO,CAAA,EAAG,OAAO,EAAC,KAAA,EAAQ,SAAS,WAAW,WAAU,CAAA,CAAG,GAAG,GAChE,cAAA,EAAiB,MAAM,CAAA,CAAA,EAAI,IAAG,IAAA,EAAO,IAAG,CAAA,CAAG,GAAG,CAAA,OAAA,EAAU,IAAG,CAAA,CAAG,CAAA,CAAE,EAChE;YAAE,MAAM;QAAwB;IAEpC;;AAMI,MAAO,iCAAiC,0IAAA,CAAA,YAAS;IACrD,YAAY,KAAgB,CAAA;QAC1B,KAAK,CACH,CAAA,aAAA,EAAgB,MAAK,8FAAA,CAAgG,EACrH;YACE,MAAM;;IAGZ;;AAMI,MAAO,+BAA+B,0IAAA,CAAA,YAAS;IACnD,YAAY,GAAQ,CAAA;QAClB,KAAK,CACH,CAAA,WAAA,EAAc,IAAG,8EAAA,CAAgF,EACjG;YAAE,MAAM;QAAwB;IAEpC;;AAMI,MAAO,6BAA6B,0IAAA,CAAA,YAAS;IACjD,YAAY,KAAU,CAAA;QACpB,KAAK,CACH,CAAA,WAAA,EAAc,MAAK,oBAAA,EAAuB,MAAM,MAAM,CAAA,6BAAA,CAA+B,EACrF;YAAE,MAAM;QAAsB;IAElC;;AAMI,MAAO,0BAA0B,0IAAA,CAAA,YAAS;IAC9C,YAAY,EAAE,SAAS,EAAE,OAAO,EAA0C,CAAA;QACxE,KAAK,CACH,CAAA,mBAAA,EAAsB,QAAO,oBAAA,EAAuB,UAAS,OAAA,CAAS,EACtE;YAAE,MAAM;QAAmB;IAE/B"}},
    {"offset": {"line": 792, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 797, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/data/trim.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\n\ntype TrimOptions = {\n  dir?: 'left' | 'right' | undefined\n}\nexport type TrimReturnType<value extends ByteArray | Hex> = value extends Hex\n  ? Hex\n  : ByteArray\n\nexport type TrimErrorType = ErrorType\n\nexport function trim<value extends ByteArray | Hex>(\n  hexOrBytes: value,\n  { dir = 'left' }: TrimOptions = {},\n): TrimReturnType<value> {\n  let data: any =\n    typeof hexOrBytes === 'string' ? hexOrBytes.replace('0x', '') : hexOrBytes\n\n  let sliceLength = 0\n  for (let i = 0; i < data.length - 1; i++) {\n    if (data[dir === 'left' ? i : data.length - i - 1].toString() === '0')\n      sliceLength++\n    else break\n  }\n  data =\n    dir === 'left'\n      ? data.slice(sliceLength)\n      : data.slice(0, data.length - sliceLength)\n\n  if (typeof hexOrBytes === 'string') {\n    if (data.length === 1 && dir === 'right') data = `${data}0`\n    return `0x${\n      data.length % 2 === 1 ? `0${data}` : data\n    }` as TrimReturnType<value>\n  }\n  return data as TrimReturnType<value>\n}\n"],"names":[],"mappings":";;;AAYM,SAAU,KACd,UAAiB,EACjB,EAAE,MAAM,MAAM,EAAA,GAAkB,CAAA,CAAE;IAElC,IAAI,OACF,OAAO,eAAe,WAAW,WAAW,OAAO,CAAC,MAAM,MAAM;IAElE,IAAI,cAAc;IAClB,IAAK,IAAI,IAAI,GAAG,IAAI,KAAK,MAAM,GAAG,GAAG,IAAK;QACxC,IAAI,IAAI,CAAC,QAAQ,SAAS,IAAI,KAAK,MAAM,GAAG,IAAI,EAAE,CAAC,QAAQ,OAAO,KAChE;aACG;IACP;IACA,OACE,QAAQ,SACJ,KAAK,KAAK,CAAC,eACX,KAAK,KAAK,CAAC,GAAG,KAAK,MAAM,GAAG;IAElC,IAAI,OAAO,eAAe,UAAU;QAClC,IAAI,KAAK,MAAM,KAAK,KAAK,QAAQ,SAAS,OAAO,CAAA,EAAG,KAAI,CAAA,CAAG;QAC3D,OAAO,CAAA,EAAA,EACL,KAAK,MAAM,GAAG,MAAM,IAAI,CAAA,CAAA,EAAI,KAAI,CAAE,GAAG,KACvC,CAA2B;IAC7B;IACA,OAAO;AACT"}},
    {"offset": {"line": 814, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 819, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/encoding/fromHex.ts"],"sourcesContent":["import {\n  InvalidHexBooleanError,\n  type InvalidHexBooleanErrorType,\n  SizeOverflowError,\n  type SizeOverflowErrorType,\n} from '../../errors/encoding.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { type SizeErrorType, size as size_ } from '../data/size.js'\nimport { type TrimErrorType, trim } from '../data/trim.js'\n\nimport { type HexToBytesErrorType, hexToBytes } from './toBytes.js'\n\nexport type AssertSizeErrorType =\n  | SizeOverflowErrorType\n  | SizeErrorType\n  | ErrorType\n\nexport function assertSize(\n  hexOrBytes: Hex | ByteArray,\n  { size }: { size: number },\n): void {\n  if (size_(hexOrBytes) > size)\n    throw new SizeOverflowError({\n      givenSize: size_(hexOrBytes),\n      maxSize: size,\n    })\n}\n\nexport type FromHexParameters<\n  to extends 'string' | 'bigint' | 'number' | 'bytes' | 'boolean',\n> =\n  | to\n  | {\n      /** Size (in bytes) of the hex value. */\n      size?: number | undefined\n      /** Type to convert to. */\n      to: to\n    }\n\nexport type FromHexReturnType<to> = to extends 'string'\n  ? string\n  : to extends 'bigint'\n    ? bigint\n    : to extends 'number'\n      ? number\n      : to extends 'bytes'\n        ? ByteArray\n        : to extends 'boolean'\n          ? boolean\n          : never\n\nexport type FromHexErrorType =\n  | HexToNumberErrorType\n  | HexToBigIntErrorType\n  | HexToBoolErrorType\n  | HexToStringErrorType\n  | HexToBytesErrorType\n  | ErrorType\n\n/**\n * Decodes a hex string into a string, number, bigint, boolean, or byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/fromHex\n * - Example: https://viem.sh/docs/utilities/fromHex#usage\n *\n * @param hex Hex string to decode.\n * @param toOrOpts Type to convert to or options.\n * @returns Decoded value.\n *\n * @example\n * import { fromHex } from 'viem'\n * const data = fromHex('0x1a4', 'number')\n * // 420\n *\n * @example\n * import { fromHex } from 'viem'\n * const data = fromHex('0x48656c6c6f20576f726c6421', 'string')\n * // 'Hello world'\n *\n * @example\n * import { fromHex } from 'viem'\n * const data = fromHex('0x48656c6c6f20576f726c64210000000000000000000000000000000000000000', {\n *   size: 32,\n *   to: 'string'\n * })\n * // 'Hello world'\n */\nexport function fromHex<\n  to extends 'string' | 'bigint' | 'number' | 'bytes' | 'boolean',\n>(hex: Hex, toOrOpts: FromHexParameters<to>): FromHexReturnType<to> {\n  const opts = typeof toOrOpts === 'string' ? { to: toOrOpts } : toOrOpts\n  const to = opts.to\n\n  if (to === 'number') return hexToNumber(hex, opts) as FromHexReturnType<to>\n  if (to === 'bigint') return hexToBigInt(hex, opts) as FromHexReturnType<to>\n  if (to === 'string') return hexToString(hex, opts) as FromHexReturnType<to>\n  if (to === 'boolean') return hexToBool(hex, opts) as FromHexReturnType<to>\n  return hexToBytes(hex, opts) as FromHexReturnType<to>\n}\n\nexport type HexToBigIntOpts = {\n  /** Whether or not the number of a signed representation. */\n  signed?: boolean | undefined\n  /** Size (in bytes) of the hex value. */\n  size?: number | undefined\n}\n\nexport type HexToBigIntErrorType = AssertSizeErrorType | ErrorType\n\n/**\n * Decodes a hex value into a bigint.\n *\n * - Docs: https://viem.sh/docs/utilities/fromHex#hextobigint\n *\n * @param hex Hex value to decode.\n * @param opts Options.\n * @returns BigInt value.\n *\n * @example\n * import { hexToBigInt } from 'viem'\n * const data = hexToBigInt('0x1a4', { signed: true })\n * // 420n\n *\n * @example\n * import { hexToBigInt } from 'viem'\n * const data = hexToBigInt('0x00000000000000000000000000000000000000000000000000000000000001a4', { size: 32 })\n * // 420n\n */\nexport function hexToBigInt(hex: Hex, opts: HexToBigIntOpts = {}): bigint {\n  const { signed } = opts\n\n  if (opts.size) assertSize(hex, { size: opts.size })\n\n  const value = BigInt(hex)\n  if (!signed) return value\n\n  const size = (hex.length - 2) / 2\n  const max = (1n << (BigInt(size) * 8n - 1n)) - 1n\n  if (value <= max) return value\n\n  return value - BigInt(`0x${'f'.padStart(size * 2, 'f')}`) - 1n\n}\n\nexport type HexToBoolOpts = {\n  /** Size (in bytes) of the hex value. */\n  size?: number | undefined\n}\n\nexport type HexToBoolErrorType =\n  | AssertSizeErrorType\n  | InvalidHexBooleanErrorType\n  | TrimErrorType\n  | ErrorType\n\n/**\n * Decodes a hex value into a boolean.\n *\n * - Docs: https://viem.sh/docs/utilities/fromHex#hextobool\n *\n * @param hex Hex value to decode.\n * @param opts Options.\n * @returns Boolean value.\n *\n * @example\n * import { hexToBool } from 'viem'\n * const data = hexToBool('0x01')\n * // true\n *\n * @example\n * import { hexToBool } from 'viem'\n * const data = hexToBool('0x0000000000000000000000000000000000000000000000000000000000000001', { size: 32 })\n * // true\n */\nexport function hexToBool(hex_: Hex, opts: HexToBoolOpts = {}): boolean {\n  let hex = hex_\n  if (opts.size) {\n    assertSize(hex, { size: opts.size })\n    hex = trim(hex)\n  }\n  if (trim(hex) === '0x00') return false\n  if (trim(hex) === '0x01') return true\n  throw new InvalidHexBooleanError(hex)\n}\n\nexport type HexToNumberOpts = HexToBigIntOpts\n\nexport type HexToNumberErrorType = HexToBigIntErrorType | ErrorType\n\n/**\n * Decodes a hex string into a number.\n *\n * - Docs: https://viem.sh/docs/utilities/fromHex#hextonumber\n *\n * @param hex Hex value to decode.\n * @param opts Options.\n * @returns Number value.\n *\n * @example\n * import { hexToNumber } from 'viem'\n * const data = hexToNumber('0x1a4')\n * // 420\n *\n * @example\n * import { hexToNumber } from 'viem'\n * const data = hexToBigInt('0x00000000000000000000000000000000000000000000000000000000000001a4', { size: 32 })\n * // 420\n */\nexport function hexToNumber(hex: Hex, opts: HexToNumberOpts = {}): number {\n  return Number(hexToBigInt(hex, opts))\n}\n\nexport type HexToStringOpts = {\n  /** Size (in bytes) of the hex value. */\n  size?: number | undefined\n}\n\nexport type HexToStringErrorType =\n  | AssertSizeErrorType\n  | HexToBytesErrorType\n  | TrimErrorType\n  | ErrorType\n\n/**\n * Decodes a hex value into a UTF-8 string.\n *\n * - Docs: https://viem.sh/docs/utilities/fromHex#hextostring\n *\n * @param hex Hex value to decode.\n * @param opts Options.\n * @returns String value.\n *\n * @example\n * import { hexToString } from 'viem'\n * const data = hexToString('0x48656c6c6f20576f726c6421')\n * // 'Hello world!'\n *\n * @example\n * import { hexToString } from 'viem'\n * const data = hexToString('0x48656c6c6f20576f726c64210000000000000000000000000000000000000000', {\n *  size: 32,\n * })\n * // 'Hello world'\n */\nexport function hexToString(hex: Hex, opts: HexToStringOpts = {}): string {\n  let bytes = hexToBytes(hex)\n  if (opts.size) {\n    assertSize(bytes, { size: opts.size })\n    bytes = trim(bytes, { dir: 'right' })\n  }\n  return new TextDecoder().decode(bytes)\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAkBM,SAAU,WACd,UAA2B,EAC3B,EAAE,IAAI,EAAoB;IAE1B,IAAI,CAAA,GAAA,iJAAA,CAAA,OAAK,AAAL,EAAM,cAAc,MACtB,MAAM,IAAI,8IAAA,CAAA,oBAAiB,CAAC;QAC1B,WAAW,CAAA,GAAA,iJAAA,CAAA,OAAK,AAAL,EAAM;QACjB,SAAS;;AAEf;AA6DM,SAAU,QAEd,GAAQ,EAAE,QAA+B;IACzC,MAAM,OAAO,OAAO,aAAa,WAAW;QAAE,IAAI;IAAQ,IAAK;IAC/D,MAAM,KAAK,KAAK,EAAE;IAElB,IAAI,OAAO,UAAU,OAAO,YAAY,KAAK;IAC7C,IAAI,OAAO,UAAU,OAAO,YAAY,KAAK;IAC7C,IAAI,OAAO,UAAU,OAAO,YAAY,KAAK;IAC7C,IAAI,OAAO,WAAW,OAAO,UAAU,KAAK;IAC5C,OAAO,CAAA,GAAA,wJAAA,CAAA,aAAU,AAAV,EAAW,KAAK;AACzB;AA8BM,SAAU,YAAY,GAAQ,EAAE,OAAwB,CAAA,CAAE;IAC9D,MAAM,EAAE,MAAM,EAAE,GAAG;IAEnB,IAAI,KAAK,IAAI,EAAE,WAAW,KAAK;QAAE,MAAM,KAAK,IAAI;IAAA;IAEhD,MAAM,QAAQ,OAAO;IACrB,IAAI,CAAC,QAAQ,OAAO;IAEpB,MAAM,OAAO,CAAC,IAAI,MAAM,GAAG,CAAC,IAAI;IAChC,MAAM,MAAM,CAAC,EAAE,IAAK,OAAO,QAAQ,EAAE,GAAG,EAAE,AAAC,IAAI,EAAE;IACjD,IAAI,SAAS,KAAK,OAAO;IAEzB,OAAO,QAAQ,OAAO,CAAA,EAAA,EAAK,IAAI,QAAQ,CAAC,OAAO,GAAG,KAAI,CAAE,IAAI,EAAE;AAChE;AAgCM,SAAU,UAAU,IAAS,EAAE,OAAsB,CAAA,CAAE;IAC3D,IAAI,MAAM;IACV,IAAI,KAAK,IAAI,EAAE;QACb,WAAW,KAAK;YAAE,MAAM,KAAK,IAAI;QAAA;QACjC,MAAM,CAAA,GAAA,iJAAA,CAAA,OAAI,AAAJ,EAAK;IACb;IACA,IAAI,CAAA,GAAA,iJAAA,CAAA,OAAI,AAAJ,EAAK,SAAS,QAAQ,OAAO;IACjC,IAAI,CAAA,GAAA,iJAAA,CAAA,OAAI,AAAJ,EAAK,SAAS,QAAQ,OAAO;IACjC,MAAM,IAAI,8IAAA,CAAA,yBAAsB,CAAC;AACnC;AAyBM,SAAU,YAAY,GAAQ,EAAE,OAAwB,CAAA,CAAE;IAC9D,OAAO,OAAO,YAAY,KAAK;AACjC;AAkCM,SAAU,YAAY,GAAQ,EAAE,OAAwB,CAAA,CAAE;IAC9D,IAAI,QAAQ,CAAA,GAAA,wJAAA,CAAA,aAAU,AAAV,EAAW;IACvB,IAAI,KAAK,IAAI,EAAE;QACb,WAAW,OAAO;YAAE,MAAM,KAAK,IAAI;QAAA;QACnC,QAAQ,CAAA,GAAA,iJAAA,CAAA,OAAI,AAAJ,EAAK,OAAO;YAAE,KAAK;QAAO;IACpC;IACA,OAAO,IAAI,cAAc,MAAM,CAAC;AAClC"}},
    {"offset": {"line": 892, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 897, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/encoding/toHex.ts"],"sourcesContent":["import {\n  IntegerOutOfRangeError,\n  type IntegerOutOfRangeErrorType,\n} from '../../errors/encoding.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { type PadErrorType, pad } from '../data/pad.js'\n\nimport { type AssertSizeErrorType, assertSize } from './fromHex.js'\n\nconst hexes = /*#__PURE__*/ Array.from({ length: 256 }, (_v, i) =>\n  i.toString(16).padStart(2, '0'),\n)\n\nexport type ToHexParameters = {\n  /** The size (in bytes) of the output hex value. */\n  size?: number | undefined\n}\n\nexport type ToHexErrorType =\n  | BoolToHexErrorType\n  | BytesToHexErrorType\n  | NumberToHexErrorType\n  | StringToHexErrorType\n  | ErrorType\n\n/**\n * Encodes a string, number, bigint, or ByteArray into a hex string\n *\n * - Docs: https://viem.sh/docs/utilities/toHex\n * - Example: https://viem.sh/docs/utilities/toHex#usage\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Hex value.\n *\n * @example\n * import { toHex } from 'viem'\n * const data = toHex('Hello world')\n * // '0x48656c6c6f20776f726c6421'\n *\n * @example\n * import { toHex } from 'viem'\n * const data = toHex(420)\n * // '0x1a4'\n *\n * @example\n * import { toHex } from 'viem'\n * const data = toHex('Hello world', { size: 32 })\n * // '0x48656c6c6f20776f726c64210000000000000000000000000000000000000000'\n */\nexport function toHex(\n  value: string | number | bigint | boolean | ByteArray,\n  opts: ToHexParameters = {},\n): Hex {\n  if (typeof value === 'number' || typeof value === 'bigint')\n    return numberToHex(value, opts)\n  if (typeof value === 'string') {\n    return stringToHex(value, opts)\n  }\n  if (typeof value === 'boolean') return boolToHex(value, opts)\n  return bytesToHex(value, opts)\n}\n\nexport type BoolToHexOpts = {\n  /** The size (in bytes) of the output hex value. */\n  size?: number | undefined\n}\n\nexport type BoolToHexErrorType = AssertSizeErrorType | PadErrorType | ErrorType\n\n/**\n * Encodes a boolean into a hex string\n *\n * - Docs: https://viem.sh/docs/utilities/toHex#booltohex\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Hex value.\n *\n * @example\n * import { boolToHex } from 'viem'\n * const data = boolToHex(true)\n * // '0x1'\n *\n * @example\n * import { boolToHex } from 'viem'\n * const data = boolToHex(false)\n * // '0x0'\n *\n * @example\n * import { boolToHex } from 'viem'\n * const data = boolToHex(true, { size: 32 })\n * // '0x0000000000000000000000000000000000000000000000000000000000000001'\n */\nexport function boolToHex(value: boolean, opts: BoolToHexOpts = {}): Hex {\n  const hex: Hex = `0x${Number(value)}`\n  if (typeof opts.size === 'number') {\n    assertSize(hex, { size: opts.size })\n    return pad(hex, { size: opts.size })\n  }\n  return hex\n}\n\nexport type BytesToHexOpts = {\n  /** The size (in bytes) of the output hex value. */\n  size?: number | undefined\n}\n\nexport type BytesToHexErrorType = AssertSizeErrorType | PadErrorType | ErrorType\n\n/**\n * Encodes a bytes array into a hex string\n *\n * - Docs: https://viem.sh/docs/utilities/toHex#bytestohex\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Hex value.\n *\n * @example\n * import { bytesToHex } from 'viem'\n * const data = bytesToHex(Uint8Array.from([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])\n * // '0x48656c6c6f20576f726c6421'\n *\n * @example\n * import { bytesToHex } from 'viem'\n * const data = bytesToHex(Uint8Array.from([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33]), { size: 32 })\n * // '0x48656c6c6f20576f726c64210000000000000000000000000000000000000000'\n */\nexport function bytesToHex(value: ByteArray, opts: BytesToHexOpts = {}): Hex {\n  let string = ''\n  for (let i = 0; i < value.length; i++) {\n    string += hexes[value[i]]\n  }\n  const hex = `0x${string}` as const\n\n  if (typeof opts.size === 'number') {\n    assertSize(hex, { size: opts.size })\n    return pad(hex, { dir: 'right', size: opts.size })\n  }\n  return hex\n}\n\nexport type NumberToHexOpts =\n  | {\n      /** Whether or not the number of a signed representation. */\n      signed?: boolean | undefined\n      /** The size (in bytes) of the output hex value. */\n      size: number\n    }\n  | {\n      signed?: undefined\n      /** The size (in bytes) of the output hex value. */\n      size?: number | undefined\n    }\n\nexport type NumberToHexErrorType =\n  | IntegerOutOfRangeErrorType\n  | PadErrorType\n  | ErrorType\n\n/**\n * Encodes a number or bigint into a hex string\n *\n * - Docs: https://viem.sh/docs/utilities/toHex#numbertohex\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Hex value.\n *\n * @example\n * import { numberToHex } from 'viem'\n * const data = numberToHex(420)\n * // '0x1a4'\n *\n * @example\n * import { numberToHex } from 'viem'\n * const data = numberToHex(420, { size: 32 })\n * // '0x00000000000000000000000000000000000000000000000000000000000001a4'\n */\nexport function numberToHex(\n  value_: number | bigint,\n  opts: NumberToHexOpts = {},\n): Hex {\n  const { signed, size } = opts\n\n  const value = BigInt(value_)\n\n  let maxValue: bigint | number | undefined\n  if (size) {\n    if (signed) maxValue = (1n << (BigInt(size) * 8n - 1n)) - 1n\n    else maxValue = 2n ** (BigInt(size) * 8n) - 1n\n  } else if (typeof value_ === 'number') {\n    maxValue = BigInt(Number.MAX_SAFE_INTEGER)\n  }\n\n  const minValue = typeof maxValue === 'bigint' && signed ? -maxValue - 1n : 0\n\n  if ((maxValue && value > maxValue) || value < minValue) {\n    const suffix = typeof value_ === 'bigint' ? 'n' : ''\n    throw new IntegerOutOfRangeError({\n      max: maxValue ? `${maxValue}${suffix}` : undefined,\n      min: `${minValue}${suffix}`,\n      signed,\n      size,\n      value: `${value_}${suffix}`,\n    })\n  }\n\n  const hex = `0x${(\n    signed && value < 0 ? (1n << BigInt(size * 8)) + BigInt(value) : value\n  ).toString(16)}` as Hex\n  if (size) return pad(hex, { size }) as Hex\n  return hex\n}\n\nexport type StringToHexOpts = {\n  /** The size (in bytes) of the output hex value. */\n  size?: number | undefined\n}\n\nexport type StringToHexErrorType = BytesToHexErrorType | ErrorType\n\nconst encoder = /*#__PURE__*/ new TextEncoder()\n\n/**\n * Encodes a UTF-8 string into a hex string\n *\n * - Docs: https://viem.sh/docs/utilities/toHex#stringtohex\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Hex value.\n *\n * @example\n * import { stringToHex } from 'viem'\n * const data = stringToHex('Hello World!')\n * // '0x48656c6c6f20576f726c6421'\n *\n * @example\n * import { stringToHex } from 'viem'\n * const data = stringToHex('Hello World!', { size: 32 })\n * // '0x48656c6c6f20576f726c64210000000000000000000000000000000000000000'\n */\nexport function stringToHex(value_: string, opts: StringToHexOpts = {}): Hex {\n  const value = encoder.encode(value_)\n  return bytesToHex(value, opts)\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 983, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 988, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/encoding/toBytes.ts"],"sourcesContent":["import { BaseError } from '../../errors/base.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { type IsHexErrorType, isHex } from '../data/isHex.js'\nimport { type PadErrorType, pad } from '../data/pad.js'\n\nimport { type AssertSizeErrorType, assertSize } from './fromHex.js'\nimport {\n  type NumberToHexErrorType,\n  type NumberToHexOpts,\n  numberToHex,\n} from './toHex.js'\n\nconst encoder = /*#__PURE__*/ new TextEncoder()\n\nexport type ToBytesParameters = {\n  /** Size of the output bytes. */\n  size?: number | undefined\n}\n\nexport type ToBytesErrorType =\n  | NumberToBytesErrorType\n  | BoolToBytesErrorType\n  | HexToBytesErrorType\n  | StringToBytesErrorType\n  | IsHexErrorType\n  | ErrorType\n\n/**\n * Encodes a UTF-8 string, hex value, bigint, number or boolean to a byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/toBytes\n * - Example: https://viem.sh/docs/utilities/toBytes#usage\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Byte array value.\n *\n * @example\n * import { toBytes } from 'viem'\n * const data = toBytes('Hello world')\n * // Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])\n *\n * @example\n * import { toBytes } from 'viem'\n * const data = toBytes(420)\n * // Uint8Array([1, 164])\n *\n * @example\n * import { toBytes } from 'viem'\n * const data = toBytes(420, { size: 4 })\n * // Uint8Array([0, 0, 1, 164])\n */\nexport function toBytes(\n  value: string | bigint | number | boolean | Hex,\n  opts: ToBytesParameters = {},\n): ByteArray {\n  if (typeof value === 'number' || typeof value === 'bigint')\n    return numberToBytes(value, opts)\n  if (typeof value === 'boolean') return boolToBytes(value, opts)\n  if (isHex(value)) return hexToBytes(value, opts)\n  return stringToBytes(value, opts)\n}\n\nexport type BoolToBytesOpts = {\n  /** Size of the output bytes. */\n  size?: number | undefined\n}\n\nexport type BoolToBytesErrorType =\n  | AssertSizeErrorType\n  | PadErrorType\n  | ErrorType\n\n/**\n * Encodes a boolean into a byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/toBytes#booltobytes\n *\n * @param value Boolean value to encode.\n * @param opts Options.\n * @returns Byte array value.\n *\n * @example\n * import { boolToBytes } from 'viem'\n * const data = boolToBytes(true)\n * // Uint8Array([1])\n *\n * @example\n * import { boolToBytes } from 'viem'\n * const data = boolToBytes(true, { size: 32 })\n * // Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1])\n */\nexport function boolToBytes(value: boolean, opts: BoolToBytesOpts = {}) {\n  const bytes = new Uint8Array(1)\n  bytes[0] = Number(value)\n  if (typeof opts.size === 'number') {\n    assertSize(bytes, { size: opts.size })\n    return pad(bytes, { size: opts.size })\n  }\n  return bytes\n}\n\n// We use very optimized technique to convert hex string to byte array\nconst charCodeMap = {\n  zero: 48,\n  nine: 57,\n  A: 65,\n  F: 70,\n  a: 97,\n  f: 102,\n} as const\n\nfunction charCodeToBase16(char: number) {\n  if (char >= charCodeMap.zero && char <= charCodeMap.nine)\n    return char - charCodeMap.zero\n  if (char >= charCodeMap.A && char <= charCodeMap.F)\n    return char - (charCodeMap.A - 10)\n  if (char >= charCodeMap.a && char <= charCodeMap.f)\n    return char - (charCodeMap.a - 10)\n  return undefined\n}\n\nexport type HexToBytesOpts = {\n  /** Size of the output bytes. */\n  size?: number | undefined\n}\n\nexport type HexToBytesErrorType = AssertSizeErrorType | PadErrorType | ErrorType\n\n/**\n * Encodes a hex string into a byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/toBytes#hextobytes\n *\n * @param hex Hex string to encode.\n * @param opts Options.\n * @returns Byte array value.\n *\n * @example\n * import { hexToBytes } from 'viem'\n * const data = hexToBytes('0x48656c6c6f20776f726c6421')\n * // Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])\n *\n * @example\n * import { hexToBytes } from 'viem'\n * const data = hexToBytes('0x48656c6c6f20776f726c6421', { size: 32 })\n * // Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\n */\nexport function hexToBytes(hex_: Hex, opts: HexToBytesOpts = {}): ByteArray {\n  let hex = hex_\n  if (opts.size) {\n    assertSize(hex, { size: opts.size })\n    hex = pad(hex, { dir: 'right', size: opts.size })\n  }\n\n  let hexString = hex.slice(2) as string\n  if (hexString.length % 2) hexString = `0${hexString}`\n\n  const length = hexString.length / 2\n  const bytes = new Uint8Array(length)\n  for (let index = 0, j = 0; index < length; index++) {\n    const nibbleLeft = charCodeToBase16(hexString.charCodeAt(j++))\n    const nibbleRight = charCodeToBase16(hexString.charCodeAt(j++))\n    if (nibbleLeft === undefined || nibbleRight === undefined) {\n      throw new BaseError(\n        `Invalid byte sequence (\"${hexString[j - 2]}${\n          hexString[j - 1]\n        }\" in \"${hexString}\").`,\n      )\n    }\n    bytes[index] = nibbleLeft * 16 + nibbleRight\n  }\n  return bytes\n}\n\nexport type NumberToBytesErrorType =\n  | NumberToHexErrorType\n  | HexToBytesErrorType\n  | ErrorType\n\n/**\n * Encodes a number into a byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/toBytes#numbertobytes\n *\n * @param value Number to encode.\n * @param opts Options.\n * @returns Byte array value.\n *\n * @example\n * import { numberToBytes } from 'viem'\n * const data = numberToBytes(420)\n * // Uint8Array([1, 164])\n *\n * @example\n * import { numberToBytes } from 'viem'\n * const data = numberToBytes(420, { size: 4 })\n * // Uint8Array([0, 0, 1, 164])\n */\nexport function numberToBytes(\n  value: bigint | number,\n  opts?: NumberToHexOpts | undefined,\n) {\n  const hex = numberToHex(value, opts)\n  return hexToBytes(hex)\n}\n\nexport type StringToBytesOpts = {\n  /** Size of the output bytes. */\n  size?: number | undefined\n}\n\nexport type StringToBytesErrorType =\n  | AssertSizeErrorType\n  | PadErrorType\n  | ErrorType\n\n/**\n * Encodes a UTF-8 string into a byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/toBytes#stringtobytes\n *\n * @param value String to encode.\n * @param opts Options.\n * @returns Byte array value.\n *\n * @example\n * import { stringToBytes } from 'viem'\n * const data = stringToBytes('Hello world!')\n * // Uint8Array([72, 101, 108, 108, 111, 32, 119, 111, 114, 108, 100, 33])\n *\n * @example\n * import { stringToBytes } from 'viem'\n * const data = stringToBytes('Hello world!', { size: 32 })\n * // Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\n */\nexport function stringToBytes(\n  value: string,\n  opts: StringToBytesOpts = {},\n): ByteArray {\n  const bytes = encoder.encode(value)\n  if (typeof opts.size === 'number') {\n    assertSize(bytes, { size: opts.size })\n    return pad(bytes, { dir: 'right', size: opts.size })\n  }\n  return bytes\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1083, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1088, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/hash/keccak256.ts"],"sourcesContent":["import { keccak_256 } from '@noble/hashes/sha3'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { type IsHexErrorType, isHex } from '../data/isHex.js'\nimport { type ToBytesErrorType, toBytes } from '../encoding/toBytes.js'\nimport { type ToHexErrorType, toHex } from '../encoding/toHex.js'\n\ntype To = 'hex' | 'bytes'\n\nexport type Keccak256Hash<to extends To> =\n  | (to extends 'bytes' ? ByteArray : never)\n  | (to extends 'hex' ? Hex : never)\n\nexport type Keccak256ErrorType =\n  | IsHexErrorType\n  | ToBytesErrorType\n  | ToHexErrorType\n  | ErrorType\n\nexport function keccak256<to extends To = 'hex'>(\n  value: Hex | ByteArray,\n  to_?: to | undefined,\n): Keccak256Hash<to> {\n  const to = to_ || 'hex'\n  const bytes = keccak_256(\n    isHex(value, { strict: false }) ? toBytes(value) : value,\n  )\n  if (to === 'bytes') return bytes as Keccak256Hash<to>\n  return toHex(bytes) as Keccak256Hash<to>\n}\n"],"names":[],"mappings":";;;;;;;;;;;;AAoBM,SAAU,UACd,KAAsB,EACtB,GAAoB;IAEpB,MAAM,KAAK,OAAO;IAClB,MAAM,QAAQ,CAAA,GAAA,4IAAA,CAAA,aAAU,AAAV,EACZ,CAAA,GAAA,kJAAA,CAAA,QAAK,AAAL,EAAM,OAAO;QAAE,QAAQ;IAAK,KAAM,CAAA,GAAA,wJAAA,CAAA,UAAO,AAAP,EAAQ,SAAS;IAErD,IAAI,OAAO,SAAS,OAAO;IAC3B,OAAO,CAAA,GAAA,sJAAA,CAAA,QAAK,AAAL,EAAM;AACf"}},
    {"offset": {"line": 1108, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1113, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/lru.ts"],"sourcesContent":["/**\n * Map with a LRU (Least recently used) policy.\n *\n * @link https://en.wikipedia.org/wiki/Cache_replacement_policies#LRU\n */\nexport class LruMap<value = unknown> extends Map<string, value> {\n  maxSize: number\n\n  constructor(size: number) {\n    super()\n    this.maxSize = size\n  }\n\n  override get(key: string) {\n    const value = super.get(key)\n\n    if (super.has(key) && value !== undefined) {\n      this.delete(key)\n      super.set(key, value)\n    }\n\n    return value\n  }\n\n  override set(key: string, value: value) {\n    super.set(key, value)\n    if (this.maxSize && this.size > this.maxSize) {\n      const firstKey = this.keys().next().value\n      if (firstKey) this.delete(firstKey)\n    }\n    return this\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;;;;AAKM,MAAO,eAAgC;IAG3C,YAAY,IAAY,CAAA;QACtB,KAAK;QAHP,OAAA,cAAA,CAAA,IAAA,EAAA,WAAA;;;;;;QAIE,IAAI,CAAC,OAAO,GAAG;IACjB;IAES,IAAI,GAAW,EAAA;QACtB,MAAM,QAAQ,KAAK,CAAC,IAAI;QAExB,IAAI,KAAK,CAAC,IAAI,QAAQ,UAAU,WAAW;YACzC,IAAI,CAAC,MAAM,CAAC;YACZ,KAAK,CAAC,IAAI,KAAK;QACjB;QAEA,OAAO;IACT;IAES,IAAI,GAAW,EAAE,KAAY,EAAA;QACpC,KAAK,CAAC,IAAI,KAAK;QACf,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,EAAE;YAC5C,MAAM,WAAW,IAAI,CAAC,IAAI,GAAG,IAAI,GAAG,KAAK;YACzC,IAAI,UAAU,IAAI,CAAC,MAAM,CAAC;QAC5B;QACA,OAAO,IAAI;IACb"}},
    {"offset": {"line": 1148, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1153, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/address/isAddress.ts"],"sourcesContent":["import type { Address } from 'abitype'\nimport type { ErrorType } from '../../errors/utils.js'\nimport { LruMap } from '../lru.js'\nimport { checksumAddress } from './getAddress.js'\n\nconst addressRegex = /^0x[a-fA-F0-9]{40}$/\n\n/** @internal */\nexport const isAddressCache = /*#__PURE__*/ new LruMap<boolean>(8192)\n\nexport type IsAddressOptions = {\n  /**\n   * Enables strict mode. Whether or not to compare the address against its checksum.\n   *\n   * @default true\n   */\n  strict?: boolean | undefined\n}\n\nexport type IsAddressErrorType = ErrorType\n\nexport function isAddress(\n  address: string,\n  options?: IsAddressOptions | undefined,\n): address is Address {\n  const { strict = true } = options ?? {}\n  const cacheKey = `${address}.${strict}`\n\n  if (isAddressCache.has(cacheKey)) return isAddressCache.get(cacheKey)!\n\n  const result = (() => {\n    if (!addressRegex.test(address)) return false\n    if (address.toLowerCase() === address) return true\n    if (strict) return checksumAddress(address as Address) === address\n    return true\n  })()\n  isAddressCache.set(cacheKey, result)\n  return result\n}\n"],"names":[],"mappings":";;;;;;;;;AAKA,MAAM,eAAe;AAGd,MAAM,iBAAiB,WAAA,GAAc,IAAI,wIAAA,CAAA,SAAM,CAAU;AAa1D,SAAU,UACd,OAAe,EACf,OAAsC;IAEtC,MAAM,EAAE,SAAS,IAAI,EAAE,GAAG,WAAW,CAAA;IACrC,MAAM,WAAW,CAAA,EAAG,QAAO,CAAA,EAAI,OAAM,CAAE;IAEvC,IAAI,eAAe,GAAG,CAAC,WAAW,OAAO,eAAe,GAAG,CAAC;IAE5D,MAAM,SAAS,CAAC;QACd,IAAI,CAAC,aAAa,IAAI,CAAC,UAAU,OAAO;QACxC,IAAI,QAAQ,WAAW,OAAO,SAAS,OAAO;QAC9C,IAAI,QAAQ,OAAO,CAAA,GAAA,0JAAA,CAAA,kBAAe,AAAf,EAAgB,aAAwB;QAC3D,OAAO;IACT,CAAC;IACD,eAAe,GAAG,CAAC,UAAU;IAC7B,OAAO;AACT"}},
    {"offset": {"line": 1177, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1182, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/address/getAddress.ts"],"sourcesContent":["import type { Address } from 'abitype'\n\nimport { InvalidAddressError } from '../../errors/address.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport {\n  type StringToBytesErrorType,\n  stringToBytes,\n} from '../encoding/toBytes.js'\nimport { type Keccak256ErrorType, keccak256 } from '../hash/keccak256.js'\nimport { LruMap } from '../lru.js'\nimport { type IsAddressErrorType, isAddress } from './isAddress.js'\n\nconst checksumAddressCache = /*#__PURE__*/ new LruMap<Address>(8192)\n\nexport type ChecksumAddressErrorType =\n  | Keccak256ErrorType\n  | StringToBytesErrorType\n  | ErrorType\n\nexport function checksumAddress(\n  address_: Address,\n  /**\n   * Warning: EIP-1191 checksum addresses are generally not backwards compatible with the\n   * wider Ethereum ecosystem, meaning it will break when validated against an application/tool\n   * that relies on EIP-55 checksum encoding (checksum without chainId).\n   *\n   * It is highly recommended to not use this feature unless you\n   * know what you are doing.\n   *\n   * See more: https://github.com/ethereum/EIPs/issues/1121\n   */\n  chainId?: number | undefined,\n): Address {\n  if (checksumAddressCache.has(`${address_}.${chainId}`))\n    return checksumAddressCache.get(`${address_}.${chainId}`)!\n\n  const hexAddress = chainId\n    ? `${chainId}${address_.toLowerCase()}`\n    : address_.substring(2).toLowerCase()\n  const hash = keccak256(stringToBytes(hexAddress), 'bytes')\n\n  const address = (\n    chainId ? hexAddress.substring(`${chainId}0x`.length) : hexAddress\n  ).split('')\n  for (let i = 0; i < 40; i += 2) {\n    if (hash[i >> 1] >> 4 >= 8 && address[i]) {\n      address[i] = address[i].toUpperCase()\n    }\n    if ((hash[i >> 1] & 0x0f) >= 8 && address[i + 1]) {\n      address[i + 1] = address[i + 1].toUpperCase()\n    }\n  }\n\n  const result = `0x${address.join('')}` as const\n  checksumAddressCache.set(`${address_}.${chainId}`, result)\n  return result\n}\n\nexport type GetAddressErrorType =\n  | ChecksumAddressErrorType\n  | IsAddressErrorType\n  | ErrorType\n\nexport function getAddress(\n  address: string,\n  /**\n   * Warning: EIP-1191 checksum addresses are generally not backwards compatible with the\n   * wider Ethereum ecosystem, meaning it will break when validated against an application/tool\n   * that relies on EIP-55 checksum encoding (checksum without chainId).\n   *\n   * It is highly recommended to not use this feature unless you\n   * know what you are doing.\n   *\n   * See more: https://github.com/ethereum/EIPs/issues/1121\n   */\n  chainId?: number,\n): Address {\n  if (!isAddress(address, { strict: false }))\n    throw new InvalidAddressError({ address })\n  return checksumAddress(address, chainId)\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;AAYA,MAAM,uBAAuB,WAAA,GAAc,IAAI,wIAAA,CAAA,SAAM,CAAU;AAOzD,SAAU,gBACd,QAAiB,EACjB;;;;;;;;;IAUA,OAA4B;IAE5B,IAAI,qBAAqB,GAAG,CAAC,CAAA,EAAG,SAAQ,CAAA,EAAI,QAAO,CAAE,GACnD,OAAO,qBAAqB,GAAG,CAAC,CAAA,EAAG,SAAQ,CAAA,EAAI,QAAO,CAAE;IAE1D,MAAM,aAAa,UACf,CAAA,EAAG,QAAO,EAAG,SAAS,WAAW,GAAE,CAAE,GACrC,SAAS,SAAS,CAAC,GAAG,WAAW;IACrC,MAAM,OAAO,CAAA,GAAA,sJAAA,CAAA,YAAS,AAAT,EAAU,CAAA,GAAA,wJAAA,CAAA,gBAAa,AAAb,EAAc,aAAa;IAElD,MAAM,UAAU,CACd,UAAU,WAAW,SAAS,CAAC,CAAA,EAAG,QAAO,EAAA,CAAI,CAAC,MAAM,IAAI,UAAU,EAClE,KAAK,CAAC;IACR,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,KAAK,EAAG;QAC9B,IAAI,IAAI,CAAC,KAAK,EAAE,IAAI,KAAK,KAAK,OAAO,CAAC,EAAE,EAAE;YACxC,OAAO,CAAC,EAAE,GAAG,OAAO,CAAC,EAAE,CAAC,WAAW;QACrC;QACA,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,IAAI,KAAK,KAAK,OAAO,CAAC,IAAI,EAAE,EAAE;YAChD,OAAO,CAAC,IAAI,EAAE,GAAG,OAAO,CAAC,IAAI,EAAE,CAAC,WAAW;QAC7C;IACF;IAEA,MAAM,SAAS,CAAA,EAAA,EAAK,QAAQ,IAAI,CAAC,IAAG,CAAW;IAC/C,qBAAqB,GAAG,CAAC,CAAA,EAAG,SAAQ,CAAA,EAAI,QAAO,CAAE,EAAE;IACnD,OAAO;AACT;AAOM,SAAU,WACd,OAAe,EACf;;;;;;;;;IAUA,OAAgB;IAEhB,IAAI,CAAC,CAAA,GAAA,yJAAA,CAAA,YAAS,AAAT,EAAU,SAAS;QAAE,QAAQ;IAAK,IACrC,MAAM,IAAI,6IAAA,CAAA,sBAAmB,CAAC;QAAE;IAAO;IACzC,OAAO,gBAAgB,SAAS;AAClC"}},
    {"offset": {"line": 1241, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1246, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/errors/cursor.ts"],"sourcesContent":["import { BaseError } from './base.js'\n\nexport type NegativeOffsetErrorType = NegativeOffsetError & {\n  name: 'NegativeOffsetError'\n}\nexport class NegativeOffsetError extends BaseError {\n  constructor({ offset }: { offset: number }) {\n    super(`Offset \\`${offset}\\` cannot be negative.`, {\n      name: 'NegativeOffsetError',\n    })\n  }\n}\n\nexport type PositionOutOfBoundsErrorType = PositionOutOfBoundsError & {\n  name: 'PositionOutOfBoundsError'\n}\nexport class PositionOutOfBoundsError extends BaseError {\n  constructor({ length, position }: { length: number; position: number }) {\n    super(\n      `Position \\`${position}\\` is out of bounds (\\`0 < position < ${length}\\`).`,\n      { name: 'PositionOutOfBoundsError' },\n    )\n  }\n}\n\nexport type RecursiveReadLimitExceededErrorType =\n  RecursiveReadLimitExceededError & {\n    name: 'RecursiveReadLimitExceededError'\n  }\nexport class RecursiveReadLimitExceededError extends BaseError {\n  constructor({ count, limit }: { count: number; limit: number }) {\n    super(\n      `Recursive read limit of \\`${limit}\\` exceeded (recursive read count: \\`${count}\\`).`,\n      { name: 'RecursiveReadLimitExceededError' },\n    )\n  }\n}\n"],"names":[],"mappings":";;;;;;;;AAKM,MAAO,4BAA4B,0IAAA,CAAA,YAAS;IAChD,YAAY,EAAE,MAAM,EAAsB,CAAA;QACxC,KAAK,CAAC,CAAA,SAAA,EAAY,OAAM,sBAAA,CAAwB,EAAE;YAChD,MAAM;;IAEV;;AAMI,MAAO,iCAAiC,0IAAA,CAAA,YAAS;IACrD,YAAY,EAAE,MAAM,EAAE,QAAQ,EAAwC,CAAA;QACpE,KAAK,CACH,CAAA,WAAA,EAAc,SAAQ,sCAAA,EAAyC,OAAM,IAAA,CAAM,EAC3E;YAAE,MAAM;QAA0B;IAEtC;;AAOI,MAAO,wCAAwC,0IAAA,CAAA,YAAS;IAC5D,YAAY,EAAE,KAAK,EAAE,KAAK,EAAoC,CAAA;QAC5D,KAAK,CACH,CAAA,0BAAA,EAA6B,MAAK,qCAAA,EAAwC,MAAK,IAAA,CAAM,EACrF;YAAE,MAAM;QAAiC;IAE7C"}},
    {"offset": {"line": 1275, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1280, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/cursor.ts"],"sourcesContent":["import {\n  NegativeOffsetError,\n  type NegativeOffsetErrorType,\n  PositionOutOfBoundsError,\n  type PositionOutOfBoundsErrorType,\n  RecursiveReadLimitExceededError,\n  type RecursiveReadLimitExceededErrorType,\n} from '../errors/cursor.js'\nimport type { ErrorType } from '../errors/utils.js'\nimport type { ByteArray } from '../types/misc.js'\n\nexport type Cursor = {\n  bytes: ByteArray\n  dataView: DataView\n  position: number\n  positionReadCount: Map<number, number>\n  recursiveReadCount: number\n  recursiveReadLimit: number\n  remaining: number\n  assertReadLimit(position?: number): void\n  assertPosition(position: number): void\n  decrementPosition(offset: number): void\n  getReadCount(position?: number): number\n  incrementPosition(offset: number): void\n  inspectByte(position?: number): ByteArray[number]\n  inspectBytes(length: number, position?: number): ByteArray\n  inspectUint8(position?: number): number\n  inspectUint16(position?: number): number\n  inspectUint24(position?: number): number\n  inspectUint32(position?: number): number\n  pushByte(byte: ByteArray[number]): void\n  pushBytes(bytes: ByteArray): void\n  pushUint8(value: number): void\n  pushUint16(value: number): void\n  pushUint24(value: number): void\n  pushUint32(value: number): void\n  readByte(): ByteArray[number]\n  readBytes(length: number, size?: number): ByteArray\n  readUint8(): number\n  readUint16(): number\n  readUint24(): number\n  readUint32(): number\n  setPosition(position: number): () => void\n  _touch(): void\n}\n\ntype CursorErrorType =\n  | CursorAssertPositionErrorType\n  | CursorDecrementPositionErrorType\n  | CursorIncrementPositionErrorType\n  | ErrorType\n\ntype CursorAssertPositionErrorType = PositionOutOfBoundsErrorType | ErrorType\n\ntype CursorDecrementPositionErrorType = NegativeOffsetError | ErrorType\n\ntype CursorIncrementPositionErrorType = NegativeOffsetError | ErrorType\n\ntype StaticCursorErrorType =\n  | NegativeOffsetErrorType\n  | RecursiveReadLimitExceededErrorType\n\nconst staticCursor: Cursor = {\n  bytes: new Uint8Array(),\n  dataView: new DataView(new ArrayBuffer(0)),\n  position: 0,\n  positionReadCount: new Map(),\n  recursiveReadCount: 0,\n  recursiveReadLimit: Number.POSITIVE_INFINITY,\n  assertReadLimit() {\n    if (this.recursiveReadCount >= this.recursiveReadLimit)\n      throw new RecursiveReadLimitExceededError({\n        count: this.recursiveReadCount + 1,\n        limit: this.recursiveReadLimit,\n      })\n  },\n  assertPosition(position) {\n    if (position < 0 || position > this.bytes.length - 1)\n      throw new PositionOutOfBoundsError({\n        length: this.bytes.length,\n        position,\n      })\n  },\n  decrementPosition(offset) {\n    if (offset < 0) throw new NegativeOffsetError({ offset })\n    const position = this.position - offset\n    this.assertPosition(position)\n    this.position = position\n  },\n  getReadCount(position) {\n    return this.positionReadCount.get(position || this.position) || 0\n  },\n  incrementPosition(offset) {\n    if (offset < 0) throw new NegativeOffsetError({ offset })\n    const position = this.position + offset\n    this.assertPosition(position)\n    this.position = position\n  },\n  inspectByte(position_) {\n    const position = position_ ?? this.position\n    this.assertPosition(position)\n    return this.bytes[position]\n  },\n  inspectBytes(length, position_) {\n    const position = position_ ?? this.position\n    this.assertPosition(position + length - 1)\n    return this.bytes.subarray(position, position + length)\n  },\n  inspectUint8(position_) {\n    const position = position_ ?? this.position\n    this.assertPosition(position)\n    return this.bytes[position]\n  },\n  inspectUint16(position_) {\n    const position = position_ ?? this.position\n    this.assertPosition(position + 1)\n    return this.dataView.getUint16(position)\n  },\n  inspectUint24(position_) {\n    const position = position_ ?? this.position\n    this.assertPosition(position + 2)\n    return (\n      (this.dataView.getUint16(position) << 8) +\n      this.dataView.getUint8(position + 2)\n    )\n  },\n  inspectUint32(position_) {\n    const position = position_ ?? this.position\n    this.assertPosition(position + 3)\n    return this.dataView.getUint32(position)\n  },\n  pushByte(byte: ByteArray[number]) {\n    this.assertPosition(this.position)\n    this.bytes[this.position] = byte\n    this.position++\n  },\n  pushBytes(bytes: ByteArray) {\n    this.assertPosition(this.position + bytes.length - 1)\n    this.bytes.set(bytes, this.position)\n    this.position += bytes.length\n  },\n  pushUint8(value: number) {\n    this.assertPosition(this.position)\n    this.bytes[this.position] = value\n    this.position++\n  },\n  pushUint16(value: number) {\n    this.assertPosition(this.position + 1)\n    this.dataView.setUint16(this.position, value)\n    this.position += 2\n  },\n  pushUint24(value: number) {\n    this.assertPosition(this.position + 2)\n    this.dataView.setUint16(this.position, value >> 8)\n    this.dataView.setUint8(this.position + 2, value & ~4294967040)\n    this.position += 3\n  },\n  pushUint32(value: number) {\n    this.assertPosition(this.position + 3)\n    this.dataView.setUint32(this.position, value)\n    this.position += 4\n  },\n  readByte() {\n    this.assertReadLimit()\n    this._touch()\n    const value = this.inspectByte()\n    this.position++\n    return value\n  },\n  readBytes(length, size) {\n    this.assertReadLimit()\n    this._touch()\n    const value = this.inspectBytes(length)\n    this.position += size ?? length\n    return value\n  },\n  readUint8() {\n    this.assertReadLimit()\n    this._touch()\n    const value = this.inspectUint8()\n    this.position += 1\n    return value\n  },\n  readUint16() {\n    this.assertReadLimit()\n    this._touch()\n    const value = this.inspectUint16()\n    this.position += 2\n    return value\n  },\n  readUint24() {\n    this.assertReadLimit()\n    this._touch()\n    const value = this.inspectUint24()\n    this.position += 3\n    return value\n  },\n  readUint32() {\n    this.assertReadLimit()\n    this._touch()\n    const value = this.inspectUint32()\n    this.position += 4\n    return value\n  },\n  get remaining() {\n    return this.bytes.length - this.position\n  },\n  setPosition(position) {\n    const oldPosition = this.position\n    this.assertPosition(position)\n    this.position = position\n    return () => (this.position = oldPosition)\n  },\n  _touch() {\n    if (this.recursiveReadLimit === Number.POSITIVE_INFINITY) return\n    const count = this.getReadCount()\n    this.positionReadCount.set(this.position, count + 1)\n    if (count > 0) this.recursiveReadCount++\n  },\n}\n\ntype CursorConfig = { recursiveReadLimit?: number | undefined }\n\nexport type CreateCursorErrorType =\n  | CursorErrorType\n  | StaticCursorErrorType\n  | ErrorType\n\nexport function createCursor(\n  bytes: ByteArray,\n  { recursiveReadLimit = 8_192 }: CursorConfig = {},\n): Cursor {\n  const cursor: Cursor = Object.create(staticCursor)\n  cursor.bytes = bytes\n  cursor.dataView = new DataView(\n    bytes.buffer,\n    bytes.byteOffset,\n    bytes.byteLength,\n  )\n  cursor.positionReadCount = new Map()\n  cursor.recursiveReadLimit = recursiveReadLimit\n  return cursor\n}\n"],"names":[],"mappings":";;;;;;AA8DA,MAAM,eAAuB;IAC3B,OAAO,IAAI;IACX,UAAU,IAAI,SAAS,IAAI,YAAY;IACvC,UAAU;IACV,mBAAmB,IAAI;IACvB,oBAAoB;IACpB,oBAAoB,OAAO,iBAAiB;IAC5C;QACE,IAAI,IAAI,CAAC,kBAAkB,IAAI,IAAI,CAAC,kBAAkB,EACpD,MAAM,IAAI,4IAAA,CAAA,kCAA+B,CAAC;YACxC,OAAO,IAAI,CAAC,kBAAkB,GAAG;YACjC,OAAO,IAAI,CAAC,kBAAkB;;IAEpC;IACA,gBAAe,QAAQ;QACrB,IAAI,WAAW,KAAK,WAAW,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,GACjD,MAAM,IAAI,4IAAA,CAAA,2BAAwB,CAAC;YACjC,QAAQ,IAAI,CAAC,KAAK,CAAC,MAAM;YACzB;;IAEN;IACA,mBAAkB,MAAM;QACtB,IAAI,SAAS,GAAG,MAAM,IAAI,4IAAA,CAAA,sBAAmB,CAAC;YAAE;QAAM;QACtD,MAAM,WAAW,IAAI,CAAC,QAAQ,GAAG;QACjC,IAAI,CAAC,cAAc,CAAC;QACpB,IAAI,CAAC,QAAQ,GAAG;IAClB;IACA,cAAa,QAAQ;QACnB,OAAO,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,YAAY,IAAI,CAAC,QAAQ,KAAK;IAClE;IACA,mBAAkB,MAAM;QACtB,IAAI,SAAS,GAAG,MAAM,IAAI,4IAAA,CAAA,sBAAmB,CAAC;YAAE;QAAM;QACtD,MAAM,WAAW,IAAI,CAAC,QAAQ,GAAG;QACjC,IAAI,CAAC,cAAc,CAAC;QACpB,IAAI,CAAC,QAAQ,GAAG;IAClB;IACA,aAAY,SAAS;QACnB,MAAM,WAAW,aAAa,IAAI,CAAC,QAAQ;QAC3C,IAAI,CAAC,cAAc,CAAC;QACpB,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS;IAC7B;IACA,cAAa,MAAM,EAAE,SAAS;QAC5B,MAAM,WAAW,aAAa,IAAI,CAAC,QAAQ;QAC3C,IAAI,CAAC,cAAc,CAAC,WAAW,SAAS;QACxC,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,UAAU,WAAW;IAClD;IACA,cAAa,SAAS;QACpB,MAAM,WAAW,aAAa,IAAI,CAAC,QAAQ;QAC3C,IAAI,CAAC,cAAc,CAAC;QACpB,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS;IAC7B;IACA,eAAc,SAAS;QACrB,MAAM,WAAW,aAAa,IAAI,CAAC,QAAQ;QAC3C,IAAI,CAAC,cAAc,CAAC,WAAW;QAC/B,OAAO,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC;IACjC;IACA,eAAc,SAAS;QACrB,MAAM,WAAW,aAAa,IAAI,CAAC,QAAQ;QAC3C,IAAI,CAAC,cAAc,CAAC,WAAW;QAC/B,OACE,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,aAAa,CAAC,IACvC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,WAAW;IAEtC;IACA,eAAc,SAAS;QACrB,MAAM,WAAW,aAAa,IAAI,CAAC,QAAQ;QAC3C,IAAI,CAAC,cAAc,CAAC,WAAW;QAC/B,OAAO,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC;IACjC;IACA,UAAS,IAAuB;QAC9B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ;QACjC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG;QAC5B,IAAI,CAAC,QAAQ;IACf;IACA,WAAU,KAAgB;QACxB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,GAAG,MAAM,MAAM,GAAG;QACnD,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,IAAI,CAAC,QAAQ;QACnC,IAAI,CAAC,QAAQ,IAAI,MAAM,MAAM;IAC/B;IACA,WAAU,KAAa;QACrB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ;QACjC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG;QAC5B,IAAI,CAAC,QAAQ;IACf;IACA,YAAW,KAAa;QACtB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,GAAG;QACpC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,EAAE;QACvC,IAAI,CAAC,QAAQ,IAAI;IACnB;IACA,YAAW,KAAa;QACtB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,GAAG;QACpC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,EAAE,SAAS;QAChD,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,GAAG,GAAG,QAAQ,CAAC;QACnD,IAAI,CAAC,QAAQ,IAAI;IACnB;IACA,YAAW,KAAa;QACtB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,GAAG;QACpC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,EAAE;QACvC,IAAI,CAAC,QAAQ,IAAI;IACnB;IACA;QACE,IAAI,CAAC,eAAe;QACpB,IAAI,CAAC,MAAM;QACX,MAAM,QAAQ,IAAI,CAAC,WAAW;QAC9B,IAAI,CAAC,QAAQ;QACb,OAAO;IACT;IACA,WAAU,MAAM,EAAE,IAAI;QACpB,IAAI,CAAC,eAAe;QACpB,IAAI,CAAC,MAAM;QACX,MAAM,QAAQ,IAAI,CAAC,YAAY,CAAC;QAChC,IAAI,CAAC,QAAQ,IAAI,QAAQ;QACzB,OAAO;IACT;IACA;QACE,IAAI,CAAC,eAAe;QACpB,IAAI,CAAC,MAAM;QACX,MAAM,QAAQ,IAAI,CAAC,YAAY;QAC/B,IAAI,CAAC,QAAQ,IAAI;QACjB,OAAO;IACT;IACA;QACE,IAAI,CAAC,eAAe;QACpB,IAAI,CAAC,MAAM;QACX,MAAM,QAAQ,IAAI,CAAC,aAAa;QAChC,IAAI,CAAC,QAAQ,IAAI;QACjB,OAAO;IACT;IACA;QACE,IAAI,CAAC,eAAe;QACpB,IAAI,CAAC,MAAM;QACX,MAAM,QAAQ,IAAI,CAAC,aAAa;QAChC,IAAI,CAAC,QAAQ,IAAI;QACjB,OAAO;IACT;IACA;QACE,IAAI,CAAC,eAAe;QACpB,IAAI,CAAC,MAAM;QACX,MAAM,QAAQ,IAAI,CAAC,aAAa;QAChC,IAAI,CAAC,QAAQ,IAAI;QACjB,OAAO;IACT;IACA,IAAI,aAAS;QACX,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ;IAC1C;IACA,aAAY,QAAQ;QAClB,MAAM,cAAc,IAAI,CAAC,QAAQ;QACjC,IAAI,CAAC,cAAc,CAAC;QACpB,IAAI,CAAC,QAAQ,GAAG;QAChB,OAAO,IAAO,IAAI,CAAC,QAAQ,GAAG;IAChC;IACA;QACE,IAAI,IAAI,CAAC,kBAAkB,KAAK,OAAO,iBAAiB,EAAE;QAC1D,MAAM,QAAQ,IAAI,CAAC,YAAY;QAC/B,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ;QAClD,IAAI,QAAQ,GAAG,IAAI,CAAC,kBAAkB;IACxC;;AAUI,SAAU,aACd,KAAgB,EAChB,EAAE,qBAAqB,KAAK,EAAA,GAAmB,CAAA,CAAE;IAEjD,MAAM,SAAiB,OAAO,MAAM,CAAC;IACrC,OAAO,KAAK,GAAG;IACf,OAAO,QAAQ,GAAG,IAAI,SACpB,MAAM,MAAM,EACZ,MAAM,UAAU,EAChB,MAAM,UAAU;IAElB,OAAO,iBAAiB,GAAG,IAAI;IAC/B,OAAO,kBAAkB,GAAG;IAC5B,OAAO;AACT"}},
    {"offset": {"line": 1451, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1456, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/data/slice.ts"],"sourcesContent":["import {\n  SliceOffsetOutOfBoundsError,\n  type SliceOffsetOutOfBoundsErrorType,\n} from '../../errors/data.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\n\nimport { type IsHexErrorType, isHex } from './isHex.js'\nimport { type SizeErrorType, size } from './size.js'\n\nexport type SliceReturnType<value extends ByteArray | Hex> = value extends Hex\n  ? Hex\n  : ByteArray\n\nexport type SliceErrorType =\n  | IsHexErrorType\n  | SliceBytesErrorType\n  | SliceHexErrorType\n  | ErrorType\n\n/**\n * @description Returns a section of the hex or byte array given a start/end bytes offset.\n *\n * @param value The hex or byte array to slice.\n * @param start The start offset (in bytes).\n * @param end The end offset (in bytes).\n */\nexport function slice<value extends ByteArray | Hex>(\n  value: value,\n  start?: number | undefined,\n  end?: number | undefined,\n  { strict }: { strict?: boolean | undefined } = {},\n): SliceReturnType<value> {\n  if (isHex(value, { strict: false }))\n    return sliceHex(value as Hex, start, end, {\n      strict,\n    }) as SliceReturnType<value>\n  return sliceBytes(value as ByteArray, start, end, {\n    strict,\n  }) as SliceReturnType<value>\n}\n\nexport type AssertStartOffsetErrorType =\n  | SliceOffsetOutOfBoundsErrorType\n  | SizeErrorType\n  | ErrorType\n\nfunction assertStartOffset(value: Hex | ByteArray, start?: number | undefined) {\n  if (typeof start === 'number' && start > 0 && start > size(value) - 1)\n    throw new SliceOffsetOutOfBoundsError({\n      offset: start,\n      position: 'start',\n      size: size(value),\n    })\n}\n\nexport type AssertEndOffsetErrorType =\n  | SliceOffsetOutOfBoundsErrorType\n  | SizeErrorType\n  | ErrorType\n\nfunction assertEndOffset(\n  value: Hex | ByteArray,\n  start?: number | undefined,\n  end?: number | undefined,\n) {\n  if (\n    typeof start === 'number' &&\n    typeof end === 'number' &&\n    size(value) !== end - start\n  ) {\n    throw new SliceOffsetOutOfBoundsError({\n      offset: end,\n      position: 'end',\n      size: size(value),\n    })\n  }\n}\n\nexport type SliceBytesErrorType =\n  | AssertStartOffsetErrorType\n  | AssertEndOffsetErrorType\n  | ErrorType\n\n/**\n * @description Returns a section of the byte array given a start/end bytes offset.\n *\n * @param value The byte array to slice.\n * @param start The start offset (in bytes).\n * @param end The end offset (in bytes).\n */\nexport function sliceBytes(\n  value_: ByteArray,\n  start?: number | undefined,\n  end?: number | undefined,\n  { strict }: { strict?: boolean | undefined } = {},\n): ByteArray {\n  assertStartOffset(value_, start)\n  const value = value_.slice(start, end)\n  if (strict) assertEndOffset(value, start, end)\n  return value\n}\n\nexport type SliceHexErrorType =\n  | AssertStartOffsetErrorType\n  | AssertEndOffsetErrorType\n  | ErrorType\n\n/**\n * @description Returns a section of the hex value given a start/end bytes offset.\n *\n * @param value The hex value to slice.\n * @param start The start offset (in bytes).\n * @param end The end offset (in bytes).\n */\nexport function sliceHex(\n  value_: Hex,\n  start?: number | undefined,\n  end?: number | undefined,\n  { strict }: { strict?: boolean | undefined } = {},\n): Hex {\n  assertStartOffset(value_, start)\n  const value = `0x${value_\n    .replace('0x', '')\n    .slice((start ?? 0) * 2, (end ?? value_.length) * 2)}` as const\n  if (strict) assertEndOffset(value, start, end)\n  return value\n}\n"],"names":[],"mappings":";;;;;;;;;;;;AA2BM,SAAU,MACd,KAAY,EACZ,KAA0B,EAC1B,GAAwB,EACxB,EAAE,MAAM,EAAA,GAAuC,CAAA,CAAE;IAEjD,IAAI,CAAA,GAAA,kJAAA,CAAA,QAAK,AAAL,EAAM,OAAO;QAAE,QAAQ;IAAK,IAC9B,OAAO,SAAS,OAAc,OAAO,KAAK;QACxC;;IAEJ,OAAO,WAAW,OAAoB,OAAO,KAAK;QAChD;;AAEJ;AAOA,SAAS,kBAAkB,KAAsB,EAAE,KAA0B;IAC3E,IAAI,OAAO,UAAU,YAAY,QAAQ,KAAK,QAAQ,CAAA,GAAA,iJAAA,CAAA,OAAI,AAAJ,EAAK,SAAS,GAClE,MAAM,IAAI,0IAAA,CAAA,8BAA2B,CAAC;QACpC,QAAQ;QACR,UAAU;QACV,MAAM,CAAA,GAAA,iJAAA,CAAA,OAAI,AAAJ,EAAK;;AAEjB;AAOA,SAAS,gBACP,KAAsB,EACtB,KAA0B,EAC1B,GAAwB;IAExB,IACE,OAAO,UAAU,YACjB,OAAO,QAAQ,YACf,CAAA,GAAA,iJAAA,CAAA,OAAI,AAAJ,EAAK,WAAW,MAAM,OACtB;QACA,MAAM,IAAI,0IAAA,CAAA,8BAA2B,CAAC;YACpC,QAAQ;YACR,UAAU;YACV,MAAM,CAAA,GAAA,iJAAA,CAAA,OAAI,AAAJ,EAAK;;IAEf;AACF;AAcM,SAAU,WACd,MAAiB,EACjB,KAA0B,EAC1B,GAAwB,EACxB,EAAE,MAAM,EAAA,GAAuC,CAAA,CAAE;IAEjD,kBAAkB,QAAQ;IAC1B,MAAM,QAAQ,OAAO,KAAK,CAAC,OAAO;IAClC,IAAI,QAAQ,gBAAgB,OAAO,OAAO;IAC1C,OAAO;AACT;AAcM,SAAU,SACd,MAAW,EACX,KAA0B,EAC1B,GAAwB,EACxB,EAAE,MAAM,EAAA,GAAuC,CAAA,CAAE;IAEjD,kBAAkB,QAAQ;IAC1B,MAAM,QAAQ,CAAA,EAAA,EAAK,OAChB,OAAO,CAAC,MAAM,IACd,KAAK,CAAC,CAAC,SAAS,CAAC,IAAI,GAAG,CAAC,OAAO,OAAO,MAAM,IAAI,GAAE,CAAW;IACjE,IAAI,QAAQ,gBAAgB,OAAO,OAAO;IAC1C,OAAO;AACT"}},
    {"offset": {"line": 1506, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1511, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/encoding/fromBytes.ts"],"sourcesContent":["import { InvalidBytesBooleanError } from '../../errors/encoding.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { type TrimErrorType, trim } from '../data/trim.js'\n\nimport {\n  type AssertSizeErrorType,\n  type HexToBigIntErrorType,\n  type HexToNumberErrorType,\n  assertSize,\n  hexToBigInt,\n  hexToNumber,\n} from './fromHex.js'\nimport { type BytesToHexErrorType, bytesToHex } from './toHex.js'\n\nexport type FromBytesParameters<\n  to extends 'string' | 'hex' | 'bigint' | 'number' | 'boolean',\n> =\n  | to\n  | {\n      /** Size of the bytes. */\n      size?: number | undefined\n      /** Type to convert to. */\n      to: to\n    }\n\nexport type FromBytesReturnType<to> = to extends 'string'\n  ? string\n  : to extends 'hex'\n    ? Hex\n    : to extends 'bigint'\n      ? bigint\n      : to extends 'number'\n        ? number\n        : to extends 'boolean'\n          ? boolean\n          : never\n\nexport type FromBytesErrorType =\n  | BytesToHexErrorType\n  | BytesToBigIntErrorType\n  | BytesToBoolErrorType\n  | BytesToNumberErrorType\n  | BytesToStringErrorType\n  | ErrorType\n\n/**\n * Decodes a byte array into a UTF-8 string, hex value, number, bigint or boolean.\n *\n * - Docs: https://viem.sh/docs/utilities/fromBytes\n * - Example: https://viem.sh/docs/utilities/fromBytes#usage\n *\n * @param bytes Byte array to decode.\n * @param toOrOpts Type to convert to or options.\n * @returns Decoded value.\n *\n * @example\n * import { fromBytes } from 'viem'\n * const data = fromBytes(new Uint8Array([1, 164]), 'number')\n * // 420\n *\n * @example\n * import { fromBytes } from 'viem'\n * const data = fromBytes(\n *   new Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33]),\n *   'string'\n * )\n * // 'Hello world'\n */\nexport function fromBytes<\n  to extends 'string' | 'hex' | 'bigint' | 'number' | 'boolean',\n>(\n  bytes: ByteArray,\n  toOrOpts: FromBytesParameters<to>,\n): FromBytesReturnType<to> {\n  const opts = typeof toOrOpts === 'string' ? { to: toOrOpts } : toOrOpts\n  const to = opts.to\n\n  if (to === 'number')\n    return bytesToNumber(bytes, opts) as FromBytesReturnType<to>\n  if (to === 'bigint')\n    return bytesToBigInt(bytes, opts) as FromBytesReturnType<to>\n  if (to === 'boolean')\n    return bytesToBool(bytes, opts) as FromBytesReturnType<to>\n  if (to === 'string')\n    return bytesToString(bytes, opts) as FromBytesReturnType<to>\n  return bytesToHex(bytes, opts) as FromBytesReturnType<to>\n}\n\nexport type BytesToBigIntOpts = {\n  /** Whether or not the number of a signed representation. */\n  signed?: boolean | undefined\n  /** Size of the bytes. */\n  size?: number | undefined\n}\n\nexport type BytesToBigIntErrorType =\n  | BytesToHexErrorType\n  | HexToBigIntErrorType\n  | ErrorType\n\n/**\n * Decodes a byte array into a bigint.\n *\n * - Docs: https://viem.sh/docs/utilities/fromBytes#bytestobigint\n *\n * @param bytes Byte array to decode.\n * @param opts Options.\n * @returns BigInt value.\n *\n * @example\n * import { bytesToBigInt } from 'viem'\n * const data = bytesToBigInt(new Uint8Array([1, 164]))\n * // 420n\n */\nexport function bytesToBigInt(\n  bytes: ByteArray,\n  opts: BytesToBigIntOpts = {},\n): bigint {\n  if (typeof opts.size !== 'undefined') assertSize(bytes, { size: opts.size })\n  const hex = bytesToHex(bytes, opts)\n  return hexToBigInt(hex, opts)\n}\n\nexport type BytesToBoolOpts = {\n  /** Size of the bytes. */\n  size?: number | undefined\n}\n\nexport type BytesToBoolErrorType =\n  | AssertSizeErrorType\n  | TrimErrorType\n  | ErrorType\n\n/**\n * Decodes a byte array into a boolean.\n *\n * - Docs: https://viem.sh/docs/utilities/fromBytes#bytestobool\n *\n * @param bytes Byte array to decode.\n * @param opts Options.\n * @returns Boolean value.\n *\n * @example\n * import { bytesToBool } from 'viem'\n * const data = bytesToBool(new Uint8Array([1]))\n * // true\n */\nexport function bytesToBool(\n  bytes_: ByteArray,\n  opts: BytesToBoolOpts = {},\n): boolean {\n  let bytes = bytes_\n  if (typeof opts.size !== 'undefined') {\n    assertSize(bytes, { size: opts.size })\n    bytes = trim(bytes)\n  }\n  if (bytes.length > 1 || bytes[0] > 1)\n    throw new InvalidBytesBooleanError(bytes)\n  return Boolean(bytes[0])\n}\n\nexport type BytesToNumberOpts = BytesToBigIntOpts\n\nexport type BytesToNumberErrorType =\n  | BytesToHexErrorType\n  | HexToNumberErrorType\n  | ErrorType\n\n/**\n * Decodes a byte array into a number.\n *\n * - Docs: https://viem.sh/docs/utilities/fromBytes#bytestonumber\n *\n * @param bytes Byte array to decode.\n * @param opts Options.\n * @returns Number value.\n *\n * @example\n * import { bytesToNumber } from 'viem'\n * const data = bytesToNumber(new Uint8Array([1, 164]))\n * // 420\n */\nexport function bytesToNumber(\n  bytes: ByteArray,\n  opts: BytesToNumberOpts = {},\n): number {\n  if (typeof opts.size !== 'undefined') assertSize(bytes, { size: opts.size })\n  const hex = bytesToHex(bytes, opts)\n  return hexToNumber(hex, opts)\n}\n\nexport type BytesToStringOpts = {\n  /** Size of the bytes. */\n  size?: number | undefined\n}\n\nexport type BytesToStringErrorType =\n  | AssertSizeErrorType\n  | TrimErrorType\n  | ErrorType\n\n/**\n * Decodes a byte array into a UTF-8 string.\n *\n * - Docs: https://viem.sh/docs/utilities/fromBytes#bytestostring\n *\n * @param bytes Byte array to decode.\n * @param opts Options.\n * @returns String value.\n *\n * @example\n * import { bytesToString } from 'viem'\n * const data = bytesToString(new Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33]))\n * // 'Hello world'\n */\nexport function bytesToString(\n  bytes_: ByteArray,\n  opts: BytesToStringOpts = {},\n): string {\n  let bytes = bytes_\n  if (typeof opts.size !== 'undefined') {\n    assertSize(bytes, { size: opts.size })\n    bytes = trim(bytes, { dir: 'right' })\n  }\n  return new TextDecoder().decode(bytes)\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAqEM,SAAU,UAGd,KAAgB,EAChB,QAAiC;IAEjC,MAAM,OAAO,OAAO,aAAa,WAAW;QAAE,IAAI;IAAQ,IAAK;IAC/D,MAAM,KAAK,KAAK,EAAE;IAElB,IAAI,OAAO,UACT,OAAO,cAAc,OAAO;IAC9B,IAAI,OAAO,UACT,OAAO,cAAc,OAAO;IAC9B,IAAI,OAAO,WACT,OAAO,YAAY,OAAO;IAC5B,IAAI,OAAO,UACT,OAAO,cAAc,OAAO;IAC9B,OAAO,CAAA,GAAA,sJAAA,CAAA,aAAU,AAAV,EAAW,OAAO;AAC3B;AA4BM,SAAU,cACd,KAAgB,EAChB,OAA0B,CAAA,CAAE;IAE5B,IAAI,OAAO,KAAK,IAAI,KAAK,aAAa,CAAA,GAAA,wJAAA,CAAA,aAAU,AAAV,EAAW,OAAO;QAAE,MAAM,KAAK,IAAI;IAAA;IACzE,MAAM,MAAM,CAAA,GAAA,sJAAA,CAAA,aAAU,AAAV,EAAW,OAAO;IAC9B,OAAO,CAAA,GAAA,wJAAA,CAAA,cAAW,AAAX,EAAY,KAAK;AAC1B;AA0BM,SAAU,YACd,MAAiB,EACjB,OAAwB,CAAA,CAAE;IAE1B,IAAI,QAAQ;IACZ,IAAI,OAAO,KAAK,IAAI,KAAK,aAAa;QACpC,CAAA,GAAA,wJAAA,CAAA,aAAU,AAAV,EAAW,OAAO;YAAE,MAAM,KAAK,IAAI;QAAA;QACnC,QAAQ,CAAA,GAAA,iJAAA,CAAA,OAAI,AAAJ,EAAK;IACf;IACA,IAAI,MAAM,MAAM,GAAG,KAAK,KAAK,CAAC,EAAE,GAAG,GACjC,MAAM,IAAI,8IAAA,CAAA,2BAAwB,CAAC;IACrC,OAAO,QAAQ,KAAK,CAAC,EAAE;AACzB;AAuBM,SAAU,cACd,KAAgB,EAChB,OAA0B,CAAA,CAAE;IAE5B,IAAI,OAAO,KAAK,IAAI,KAAK,aAAa,CAAA,GAAA,wJAAA,CAAA,aAAU,AAAV,EAAW,OAAO;QAAE,MAAM,KAAK,IAAI;IAAA;IACzE,MAAM,MAAM,CAAA,GAAA,sJAAA,CAAA,aAAU,AAAV,EAAW,OAAO;IAC9B,OAAO,CAAA,GAAA,wJAAA,CAAA,cAAW,AAAX,EAAY,KAAK;AAC1B;AA0BM,SAAU,cACd,MAAiB,EACjB,OAA0B,CAAA,CAAE;IAE5B,IAAI,QAAQ;IACZ,IAAI,OAAO,KAAK,IAAI,KAAK,aAAa;QACpC,CAAA,GAAA,wJAAA,CAAA,aAAU,AAAV,EAAW,OAAO;YAAE,MAAM,KAAK,IAAI;QAAA;QACnC,QAAQ,CAAA,GAAA,iJAAA,CAAA,OAAI,AAAJ,EAAK,OAAO;YAAE,KAAK;QAAO;IACpC;IACA,OAAO,IAAI,cAAc,MAAM,CAAC;AAClC"}},
    {"offset": {"line": 1575, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1580, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/data/concat.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\n\nexport type ConcatReturnType<value extends Hex | ByteArray> = value extends Hex\n  ? Hex\n  : ByteArray\n\nexport type ConcatErrorType =\n  | ConcatBytesErrorType\n  | ConcatHexErrorType\n  | ErrorType\n\nexport function concat<value extends Hex | ByteArray>(\n  values: readonly value[],\n): ConcatReturnType<value> {\n  if (typeof values[0] === 'string')\n    return concatHex(values as readonly Hex[]) as ConcatReturnType<value>\n  return concatBytes(values as readonly ByteArray[]) as ConcatReturnType<value>\n}\n\nexport type ConcatBytesErrorType = ErrorType\n\nexport function concatBytes(values: readonly ByteArray[]): ByteArray {\n  let length = 0\n  for (const arr of values) {\n    length += arr.length\n  }\n  const result = new Uint8Array(length)\n  let offset = 0\n  for (const arr of values) {\n    result.set(arr, offset)\n    offset += arr.length\n  }\n  return result\n}\n\nexport type ConcatHexErrorType = ErrorType\n\nexport function concatHex(values: readonly Hex[]): Hex {\n  return `0x${(values as Hex[]).reduce(\n    (acc, x) => acc + x.replace('0x', ''),\n    '',\n  )}`\n}\n"],"names":[],"mappings":";;;;;AAYM,SAAU,OACd,MAAwB;IAExB,IAAI,OAAO,MAAM,CAAC,EAAE,KAAK,UACvB,OAAO,UAAU;IACnB,OAAO,YAAY;AACrB;AAIM,SAAU,YAAY,MAA4B;IACtD,IAAI,SAAS;IACb,KAAK,MAAM,OAAO,OAAQ;QACxB,UAAU,IAAI,MAAM;IACtB;IACA,MAAM,SAAS,IAAI,WAAW;IAC9B,IAAI,SAAS;IACb,KAAK,MAAM,OAAO,OAAQ;QACxB,OAAO,GAAG,CAAC,KAAK;QAChB,UAAU,IAAI,MAAM;IACtB;IACA,OAAO;AACT;AAIM,SAAU,UAAU,MAAsB;IAC9C,OAAO,CAAA,EAAA,EAAM,OAAiB,MAAM,CAClC,CAAC,KAAK,IAAM,MAAM,EAAE,OAAO,CAAC,MAAM,KAClC,IACD,CAAE;AACL"}},
    {"offset": {"line": 1605, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1610, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/abi/encodeAbiParameters.ts"],"sourcesContent":["import type {\n  AbiParameter,\n  AbiParameterToPrimitiveType,\n  AbiParametersToPrimitiveTypes,\n} from 'abitype'\n\nimport {\n  AbiEncodingArrayLengthMismatchError,\n  type AbiEncodingArrayLengthMismatchErrorType,\n  AbiEncodingBytesSizeMismatchError,\n  type AbiEncodingBytesSizeMismatchErrorType,\n  AbiEncodingLengthMismatchError,\n  type AbiEncodingLengthMismatchErrorType,\n  InvalidAbiEncodingTypeError,\n  type InvalidAbiEncodingTypeErrorType,\n  InvalidArrayError,\n  type InvalidArrayErrorType,\n} from '../../errors/abi.js'\nimport {\n  InvalidAddressError,\n  type InvalidAddressErrorType,\n} from '../../errors/address.js'\nimport { BaseError } from '../../errors/base.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Hex } from '../../types/misc.js'\nimport { type IsAddressErrorType, isAddress } from '../address/isAddress.js'\nimport { type ConcatErrorType, concat } from '../data/concat.js'\nimport { type PadHexErrorType, padHex } from '../data/pad.js'\nimport { type SizeErrorType, size } from '../data/size.js'\nimport { type SliceErrorType, slice } from '../data/slice.js'\nimport {\n  type BoolToHexErrorType,\n  type NumberToHexErrorType,\n  type StringToHexErrorType,\n  boolToHex,\n  numberToHex,\n  stringToHex,\n} from '../encoding/toHex.js'\n\nexport type EncodeAbiParametersReturnType = Hex\n\nexport type EncodeAbiParametersErrorType =\n  | AbiEncodingLengthMismatchErrorType\n  | PrepareParamsErrorType\n  | EncodeParamsErrorType\n  | ErrorType\n\n/**\n * @description Encodes a list of primitive values into an ABI-encoded hex value.\n *\n * - Docs: https://viem.sh/docs/abi/encodeAbiParameters#encodeabiparameters\n *\n *   Generates ABI encoded data using the [ABI specification](https://docs.soliditylang.org/en/latest/abi-spec), given a set of ABI parameters (inputs/outputs) and their corresponding values.\n *\n * @param params - a set of ABI Parameters (params), that can be in the shape of the inputs or outputs attribute of an ABI Item.\n * @param values - a set of values (values) that correspond to the given params.\n * @example\n * ```typescript\n * import { encodeAbiParameters } from 'viem'\n *\n * const encodedData = encodeAbiParameters(\n *   [\n *     { name: 'x', type: 'string' },\n *     { name: 'y', type: 'uint' },\n *     { name: 'z', type: 'bool' }\n *   ],\n *   ['wagmi', 420n, true]\n * )\n * ```\n *\n * You can also pass in Human Readable parameters with the parseAbiParameters utility.\n *\n * @example\n * ```typescript\n * import { encodeAbiParameters, parseAbiParameters } from 'viem'\n *\n * const encodedData = encodeAbiParameters(\n *   parseAbiParameters('string x, uint y, bool z'),\n *   ['wagmi', 420n, true]\n * )\n * ```\n */\nexport function encodeAbiParameters<\n  const params extends readonly AbiParameter[] | readonly unknown[],\n>(\n  params: params,\n  values: params extends readonly AbiParameter[]\n    ? AbiParametersToPrimitiveTypes<params>\n    : never,\n): EncodeAbiParametersReturnType {\n  if (params.length !== values.length)\n    throw new AbiEncodingLengthMismatchError({\n      expectedLength: params.length as number,\n      givenLength: values.length as any,\n    })\n  // Prepare the parameters to determine dynamic types to encode.\n  const preparedParams = prepareParams({\n    params: params as readonly AbiParameter[],\n    values: values as any,\n  })\n  const data = encodeParams(preparedParams)\n  if (data.length === 0) return '0x'\n  return data\n}\n\n/////////////////////////////////////////////////////////////////\n\ntype PreparedParam = { dynamic: boolean; encoded: Hex }\n\ntype TupleAbiParameter = AbiParameter & { components: readonly AbiParameter[] }\ntype Tuple = AbiParameterToPrimitiveType<TupleAbiParameter>\n\ntype PrepareParamsErrorType = PrepareParamErrorType | ErrorType\n\nfunction prepareParams<const params extends readonly AbiParameter[]>({\n  params,\n  values,\n}: {\n  params: params\n  values: AbiParametersToPrimitiveTypes<params>\n}) {\n  const preparedParams: PreparedParam[] = []\n  for (let i = 0; i < params.length; i++) {\n    preparedParams.push(prepareParam({ param: params[i], value: values[i] }))\n  }\n  return preparedParams\n}\n\ntype PrepareParamErrorType =\n  | EncodeAddressErrorType\n  | EncodeArrayErrorType\n  | EncodeBytesErrorType\n  | EncodeBoolErrorType\n  | EncodeNumberErrorType\n  | EncodeStringErrorType\n  | EncodeTupleErrorType\n  | GetArrayComponentsErrorType\n  | InvalidAbiEncodingTypeErrorType\n  | ErrorType\n\nfunction prepareParam<const param extends AbiParameter>({\n  param,\n  value,\n}: {\n  param: param\n  value: AbiParameterToPrimitiveType<param>\n}): PreparedParam {\n  const arrayComponents = getArrayComponents(param.type)\n  if (arrayComponents) {\n    const [length, type] = arrayComponents\n    return encodeArray(value, { length, param: { ...param, type } })\n  }\n  if (param.type === 'tuple') {\n    return encodeTuple(value as unknown as Tuple, {\n      param: param as TupleAbiParameter,\n    })\n  }\n  if (param.type === 'address') {\n    return encodeAddress(value as unknown as Hex)\n  }\n  if (param.type === 'bool') {\n    return encodeBool(value as unknown as boolean)\n  }\n  if (param.type.startsWith('uint') || param.type.startsWith('int')) {\n    const signed = param.type.startsWith('int')\n    return encodeNumber(value as unknown as number, { signed })\n  }\n  if (param.type.startsWith('bytes')) {\n    return encodeBytes(value as unknown as Hex, { param })\n  }\n  if (param.type === 'string') {\n    return encodeString(value as unknown as string)\n  }\n  throw new InvalidAbiEncodingTypeError(param.type, {\n    docsPath: '/docs/contract/encodeAbiParameters',\n  })\n}\n\n/////////////////////////////////////////////////////////////////\n\ntype EncodeParamsErrorType = NumberToHexErrorType | SizeErrorType | ErrorType\n\nfunction encodeParams(preparedParams: PreparedParam[]): Hex {\n  // 1. Compute the size of the static part of the parameters.\n  let staticSize = 0\n  for (let i = 0; i < preparedParams.length; i++) {\n    const { dynamic, encoded } = preparedParams[i]\n    if (dynamic) staticSize += 32\n    else staticSize += size(encoded)\n  }\n\n  // 2. Split the parameters into static and dynamic parts.\n  const staticParams: Hex[] = []\n  const dynamicParams: Hex[] = []\n  let dynamicSize = 0\n  for (let i = 0; i < preparedParams.length; i++) {\n    const { dynamic, encoded } = preparedParams[i]\n    if (dynamic) {\n      staticParams.push(numberToHex(staticSize + dynamicSize, { size: 32 }))\n      dynamicParams.push(encoded)\n      dynamicSize += size(encoded)\n    } else {\n      staticParams.push(encoded)\n    }\n  }\n\n  // 3. Concatenate static and dynamic parts.\n  return concat([...staticParams, ...dynamicParams])\n}\n\n/////////////////////////////////////////////////////////////////\n\ntype EncodeAddressErrorType =\n  | InvalidAddressErrorType\n  | IsAddressErrorType\n  | ErrorType\n\nfunction encodeAddress(value: Hex): PreparedParam {\n  if (!isAddress(value)) throw new InvalidAddressError({ address: value })\n  return { dynamic: false, encoded: padHex(value.toLowerCase() as Hex) }\n}\n\ntype EncodeArrayErrorType =\n  | AbiEncodingArrayLengthMismatchErrorType\n  | ConcatErrorType\n  | EncodeParamsErrorType\n  | InvalidArrayErrorType\n  | NumberToHexErrorType\n  // TODO: Add back once circular type reference is resolved\n  // | PrepareParamErrorType\n  | ErrorType\n\nfunction encodeArray<const param extends AbiParameter>(\n  value: AbiParameterToPrimitiveType<param>,\n  {\n    length,\n    param,\n  }: {\n    length: number | null\n    param: param\n  },\n): PreparedParam {\n  const dynamic = length === null\n\n  if (!Array.isArray(value)) throw new InvalidArrayError(value)\n  if (!dynamic && value.length !== length)\n    throw new AbiEncodingArrayLengthMismatchError({\n      expectedLength: length!,\n      givenLength: value.length,\n      type: `${param.type}[${length}]`,\n    })\n\n  let dynamicChild = false\n  const preparedParams: PreparedParam[] = []\n  for (let i = 0; i < value.length; i++) {\n    const preparedParam = prepareParam({ param, value: value[i] })\n    if (preparedParam.dynamic) dynamicChild = true\n    preparedParams.push(preparedParam)\n  }\n\n  if (dynamic || dynamicChild) {\n    const data = encodeParams(preparedParams)\n    if (dynamic) {\n      const length = numberToHex(preparedParams.length, { size: 32 })\n      return {\n        dynamic: true,\n        encoded: preparedParams.length > 0 ? concat([length, data]) : length,\n      }\n    }\n    if (dynamicChild) return { dynamic: true, encoded: data }\n  }\n  return {\n    dynamic: false,\n    encoded: concat(preparedParams.map(({ encoded }) => encoded)),\n  }\n}\n\ntype EncodeBytesErrorType =\n  | AbiEncodingBytesSizeMismatchErrorType\n  | ConcatErrorType\n  | PadHexErrorType\n  | NumberToHexErrorType\n  | SizeErrorType\n  | ErrorType\n\nfunction encodeBytes<const param extends AbiParameter>(\n  value: Hex,\n  { param }: { param: param },\n): PreparedParam {\n  const [, paramSize] = param.type.split('bytes')\n  const bytesSize = size(value)\n  if (!paramSize) {\n    let value_ = value\n    // If the size is not divisible by 32 bytes, pad the end\n    // with empty bytes to the ceiling 32 bytes.\n    if (bytesSize % 32 !== 0)\n      value_ = padHex(value_, {\n        dir: 'right',\n        size: Math.ceil((value.length - 2) / 2 / 32) * 32,\n      })\n    return {\n      dynamic: true,\n      encoded: concat([padHex(numberToHex(bytesSize, { size: 32 })), value_]),\n    }\n  }\n  if (bytesSize !== Number.parseInt(paramSize))\n    throw new AbiEncodingBytesSizeMismatchError({\n      expectedSize: Number.parseInt(paramSize),\n      value,\n    })\n  return { dynamic: false, encoded: padHex(value, { dir: 'right' }) }\n}\n\ntype EncodeBoolErrorType = PadHexErrorType | BoolToHexErrorType | ErrorType\n\nfunction encodeBool(value: boolean): PreparedParam {\n  if (typeof value !== 'boolean')\n    throw new BaseError(\n      `Invalid boolean value: \"${value}\" (type: ${typeof value}). Expected: \\`true\\` or \\`false\\`.`,\n    )\n  return { dynamic: false, encoded: padHex(boolToHex(value)) }\n}\n\ntype EncodeNumberErrorType = NumberToHexErrorType | ErrorType\n\nfunction encodeNumber(\n  value: number,\n  { signed }: { signed: boolean },\n): PreparedParam {\n  return {\n    dynamic: false,\n    encoded: numberToHex(value, {\n      size: 32,\n      signed,\n    }),\n  }\n}\n\ntype EncodeStringErrorType =\n  | ConcatErrorType\n  | NumberToHexErrorType\n  | PadHexErrorType\n  | SizeErrorType\n  | SliceErrorType\n  | StringToHexErrorType\n  | ErrorType\n\nfunction encodeString(value: string): PreparedParam {\n  const hexValue = stringToHex(value)\n  const partsLength = Math.ceil(size(hexValue) / 32)\n  const parts: Hex[] = []\n  for (let i = 0; i < partsLength; i++) {\n    parts.push(\n      padHex(slice(hexValue, i * 32, (i + 1) * 32), {\n        dir: 'right',\n      }),\n    )\n  }\n  return {\n    dynamic: true,\n    encoded: concat([\n      padHex(numberToHex(size(hexValue), { size: 32 })),\n      ...parts,\n    ]),\n  }\n}\n\ntype EncodeTupleErrorType =\n  | ConcatErrorType\n  | EncodeParamsErrorType\n  // TODO: Add back once circular type reference is resolved\n  // | PrepareParamErrorType\n  | ErrorType\n\nfunction encodeTuple<\n  const param extends AbiParameter & { components: readonly AbiParameter[] },\n>(\n  value: AbiParameterToPrimitiveType<param>,\n  { param }: { param: param },\n): PreparedParam {\n  let dynamic = false\n  const preparedParams: PreparedParam[] = []\n  for (let i = 0; i < param.components.length; i++) {\n    const param_ = param.components[i]\n    const index = Array.isArray(value) ? i : param_.name\n    const preparedParam = prepareParam({\n      param: param_,\n      value: (value as any)[index!] as readonly unknown[],\n    })\n    preparedParams.push(preparedParam)\n    if (preparedParam.dynamic) dynamic = true\n  }\n  return {\n    dynamic,\n    encoded: dynamic\n      ? encodeParams(preparedParams)\n      : concat(preparedParams.map(({ encoded }) => encoded)),\n  }\n}\n\ntype GetArrayComponentsErrorType = ErrorType\n\nexport function getArrayComponents(\n  type: string,\n): [length: number | null, innerType: string] | undefined {\n  const matches = type.match(/^(.*)\\[(\\d+)?\\]$/)\n  return matches\n    ? // Return `null` if the array is dynamic.\n      [matches[2] ? Number(matches[2]) : null, matches[1]]\n    : undefined\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1871, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1876, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/abi/decodeAbiParameters.ts"],"sourcesContent":["import type { AbiParameter, AbiParametersToPrimitiveTypes } from 'abitype'\n\nimport type { ByteArray, Hex } from '../../types/misc.js'\n\nimport {\n  AbiDecodingDataSizeTooSmallError,\n  AbiDecodingZeroDataError,\n  InvalidAbiDecodingTypeError,\n  type InvalidAbiDecodingTypeErrorType,\n} from '../../errors/abi.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport {\n  type ChecksumAddressErrorType,\n  checksumAddress,\n} from '../address/getAddress.js'\nimport {\n  type CreateCursorErrorType,\n  type Cursor,\n  createCursor,\n} from '../cursor.js'\nimport { type SizeErrorType, size } from '../data/size.js'\nimport { type SliceBytesErrorType, sliceBytes } from '../data/slice.js'\nimport { type TrimErrorType, trim } from '../data/trim.js'\nimport {\n  type BytesToBigIntErrorType,\n  type BytesToBoolErrorType,\n  type BytesToNumberErrorType,\n  type BytesToStringErrorType,\n  bytesToBigInt,\n  bytesToBool,\n  bytesToNumber,\n  bytesToString,\n} from '../encoding/fromBytes.js'\nimport { type HexToBytesErrorType, hexToBytes } from '../encoding/toBytes.js'\nimport { type BytesToHexErrorType, bytesToHex } from '../encoding/toHex.js'\nimport { getArrayComponents } from './encodeAbiParameters.js'\n\nexport type DecodeAbiParametersReturnType<\n  params extends readonly AbiParameter[] = readonly AbiParameter[],\n> = AbiParametersToPrimitiveTypes<\n  params extends readonly AbiParameter[] ? params : AbiParameter[]\n>\n\nexport type DecodeAbiParametersErrorType =\n  | HexToBytesErrorType\n  | BytesToHexErrorType\n  | DecodeParameterErrorType\n  | SizeErrorType\n  | CreateCursorErrorType\n  | ErrorType\n\nexport function decodeAbiParameters<\n  const params extends readonly AbiParameter[],\n>(\n  params: params,\n  data: ByteArray | Hex,\n): DecodeAbiParametersReturnType<params> {\n  const bytes = typeof data === 'string' ? hexToBytes(data) : data\n  const cursor = createCursor(bytes)\n\n  if (size(bytes) === 0 && params.length > 0)\n    throw new AbiDecodingZeroDataError()\n  if (size(data) && size(data) < 32)\n    throw new AbiDecodingDataSizeTooSmallError({\n      data: typeof data === 'string' ? data : bytesToHex(data),\n      params: params as readonly AbiParameter[],\n      size: size(data),\n    })\n\n  let consumed = 0\n  const values = []\n  for (let i = 0; i < params.length; ++i) {\n    const param = params[i]\n    cursor.setPosition(consumed)\n    const [data, consumed_] = decodeParameter(cursor, param, {\n      staticPosition: 0,\n    })\n    consumed += consumed_\n    values.push(data)\n  }\n  return values as DecodeAbiParametersReturnType<params>\n}\n\ntype DecodeParameterErrorType =\n  | DecodeArrayErrorType\n  | DecodeTupleErrorType\n  | DecodeAddressErrorType\n  | DecodeBoolErrorType\n  | DecodeBytesErrorType\n  | DecodeNumberErrorType\n  | DecodeStringErrorType\n  | InvalidAbiDecodingTypeErrorType\n\nfunction decodeParameter(\n  cursor: Cursor,\n  param: AbiParameter,\n  { staticPosition }: { staticPosition: number },\n) {\n  const arrayComponents = getArrayComponents(param.type)\n  if (arrayComponents) {\n    const [length, type] = arrayComponents\n    return decodeArray(cursor, { ...param, type }, { length, staticPosition })\n  }\n  if (param.type === 'tuple')\n    return decodeTuple(cursor, param as TupleAbiParameter, { staticPosition })\n\n  if (param.type === 'address') return decodeAddress(cursor)\n  if (param.type === 'bool') return decodeBool(cursor)\n  if (param.type.startsWith('bytes'))\n    return decodeBytes(cursor, param, { staticPosition })\n  if (param.type.startsWith('uint') || param.type.startsWith('int'))\n    return decodeNumber(cursor, param)\n  if (param.type === 'string') return decodeString(cursor, { staticPosition })\n  throw new InvalidAbiDecodingTypeError(param.type, {\n    docsPath: '/docs/contract/decodeAbiParameters',\n  })\n}\n\n////////////////////////////////////////////////////////////////////\n// Type Decoders\n\nconst sizeOfLength = 32\nconst sizeOfOffset = 32\n\ntype DecodeAddressErrorType =\n  | ChecksumAddressErrorType\n  | BytesToHexErrorType\n  | SliceBytesErrorType\n  | ErrorType\n\nfunction decodeAddress(cursor: Cursor) {\n  const value = cursor.readBytes(32)\n  return [checksumAddress(bytesToHex(sliceBytes(value, -20))), 32]\n}\n\ntype DecodeArrayErrorType = BytesToNumberErrorType | ErrorType\n\nfunction decodeArray(\n  cursor: Cursor,\n  param: AbiParameter,\n  { length, staticPosition }: { length: number | null; staticPosition: number },\n) {\n  // If the length of the array is not known in advance (dynamic array),\n  // this means we will need to wonder off to the pointer and decode.\n  if (!length) {\n    // Dealing with a dynamic type, so get the offset of the array data.\n    const offset = bytesToNumber(cursor.readBytes(sizeOfOffset))\n\n    // Start is the static position of current slot + offset.\n    const start = staticPosition + offset\n    const startOfData = start + sizeOfLength\n\n    // Get the length of the array from the offset.\n    cursor.setPosition(start)\n    const length = bytesToNumber(cursor.readBytes(sizeOfLength))\n\n    // Check if the array has any dynamic children.\n    const dynamicChild = hasDynamicChild(param)\n\n    let consumed = 0\n    const value: unknown[] = []\n    for (let i = 0; i < length; ++i) {\n      // If any of the children is dynamic, then all elements will be offset pointer, thus size of one slot (32 bytes).\n      // Otherwise, elements will be the size of their encoding (consumed bytes).\n      cursor.setPosition(startOfData + (dynamicChild ? i * 32 : consumed))\n      const [data, consumed_] = decodeParameter(cursor, param, {\n        staticPosition: startOfData,\n      })\n      consumed += consumed_\n      value.push(data)\n    }\n\n    // As we have gone wondering, restore to the original position + next slot.\n    cursor.setPosition(staticPosition + 32)\n    return [value, 32]\n  }\n\n  // If the length of the array is known in advance,\n  // and the length of an element deeply nested in the array is not known,\n  // we need to decode the offset of the array data.\n  if (hasDynamicChild(param)) {\n    // Dealing with dynamic types, so get the offset of the array data.\n    const offset = bytesToNumber(cursor.readBytes(sizeOfOffset))\n\n    // Start is the static position of current slot + offset.\n    const start = staticPosition + offset\n\n    const value: unknown[] = []\n    for (let i = 0; i < length; ++i) {\n      // Move cursor along to the next slot (next offset pointer).\n      cursor.setPosition(start + i * 32)\n      const [data] = decodeParameter(cursor, param, {\n        staticPosition: start,\n      })\n      value.push(data)\n    }\n\n    // As we have gone wondering, restore to the original position + next slot.\n    cursor.setPosition(staticPosition + 32)\n    return [value, 32]\n  }\n\n  // If the length of the array is known in advance and the array is deeply static,\n  // then we can just decode each element in sequence.\n  let consumed = 0\n  const value: unknown[] = []\n  for (let i = 0; i < length; ++i) {\n    const [data, consumed_] = decodeParameter(cursor, param, {\n      staticPosition: staticPosition + consumed,\n    })\n    consumed += consumed_\n    value.push(data)\n  }\n  return [value, consumed]\n}\n\ntype DecodeBoolErrorType = BytesToBoolErrorType | ErrorType\n\nfunction decodeBool(cursor: Cursor) {\n  return [bytesToBool(cursor.readBytes(32), { size: 32 }), 32]\n}\n\ntype DecodeBytesErrorType =\n  | BytesToNumberErrorType\n  | BytesToHexErrorType\n  | ErrorType\n\nfunction decodeBytes(\n  cursor: Cursor,\n  param: AbiParameter,\n  { staticPosition }: { staticPosition: number },\n) {\n  const [_, size] = param.type.split('bytes')\n  if (!size) {\n    // Dealing with dynamic types, so get the offset of the bytes data.\n    const offset = bytesToNumber(cursor.readBytes(32))\n\n    // Set position of the cursor to start of bytes data.\n    cursor.setPosition(staticPosition + offset)\n\n    const length = bytesToNumber(cursor.readBytes(32))\n\n    // If there is no length, we have zero data.\n    if (length === 0) {\n      // As we have gone wondering, restore to the original position + next slot.\n      cursor.setPosition(staticPosition + 32)\n      return ['0x', 32]\n    }\n\n    const data = cursor.readBytes(length)\n\n    // As we have gone wondering, restore to the original position + next slot.\n    cursor.setPosition(staticPosition + 32)\n    return [bytesToHex(data), 32]\n  }\n\n  const value = bytesToHex(cursor.readBytes(Number.parseInt(size), 32))\n  return [value, 32]\n}\n\ntype DecodeNumberErrorType =\n  | BytesToNumberErrorType\n  | BytesToBigIntErrorType\n  | ErrorType\n\nfunction decodeNumber(cursor: Cursor, param: AbiParameter) {\n  const signed = param.type.startsWith('int')\n  const size = Number.parseInt(param.type.split('int')[1] || '256')\n  const value = cursor.readBytes(32)\n  return [\n    size > 48\n      ? bytesToBigInt(value, { signed })\n      : bytesToNumber(value, { signed }),\n    32,\n  ]\n}\n\ntype TupleAbiParameter = AbiParameter & { components: readonly AbiParameter[] }\n\ntype DecodeTupleErrorType = BytesToNumberErrorType | ErrorType\n\nfunction decodeTuple(\n  cursor: Cursor,\n  param: TupleAbiParameter,\n  { staticPosition }: { staticPosition: number },\n) {\n  // Tuples can have unnamed components (i.e. they are arrays), so we must\n  // determine whether the tuple is named or unnamed. In the case of a named\n  // tuple, the value will be an object where each property is the name of the\n  // component. In the case of an unnamed tuple, the value will be an array.\n  const hasUnnamedChild =\n    param.components.length === 0 || param.components.some(({ name }) => !name)\n\n  // Initialize the value to an object or an array, depending on whether the\n  // tuple is named or unnamed.\n  const value: any = hasUnnamedChild ? [] : {}\n  let consumed = 0\n\n  // If the tuple has a dynamic child, we must first decode the offset to the\n  // tuple data.\n  if (hasDynamicChild(param)) {\n    // Dealing with dynamic types, so get the offset of the tuple data.\n    const offset = bytesToNumber(cursor.readBytes(sizeOfOffset))\n\n    // Start is the static position of referencing slot + offset.\n    const start = staticPosition + offset\n\n    for (let i = 0; i < param.components.length; ++i) {\n      const component = param.components[i]\n      cursor.setPosition(start + consumed)\n      const [data, consumed_] = decodeParameter(cursor, component, {\n        staticPosition: start,\n      })\n      consumed += consumed_\n      value[hasUnnamedChild ? i : component?.name!] = data\n    }\n\n    // As we have gone wondering, restore to the original position + next slot.\n    cursor.setPosition(staticPosition + 32)\n    return [value, 32]\n  }\n\n  // If the tuple has static children, we can just decode each component\n  // in sequence.\n  for (let i = 0; i < param.components.length; ++i) {\n    const component = param.components[i]\n    const [data, consumed_] = decodeParameter(cursor, component, {\n      staticPosition,\n    })\n    value[hasUnnamedChild ? i : component?.name!] = data\n    consumed += consumed_\n  }\n  return [value, consumed]\n}\n\ntype DecodeStringErrorType =\n  | BytesToNumberErrorType\n  | BytesToStringErrorType\n  | TrimErrorType\n  | ErrorType\n\nfunction decodeString(\n  cursor: Cursor,\n  { staticPosition }: { staticPosition: number },\n) {\n  // Get offset to start of string data.\n  const offset = bytesToNumber(cursor.readBytes(32))\n\n  // Start is the static position of current slot + offset.\n  const start = staticPosition + offset\n  cursor.setPosition(start)\n\n  const length = bytesToNumber(cursor.readBytes(32))\n\n  // If there is no length, we have zero data (empty string).\n  if (length === 0) {\n    cursor.setPosition(staticPosition + 32)\n    return ['', 32]\n  }\n\n  const data = cursor.readBytes(length, 32)\n  const value = bytesToString(trim(data))\n\n  // As we have gone wondering, restore to the original position + next slot.\n  cursor.setPosition(staticPosition + 32)\n\n  return [value, 32]\n}\n\nfunction hasDynamicChild(param: AbiParameter) {\n  const { type } = param\n  if (type === 'string') return true\n  if (type === 'bytes') return true\n  if (type.endsWith('[]')) return true\n\n  if (type === 'tuple') return (param as any).components?.some(hasDynamicChild)\n\n  const arrayComponents = getArrayComponents(param.type)\n  if (\n    arrayComponents &&\n    hasDynamicChild({ ...param, type: arrayComponents[1] } as AbiParameter)\n  )\n    return true\n\n  return false\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 2171, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2176, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/hash/hashSignature.ts"],"sourcesContent":["import { type ToBytesErrorType, toBytes } from '../encoding/toBytes.js'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport { type Keccak256ErrorType, keccak256 } from './keccak256.js'\n\nconst hash = (value: string) => keccak256(toBytes(value))\n\nexport type HashSignatureErrorType =\n  | Keccak256ErrorType\n  | ToBytesErrorType\n  | ErrorType\n\nexport function hashSignature(sig: string) {\n  return hash(sig)\n}\n"],"names":[],"mappings":";;;;;;;;AAKA,MAAM,OAAO,CAAC,QAAkB,CAAA,GAAA,sJAAA,CAAA,YAAS,AAAT,EAAU,CAAA,GAAA,wJAAA,CAAA,UAAO,AAAP,EAAQ;AAO5C,SAAU,cAAc,GAAW;IACvC,OAAO,KAAK;AACd"}},
    {"offset": {"line": 2188, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2193, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/hash/normalizeSignature.ts"],"sourcesContent":["import { BaseError } from '../../errors/base.js'\nimport type { ErrorType } from '../../errors/utils.js'\n\ntype NormalizeSignatureParameters = string\ntype NormalizeSignatureReturnType = string\nexport type NormalizeSignatureErrorType = ErrorType\n\nexport function normalizeSignature(\n  signature: NormalizeSignatureParameters,\n): NormalizeSignatureReturnType {\n  let active = true\n  let current = ''\n  let level = 0\n  let result = ''\n  let valid = false\n\n  for (let i = 0; i < signature.length; i++) {\n    const char = signature[i]\n\n    // If the character is a separator, we want to reactivate.\n    if (['(', ')', ','].includes(char)) active = true\n\n    // If the character is a \"level\" token, we want to increment/decrement.\n    if (char === '(') level++\n    if (char === ')') level--\n\n    // If we aren't active, we don't want to mutate the result.\n    if (!active) continue\n\n    // If level === 0, we are at the definition level.\n    if (level === 0) {\n      if (char === ' ' && ['event', 'function', ''].includes(result))\n        result = ''\n      else {\n        result += char\n\n        // If we are at the end of the definition, we must be finished.\n        if (char === ')') {\n          valid = true\n          break\n        }\n      }\n\n      continue\n    }\n\n    // Ignore spaces\n    if (char === ' ') {\n      // If the previous character is a separator, and the current section isn't empty, we want to deactivate.\n      if (signature[i - 1] !== ',' && current !== ',' && current !== ',(') {\n        current = ''\n        active = false\n      }\n      continue\n    }\n\n    result += char\n    current += char\n  }\n\n  if (!valid) throw new BaseError('Unable to normalize signature.')\n\n  return result\n}\n"],"names":[],"mappings":";;;;;;AAOM,SAAU,mBACd,SAAuC;IAEvC,IAAI,SAAS;IACb,IAAI,UAAU;IACd,IAAI,QAAQ;IACZ,IAAI,SAAS;IACb,IAAI,QAAQ;IAEZ,IAAK,IAAI,IAAI,GAAG,IAAI,UAAU,MAAM,EAAE,IAAK;QACzC,MAAM,OAAO,SAAS,CAAC,EAAE;QAEzB,0DAA0D;QAC1D,IAAI;YAAC;YAAK;YAAK;SAAI,CAAC,QAAQ,CAAC,OAAO,SAAS;QAE7C,uEAAuE;QACvE,IAAI,SAAS,KAAK;QAClB,IAAI,SAAS,KAAK;QAElB,2DAA2D;QAC3D,IAAI,CAAC,QAAQ;QAEb,kDAAkD;QAClD,IAAI,UAAU,GAAG;YACf,IAAI,SAAS,OAAO;gBAAC;gBAAS;gBAAY;aAAG,CAAC,QAAQ,CAAC,SACrD,SAAS;iBACN;gBACH,UAAU;gBAEV,+DAA+D;gBAC/D,IAAI,SAAS,KAAK;oBAChB,QAAQ;oBACR;gBACF;YACF;YAEA;QACF;QAEA,gBAAgB;QAChB,IAAI,SAAS,KAAK;YAChB,wGAAwG;YACxG,IAAI,SAAS,CAAC,IAAI,EAAE,KAAK,OAAO,YAAY,OAAO,YAAY,MAAM;gBACnE,UAAU;gBACV,SAAS;YACX;YACA;QACF;QAEA,UAAU;QACV,WAAW;IACb;IAEA,IAAI,CAAC,OAAO,MAAM,IAAI,0IAAA,CAAA,YAAS,CAAC;IAEhC,OAAO;AACT"}},
    {"offset": {"line": 2250, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2255, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/hash/toSignature.ts"],"sourcesContent":["import { type AbiEvent, type AbiFunction, formatAbiItem } from 'abitype'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport {\n  type NormalizeSignatureErrorType,\n  normalizeSignature,\n} from './normalizeSignature.js'\n\nexport type ToSignatureErrorType = NormalizeSignatureErrorType | ErrorType\n\n/**\n * Returns the signature for a given function or event definition.\n *\n * @example\n * const signature = toSignature('function ownerOf(uint256 tokenId)')\n * // 'ownerOf(uint256)'\n *\n * @example\n * const signature_3 = toSignature({\n *   name: 'ownerOf',\n *   type: 'function',\n *   inputs: [{ name: 'tokenId', type: 'uint256' }],\n *   outputs: [],\n *   stateMutability: 'view',\n * })\n * // 'ownerOf(uint256)'\n */\nexport const toSignature = (def: string | AbiFunction | AbiEvent) => {\n  const def_ = (() => {\n    if (typeof def === 'string') return def\n    return formatAbiItem(def)\n  })()\n  return normalizeSignature(def_)\n}\n"],"names":[],"mappings":";;;;;;;;AA2BO,MAAM,cAAc,CAAC;IAC1B,MAAM,OAAO,CAAC;QACZ,IAAI,OAAO,QAAQ,UAAU,OAAO;QACpC,OAAO,CAAA,GAAA,wKAAA,CAAA,gBAAa,AAAb,EAAc;IACvB,CAAC;IACD,OAAO,CAAA,GAAA,+JAAA,CAAA,qBAAkB,AAAlB,EAAmB;AAC5B"}},
    {"offset": {"line": 2270, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2275, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/hash/toSignatureHash.ts"],"sourcesContent":["import type { AbiEvent, AbiFunction } from 'abitype'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport { type HashSignatureErrorType, hashSignature } from './hashSignature.js'\nimport { type ToSignatureErrorType, toSignature } from './toSignature.js'\n\nexport type ToSignatureHashErrorType =\n  | HashSignatureErrorType\n  | ToSignatureErrorType\n  | ErrorType\n\n/**\n * Returns the hash (of the function/event signature) for a given event or function definition.\n */\nexport function toSignatureHash(fn: string | AbiFunction | AbiEvent) {\n  return hashSignature(toSignature(fn))\n}\n"],"names":[],"mappings":";;;;;;;;AAcM,SAAU,gBAAgB,EAAmC;IACjE,OAAO,CAAA,GAAA,0JAAA,CAAA,gBAAa,AAAb,EAAc,CAAA,GAAA,wJAAA,CAAA,cAAW,AAAX,EAAY;AACnC"}},
    {"offset": {"line": 2286, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2291, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/hash/toEventSelector.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\nimport {\n  type ToSignatureHashErrorType,\n  toSignatureHash,\n} from './toSignatureHash.js'\n\nexport type ToEventSelectorErrorType = ToSignatureHashErrorType | ErrorType\n\n/**\n * Returns the event selector for a given event definition.\n *\n * @example\n * const selector = toEventSelector('Transfer(address indexed from, address indexed to, uint256 amount)')\n * // 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n */\nexport const toEventSelector = toSignatureHash\n"],"names":[],"mappings":";;;;;;AAeO,MAAM,kBAAkB,4JAAA,CAAA,kBAAe"}},
    {"offset": {"line": 2298, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2303, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/hash/toFunctionSelector.ts"],"sourcesContent":["import type { AbiFunction } from 'abitype'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport { type SliceErrorType, slice } from '../data/slice.js'\nimport {\n  type ToSignatureHashErrorType,\n  toSignatureHash,\n} from './toSignatureHash.js'\n\nexport type ToFunctionSelectorErrorType =\n  | ToSignatureHashErrorType\n  | SliceErrorType\n  | ErrorType\n\n/**\n * Returns the function selector for a given function definition.\n *\n * @example\n * const selector = toFunctionSelector('function ownerOf(uint256 tokenId)')\n * // 0x6352211e\n */\nexport const toFunctionSelector = (fn: string | AbiFunction) =>\n  slice(toSignatureHash(fn), 0, 4)\n"],"names":[],"mappings":";;;;;;;;AAqBO,MAAM,qBAAqB,CAAC,KACjC,CAAA,GAAA,kJAAA,CAAA,QAAK,AAAL,EAAM,CAAA,GAAA,4JAAA,CAAA,kBAAe,AAAf,EAAgB,KAAK,GAAG"}},
    {"offset": {"line": 2312, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2317, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/abi/getAbiItem.ts"],"sourcesContent":["import type { Abi, AbiParameter, Address } from 'abitype'\n\nimport {\n  AbiItemAmbiguityError,\n  type AbiItemAmbiguityErrorType,\n} from '../../errors/abi.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type {\n  AbiItem,\n  AbiItemArgs,\n  AbiItemName,\n  ExtractAbiItemForArgs,\n  Widen,\n} from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { UnionEvaluate } from '../../types/utils.js'\nimport { type IsHexErrorType, isHex } from '../../utils/data/isHex.js'\nimport { type IsAddressErrorType, isAddress } from '../address/isAddress.js'\nimport { toEventSelector } from '../hash/toEventSelector.js'\nimport {\n  type ToFunctionSelectorErrorType,\n  toFunctionSelector,\n} from '../hash/toFunctionSelector.js'\n\nexport type GetAbiItemParameters<\n  abi extends Abi | readonly unknown[] = Abi,\n  name extends AbiItemName<abi> = AbiItemName<abi>,\n  args extends AbiItemArgs<abi, name> | undefined = AbiItemArgs<abi, name>,\n  ///\n  allArgs = AbiItemArgs<abi, name>,\n  allNames = AbiItemName<abi>,\n> = {\n  abi: abi\n  name:\n    | allNames // show all options\n    | (name extends allNames ? name : never) // infer value\n    | Hex // function selector\n} & UnionEvaluate<\n  readonly [] extends allArgs\n    ? {\n        args?:\n          | allArgs // show all options\n          // infer value, widen inferred value of `args` conditionally to match `allArgs`\n          | (abi extends Abi\n              ? args extends allArgs\n                ? Widen<args>\n                : never\n              : never)\n          | undefined\n      }\n    : {\n        args?:\n          | allArgs // show all options\n          | (Widen<args> & (args extends allArgs ? unknown : never)) // infer value, widen inferred value of `args` match `allArgs` (e.g. avoid union `args: readonly [123n] | readonly [bigint]`)\n          | undefined\n      }\n>\n\nexport type GetAbiItemErrorType =\n  | IsArgOfTypeErrorType\n  | IsHexErrorType\n  | ToFunctionSelectorErrorType\n  | AbiItemAmbiguityErrorType\n  | ErrorType\n\nexport type GetAbiItemReturnType<\n  abi extends Abi | readonly unknown[] = Abi,\n  name extends AbiItemName<abi> = AbiItemName<abi>,\n  args extends AbiItemArgs<abi, name> | undefined = AbiItemArgs<abi, name>,\n> = abi extends Abi\n  ? Abi extends abi\n    ? AbiItem | undefined\n    : ExtractAbiItemForArgs<\n        abi,\n        name,\n        args extends AbiItemArgs<abi, name> ? args : AbiItemArgs<abi, name>\n      >\n  : AbiItem | undefined\n\nexport function getAbiItem<\n  const abi extends Abi | readonly unknown[],\n  name extends AbiItemName<abi>,\n  const args extends AbiItemArgs<abi, name> | undefined = undefined,\n>(\n  parameters: GetAbiItemParameters<abi, name, args>,\n): GetAbiItemReturnType<abi, name, args> {\n  const { abi, args = [], name } = parameters as unknown as GetAbiItemParameters\n\n  const isSelector = isHex(name, { strict: false })\n  const abiItems = (abi as Abi).filter((abiItem) => {\n    if (isSelector) {\n      if (abiItem.type === 'function')\n        return toFunctionSelector(abiItem) === name\n      if (abiItem.type === 'event') return toEventSelector(abiItem) === name\n      return false\n    }\n    return 'name' in abiItem && abiItem.name === name\n  })\n\n  if (abiItems.length === 0)\n    return undefined as GetAbiItemReturnType<abi, name, args>\n  if (abiItems.length === 1)\n    return abiItems[0] as GetAbiItemReturnType<abi, name, args>\n\n  let matchedAbiItem: AbiItem | undefined = undefined\n  for (const abiItem of abiItems) {\n    if (!('inputs' in abiItem)) continue\n    if (!args || args.length === 0) {\n      if (!abiItem.inputs || abiItem.inputs.length === 0)\n        return abiItem as GetAbiItemReturnType<abi, name, args>\n      continue\n    }\n    if (!abiItem.inputs) continue\n    if (abiItem.inputs.length === 0) continue\n    if (abiItem.inputs.length !== args.length) continue\n    const matched = args.every((arg, index) => {\n      const abiParameter = 'inputs' in abiItem && abiItem.inputs![index]\n      if (!abiParameter) return false\n      return isArgOfType(arg, abiParameter)\n    })\n    if (matched) {\n      // Check for ambiguity against already matched parameters (e.g. `address` vs `bytes20`).\n      if (\n        matchedAbiItem &&\n        'inputs' in matchedAbiItem &&\n        matchedAbiItem.inputs\n      ) {\n        const ambiguousTypes = getAmbiguousTypes(\n          abiItem.inputs,\n          matchedAbiItem.inputs,\n          args as readonly unknown[],\n        )\n        if (ambiguousTypes)\n          throw new AbiItemAmbiguityError(\n            {\n              abiItem,\n              type: ambiguousTypes[0],\n            },\n            {\n              abiItem: matchedAbiItem,\n              type: ambiguousTypes[1],\n            },\n          )\n      }\n\n      matchedAbiItem = abiItem\n    }\n  }\n\n  if (matchedAbiItem)\n    return matchedAbiItem as GetAbiItemReturnType<abi, name, args>\n  return abiItems[0] as GetAbiItemReturnType<abi, name, args>\n}\n\ntype IsArgOfTypeErrorType = IsAddressErrorType | ErrorType\n\n/** @internal */\nexport function isArgOfType(arg: unknown, abiParameter: AbiParameter): boolean {\n  const argType = typeof arg\n  const abiParameterType = abiParameter.type\n  switch (abiParameterType) {\n    case 'address':\n      return isAddress(arg as Address, { strict: false })\n    case 'bool':\n      return argType === 'boolean'\n    case 'function':\n      return argType === 'string'\n    case 'string':\n      return argType === 'string'\n    default: {\n      if (abiParameterType === 'tuple' && 'components' in abiParameter)\n        return Object.values(abiParameter.components).every(\n          (component, index) => {\n            return isArgOfType(\n              Object.values(arg as unknown[] | Record<string, unknown>)[index],\n              component as AbiParameter,\n            )\n          },\n        )\n\n      // `(u)int<M>`: (un)signed integer type of `M` bits, `0 < M <= 256`, `M % 8 == 0`\n      // https://regexr.com/6v8hp\n      if (\n        /^u?int(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/.test(\n          abiParameterType,\n        )\n      )\n        return argType === 'number' || argType === 'bigint'\n\n      // `bytes<M>`: binary type of `M` bytes, `0 < M <= 32`\n      // https://regexr.com/6va55\n      if (/^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/.test(abiParameterType))\n        return argType === 'string' || arg instanceof Uint8Array\n\n      // fixed-length (`<type>[M]`) and dynamic (`<type>[]`) arrays\n      // https://regexr.com/6va6i\n      if (/[a-z]+[1-9]{0,3}(\\[[0-9]{0,}\\])+$/.test(abiParameterType)) {\n        return (\n          Array.isArray(arg) &&\n          arg.every((x: unknown) =>\n            isArgOfType(x, {\n              ...abiParameter,\n              // Pop off `[]` or `[M]` from end of type\n              type: abiParameterType.replace(/(\\[[0-9]{0,}\\])$/, ''),\n            } as AbiParameter),\n          )\n        )\n      }\n\n      return false\n    }\n  }\n}\n\n/** @internal */\nexport function getAmbiguousTypes(\n  sourceParameters: readonly AbiParameter[],\n  targetParameters: readonly AbiParameter[],\n  args: AbiItemArgs,\n): AbiParameter['type'][] | undefined {\n  for (const parameterIndex in sourceParameters) {\n    const sourceParameter = sourceParameters[parameterIndex]\n    const targetParameter = targetParameters[parameterIndex]\n\n    if (\n      sourceParameter.type === 'tuple' &&\n      targetParameter.type === 'tuple' &&\n      'components' in sourceParameter &&\n      'components' in targetParameter\n    )\n      return getAmbiguousTypes(\n        sourceParameter.components,\n        targetParameter.components,\n        (args as any)[parameterIndex],\n      )\n\n    const types = [sourceParameter.type, targetParameter.type]\n\n    const ambiguous = (() => {\n      if (types.includes('address') && types.includes('bytes20')) return true\n      if (types.includes('address') && types.includes('string'))\n        return isAddress(args[parameterIndex] as Address, { strict: false })\n      if (types.includes('address') && types.includes('bytes'))\n        return isAddress(args[parameterIndex] as Address, { strict: false })\n      return false\n    })()\n\n    if (ambiguous) return types\n  }\n\n  return\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 2442, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2447, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/abi/decodeFunctionResult.ts"],"sourcesContent":["import type { Abi, AbiStateMutability, ExtractAbiFunctions } from 'abitype'\n\nimport {\n  AbiFunctionNotFoundError,\n  type AbiFunctionNotFoundErrorType,\n  AbiFunctionOutputsNotFoundError,\n  type AbiFunctionOutputsNotFoundErrorType,\n} from '../../errors/abi.js'\nimport type {\n  ContractFunctionArgs,\n  ContractFunctionName,\n  ContractFunctionReturnType,\n  Widen,\n} from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { IsNarrowable, UnionEvaluate } from '../../types/utils.js'\nimport {\n  type DecodeAbiParametersErrorType,\n  decodeAbiParameters,\n} from './decodeAbiParameters.js'\nimport { type GetAbiItemErrorType, getAbiItem } from './getAbiItem.js'\n\nconst docsPath = '/docs/contract/decodeFunctionResult'\n\nexport type DecodeFunctionResultParameters<\n  abi extends Abi | readonly unknown[] = Abi,\n  functionName extends\n    | ContractFunctionName<abi>\n    | undefined = ContractFunctionName<abi>,\n  args extends ContractFunctionArgs<\n    abi,\n    AbiStateMutability,\n    functionName extends ContractFunctionName<abi>\n      ? functionName\n      : ContractFunctionName<abi>\n  > = ContractFunctionArgs<\n    abi,\n    AbiStateMutability,\n    functionName extends ContractFunctionName<abi>\n      ? functionName\n      : ContractFunctionName<abi>\n  >,\n  ///\n  hasFunctions = abi extends Abi\n    ? Abi extends abi\n      ? true\n      : [ExtractAbiFunctions<abi>] extends [never]\n        ? false\n        : true\n    : true,\n  allArgs = ContractFunctionArgs<\n    abi,\n    AbiStateMutability,\n    functionName extends ContractFunctionName<abi>\n      ? functionName\n      : ContractFunctionName<abi>\n  >,\n  allFunctionNames = ContractFunctionName<abi>,\n> = {\n  abi: abi\n  data: Hex\n} & UnionEvaluate<\n  IsNarrowable<abi, Abi> extends true\n    ? abi['length'] extends 1\n      ? { functionName?: functionName | allFunctionNames | undefined }\n      : { functionName: functionName | allFunctionNames }\n    : { functionName?: functionName | allFunctionNames | undefined }\n> &\n  UnionEvaluate<\n    readonly [] extends allArgs\n      ? {\n          args?:\n            | allArgs // show all options\n            // infer value, widen inferred value of `args` conditionally to match `allArgs`\n            | (abi extends Abi\n                ? args extends allArgs\n                  ? Widen<args>\n                  : never\n                : never)\n            | undefined\n        }\n      : {\n          args?:\n            | allArgs // show all options\n            | (Widen<args> & (args extends allArgs ? unknown : never)) // infer value, widen inferred value of `args` match `allArgs` (e.g. avoid union `args: readonly [123n] | readonly [bigint]`)\n            | undefined\n        }\n  > &\n  (hasFunctions extends true ? unknown : never)\n\nexport type DecodeFunctionResultReturnType<\n  abi extends Abi | readonly unknown[] = Abi,\n  functionName extends\n    | ContractFunctionName<abi>\n    | undefined = ContractFunctionName<abi>,\n  args extends ContractFunctionArgs<\n    abi,\n    AbiStateMutability,\n    functionName extends ContractFunctionName<abi>\n      ? functionName\n      : ContractFunctionName<abi>\n  > = ContractFunctionArgs<\n    abi,\n    AbiStateMutability,\n    functionName extends ContractFunctionName<abi>\n      ? functionName\n      : ContractFunctionName<abi>\n  >,\n> = ContractFunctionReturnType<\n  abi,\n  AbiStateMutability,\n  functionName extends ContractFunctionName<abi>\n    ? functionName\n    : ContractFunctionName<abi>,\n  args\n>\n\nexport type DecodeFunctionResultErrorType =\n  | AbiFunctionNotFoundErrorType\n  | AbiFunctionOutputsNotFoundErrorType\n  | DecodeAbiParametersErrorType\n  | GetAbiItemErrorType\n  | ErrorType\n\nexport function decodeFunctionResult<\n  const abi extends Abi | readonly unknown[],\n  functionName extends ContractFunctionName<abi> | undefined = undefined,\n  const args extends ContractFunctionArgs<\n    abi,\n    AbiStateMutability,\n    functionName extends ContractFunctionName<abi>\n      ? functionName\n      : ContractFunctionName<abi>\n  > = ContractFunctionArgs<\n    abi,\n    AbiStateMutability,\n    functionName extends ContractFunctionName<abi>\n      ? functionName\n      : ContractFunctionName<abi>\n  >,\n>(\n  parameters: DecodeFunctionResultParameters<abi, functionName, args>,\n): DecodeFunctionResultReturnType<abi, functionName, args> {\n  const { abi, args, functionName, data } =\n    parameters as DecodeFunctionResultParameters\n\n  let abiItem = abi[0]\n  if (functionName) {\n    const item = getAbiItem({ abi, args, name: functionName })\n    if (!item) throw new AbiFunctionNotFoundError(functionName, { docsPath })\n    abiItem = item\n  }\n\n  if (abiItem.type !== 'function')\n    throw new AbiFunctionNotFoundError(undefined, { docsPath })\n  if (!abiItem.outputs)\n    throw new AbiFunctionOutputsNotFoundError(abiItem.name, { docsPath })\n\n  const values = decodeAbiParameters(abiItem.outputs, data)\n  if (values && values.length > 1)\n    return values as DecodeFunctionResultReturnType<abi, functionName, args>\n  if (values && values.length === 1)\n    return values[0] as DecodeFunctionResultReturnType<abi, functionName, args>\n  return undefined as DecodeFunctionResultReturnType<abi, functionName, args>\n}\n"],"names":[],"mappings":";;;;;;;;;;AAwBA,MAAM,WAAW;AAsGX,SAAU,qBAiBd,UAAmE;IAEnE,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,GACrC;IAEF,IAAI,UAAU,GAAG,CAAC,EAAE;IACpB,IAAI,cAAc;QAChB,MAAM,OAAO,CAAA,GAAA,sJAAA,CAAA,aAAU,AAAV,EAAW;YAAE;YAAK;YAAM,MAAM;QAAY;QACvD,IAAI,CAAC,MAAM,MAAM,IAAI,yIAAA,CAAA,2BAAwB,CAAC,cAAc;YAAE;QAAQ;QACtE,UAAU;IACZ;IAEA,IAAI,QAAQ,IAAI,KAAK,YACnB,MAAM,IAAI,yIAAA,CAAA,2BAAwB,CAAC,WAAW;QAAE;IAAQ;IAC1D,IAAI,CAAC,QAAQ,OAAO,EAClB,MAAM,IAAI,yIAAA,CAAA,kCAA+B,CAAC,QAAQ,IAAI,EAAE;QAAE;IAAQ;IAEpE,MAAM,SAAS,CAAA,GAAA,+JAAA,CAAA,sBAAmB,AAAnB,EAAoB,QAAQ,OAAO,EAAE;IACpD,IAAI,UAAU,OAAO,MAAM,GAAG,GAC5B,OAAO;IACT,IAAI,UAAU,OAAO,MAAM,KAAK,GAC9B,OAAO,MAAM,CAAC,EAA6D;IAC7E,OAAO;AACT"}},
    {"offset": {"line": 2483, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2488, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/abi/prepareEncodeFunctionData.ts"],"sourcesContent":["import type {\n  Abi,\n  AbiStateMutability,\n  ExtractAbiFunction,\n  ExtractAbiFunctions,\n} from 'abitype'\n\nimport {\n  AbiFunctionNotFoundError,\n  type AbiFunctionNotFoundErrorType,\n} from '../../errors/abi.js'\nimport type {\n  ContractFunctionArgs,\n  ContractFunctionName,\n} from '../../types/contract.js'\nimport type { ConcatHexErrorType } from '../data/concat.js'\nimport {\n  type ToFunctionSelectorErrorType,\n  toFunctionSelector,\n} from '../hash/toFunctionSelector.js'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { IsNarrowable, UnionEvaluate } from '../../types/utils.js'\nimport { type FormatAbiItemErrorType, formatAbiItem } from './formatAbiItem.js'\nimport { type GetAbiItemErrorType, getAbiItem } from './getAbiItem.js'\n\nconst docsPath = '/docs/contract/encodeFunctionData'\n\nexport type PrepareEncodeFunctionDataParameters<\n  abi extends Abi | readonly unknown[] = Abi,\n  functionName extends\n    | ContractFunctionName<abi>\n    | undefined = ContractFunctionName<abi>,\n  ///\n  hasFunctions = abi extends Abi\n    ? Abi extends abi\n      ? true\n      : [ExtractAbiFunctions<abi>] extends [never]\n        ? false\n        : true\n    : true,\n  allArgs = ContractFunctionArgs<\n    abi,\n    AbiStateMutability,\n    functionName extends ContractFunctionName<abi>\n      ? functionName\n      : ContractFunctionName<abi>\n  >,\n  allFunctionNames = ContractFunctionName<abi>,\n> = {\n  abi: abi\n} & UnionEvaluate<\n  IsNarrowable<abi, Abi> extends true\n    ? abi['length'] extends 1\n      ? { functionName?: functionName | allFunctionNames | Hex | undefined }\n      : { functionName: functionName | allFunctionNames | Hex }\n    : { functionName?: functionName | allFunctionNames | Hex | undefined }\n> &\n  UnionEvaluate<{ args?: allArgs | undefined }> &\n  (hasFunctions extends true ? unknown : never)\n\nexport type PrepareEncodeFunctionDataReturnType<\n  abi extends Abi | readonly unknown[] = Abi,\n  functionName extends\n    | ContractFunctionName<abi>\n    | undefined = ContractFunctionName<abi>,\n> = {\n  abi: abi extends Abi\n    ? functionName extends ContractFunctionName<abi>\n      ? [ExtractAbiFunction<abi, functionName>]\n      : abi\n    : Abi\n  functionName: Hex\n}\n\nexport type PrepareEncodeFunctionDataErrorType =\n  | AbiFunctionNotFoundErrorType\n  | ConcatHexErrorType\n  | FormatAbiItemErrorType\n  | GetAbiItemErrorType\n  | ToFunctionSelectorErrorType\n  | ErrorType\n\nexport function prepareEncodeFunctionData<\n  const abi extends Abi | readonly unknown[],\n  functionName extends ContractFunctionName<abi> | undefined = undefined,\n>(\n  parameters: PrepareEncodeFunctionDataParameters<abi, functionName>,\n): PrepareEncodeFunctionDataReturnType<abi, functionName> {\n  const { abi, args, functionName } =\n    parameters as PrepareEncodeFunctionDataParameters\n\n  let abiItem = abi[0]\n  if (functionName) {\n    const item = getAbiItem({\n      abi,\n      args,\n      name: functionName,\n    })\n    if (!item) throw new AbiFunctionNotFoundError(functionName, { docsPath })\n    abiItem = item\n  }\n\n  if (abiItem.type !== 'function')\n    throw new AbiFunctionNotFoundError(undefined, { docsPath })\n\n  return {\n    abi: [abiItem],\n    functionName: toFunctionSelector(formatAbiItem(abiItem)),\n  } as unknown as PrepareEncodeFunctionDataReturnType<abi, functionName>\n}\n"],"names":[],"mappings":";;;;;;;;;;;;AA2BA,MAAM,WAAW;AAyDX,SAAU,0BAId,UAAkE;IAElE,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,YAAY,EAAE,GAC/B;IAEF,IAAI,UAAU,GAAG,CAAC,EAAE;IACpB,IAAI,cAAc;QAChB,MAAM,OAAO,CAAA,GAAA,sJAAA,CAAA,aAAU,AAAV,EAAW;YACtB;YACA;YACA,MAAM;;QAER,IAAI,CAAC,MAAM,MAAM,IAAI,yIAAA,CAAA,2BAAwB,CAAC,cAAc;YAAE;QAAQ;QACtE,UAAU;IACZ;IAEA,IAAI,QAAQ,IAAI,KAAK,YACnB,MAAM,IAAI,yIAAA,CAAA,2BAAwB,CAAC,WAAW;QAAE;IAAQ;IAE1D,OAAO;QACL,KAAK;YAAC;SAAQ;QACd,cAAc,CAAA,GAAA,+JAAA,CAAA,qBAAkB,AAAlB,EAAmB,CAAA,GAAA,yJAAA,CAAA,gBAAa,AAAb,EAAc;;AAEnD"}},
    {"offset": {"line": 2525, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2530, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/abi/encodeFunctionData.ts"],"sourcesContent":["import type { Abi, AbiStateMutability, ExtractAbiFunctions } from 'abitype'\n\nimport type { AbiFunctionNotFoundErrorType } from '../../errors/abi.js'\nimport type {\n  ContractFunctionArgs,\n  ContractFunctionName,\n} from '../../types/contract.js'\nimport { type ConcatHexErrorType, concatHex } from '../data/concat.js'\nimport type { ToFunctionSelectorErrorType } from '../hash/toFunctionSelector.js'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { IsNarrowable, UnionEvaluate } from '../../types/utils.js'\nimport {\n  type EncodeAbiParametersErrorType,\n  encodeAbiParameters,\n} from './encodeAbiParameters.js'\nimport type { FormatAbiItemErrorType } from './formatAbiItem.js'\nimport type { GetAbiItemErrorType } from './getAbiItem.js'\nimport { prepareEncodeFunctionData } from './prepareEncodeFunctionData.js'\n\nexport type EncodeFunctionDataParameters<\n  abi extends Abi | readonly unknown[] = Abi,\n  functionName extends\n    | ContractFunctionName<abi>\n    | Hex\n    | undefined = ContractFunctionName<abi>,\n  ///\n  hasFunctions = abi extends Abi\n    ? Abi extends abi\n      ? true\n      : [ExtractAbiFunctions<abi>] extends [never]\n        ? false\n        : true\n    : true,\n  allArgs = ContractFunctionArgs<\n    abi,\n    AbiStateMutability,\n    functionName extends ContractFunctionName<abi>\n      ? functionName\n      : ContractFunctionName<abi>\n  >,\n  allFunctionNames = ContractFunctionName<abi>,\n> = {\n  abi: abi\n} & UnionEvaluate<\n  IsNarrowable<abi, Abi> extends true\n    ? abi['length'] extends 1\n      ? { functionName?: functionName | allFunctionNames | Hex | undefined }\n      : { functionName: functionName | allFunctionNames | Hex }\n    : { functionName?: functionName | allFunctionNames | Hex | undefined }\n> &\n  UnionEvaluate<\n    readonly [] extends allArgs\n      ? { args?: allArgs | undefined }\n      : { args: allArgs }\n  > &\n  (hasFunctions extends true ? unknown : never)\n\nexport type EncodeFunctionDataReturnType = Hex\n\nexport type EncodeFunctionDataErrorType =\n  | AbiFunctionNotFoundErrorType\n  | ConcatHexErrorType\n  | EncodeAbiParametersErrorType\n  | FormatAbiItemErrorType\n  | GetAbiItemErrorType\n  | ToFunctionSelectorErrorType\n  | ErrorType\n\nexport function encodeFunctionData<\n  const abi extends Abi | readonly unknown[],\n  functionName extends ContractFunctionName<abi> | undefined = undefined,\n>(\n  parameters: EncodeFunctionDataParameters<abi, functionName>,\n): EncodeFunctionDataReturnType {\n  const { args } = parameters as EncodeFunctionDataParameters\n\n  const { abi, functionName } = (() => {\n    if (\n      parameters.abi.length === 1 &&\n      parameters.functionName?.startsWith('0x')\n    )\n      return parameters as { abi: Abi; functionName: Hex }\n    return prepareEncodeFunctionData(parameters)\n  })()\n\n  const abiItem = abi[0]\n  const signature = functionName\n\n  const data =\n    'inputs' in abiItem && abiItem.inputs\n      ? encodeAbiParameters(abiItem.inputs, args ?? [])\n      : undefined\n  return concatHex([signature, data ?? '0x'])\n}\n"],"names":[],"mappings":";;;;;;;;;;AAsEM,SAAU,mBAId,UAA2D;IAE3D,MAAM,EAAE,IAAI,EAAE,GAAG;IAEjB,MAAM,EAAE,GAAG,EAAE,YAAY,EAAE,GAAG,CAAC;QAC7B,IACE,WAAW,GAAG,CAAC,MAAM,KAAK,KAC1B,WAAW,YAAY,EAAE,WAAW,OAEpC,OAAO;QACT,OAAO,CAAA,GAAA,qKAAA,CAAA,4BAAyB,AAAzB,EAA0B;IACnC,CAAC;IAED,MAAM,UAAU,GAAG,CAAC,EAAE;IACtB,MAAM,YAAY;IAElB,MAAM,OACJ,YAAY,WAAW,QAAQ,MAAM,GACjC,CAAA,GAAA,+JAAA,CAAA,sBAAmB,AAAnB,EAAoB,QAAQ,MAAM,EAAE,QAAQ,EAAE,IAC9C;IACN,OAAO,CAAA,GAAA,mJAAA,CAAA,YAAS,AAAT,EAAU;QAAC;QAAW,QAAQ;KAAK;AAC5C"}},
    {"offset": {"line": 2554, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2559, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/accounts/utils/parseAccount.ts"],"sourcesContent":["import type { Address } from 'abitype'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../types.js'\n\nexport type ParseAccountErrorType = ErrorType\n\nexport function parseAccount<accountOrAddress extends Address | Account>(\n  account: accountOrAddress,\n): accountOrAddress extends Address ? Account : accountOrAddress {\n  if (typeof account === 'string')\n    return { address: account, type: 'json-rpc' } as any\n  return account as any\n}\n"],"names":[],"mappings":";;;AAOM,SAAU,aACd,OAAyB;IAEzB,IAAI,OAAO,YAAY,UACrB,OAAO;QAAE,SAAS;QAAS,MAAM;IAAU;IAC7C,OAAO;AACT"}},
    {"offset": {"line": 2569, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2574, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/constants/solidity.ts"],"sourcesContent":["import type { AbiError } from 'abitype'\n\n// https://docs.soliditylang.org/en/v0.8.16/control-structures.html#panic-via-assert-and-error-via-require\nexport const panicReasons = {\n  1: 'An `assert` condition failed.',\n  17: 'Arithmetic operation resulted in underflow or overflow.',\n  18: 'Division or modulo by zero (e.g. `5 / 0` or `23 % 0`).',\n  33: 'Attempted to convert to an invalid type.',\n  34: 'Attempted to access a storage byte array that is incorrectly encoded.',\n  49: 'Performed `.pop()` on an empty array',\n  50: 'Array index is out of bounds.',\n  65: 'Allocated too much memory or created an array which is too large.',\n  81: 'Attempted to call a zero-initialized variable of internal function type.',\n} as const\n\nexport const solidityError: AbiError = {\n  inputs: [\n    {\n      name: 'message',\n      type: 'string',\n    },\n  ],\n  name: 'Error',\n  type: 'error',\n}\nexport const solidityPanic: AbiError = {\n  inputs: [\n    {\n      name: 'reason',\n      type: 'uint256',\n    },\n  ],\n  name: 'Panic',\n  type: 'error',\n}\n"],"names":[],"mappings":"AAEA,0GAA0G;;;;;;AACnG,MAAM,eAAe;IAC1B,GAAG;IACH,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;;AAGC,MAAM,gBAA0B;IACrC,QAAQ;QACN;YACE,MAAM;YACN,MAAM;;KAET;IACD,MAAM;IACN,MAAM;;AAED,MAAM,gBAA0B;IACrC,QAAQ;QACN;YACE,MAAM;YACN,MAAM;;KAET;IACD,MAAM;IACN,MAAM"}},
    {"offset": {"line": 2611, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2616, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/abi/decodeErrorResult.ts"],"sourcesContent":["import type { Abi, ExtractAbiError } from 'abitype'\n\nimport { solidityError, solidityPanic } from '../../constants/solidity.js'\nimport {\n  AbiDecodingZeroDataError,\n  type AbiDecodingZeroDataErrorType,\n  AbiErrorSignatureNotFoundError,\n  type AbiErrorSignatureNotFoundErrorType,\n} from '../../errors/abi.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type {\n  AbiItem,\n  ContractErrorArgs,\n  ContractErrorName,\n} from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { IsNarrowable, UnionEvaluate } from '../../types/utils.js'\nimport { slice } from '../data/slice.js'\nimport {\n  type ToFunctionSelectorErrorType,\n  toFunctionSelector,\n} from '../hash/toFunctionSelector.js'\nimport {\n  type DecodeAbiParametersErrorType,\n  decodeAbiParameters,\n} from './decodeAbiParameters.js'\nimport { type FormatAbiItemErrorType, formatAbiItem } from './formatAbiItem.js'\n\nexport type DecodeErrorResultParameters<\n  abi extends Abi | readonly unknown[] = Abi,\n> = { abi?: abi | undefined; data: Hex }\n\nexport type DecodeErrorResultReturnType<\n  abi extends Abi | readonly unknown[] = Abi,\n  ///\n  allErrorNames extends ContractErrorName<abi> = ContractErrorName<abi>,\n> = IsNarrowable<abi, Abi> extends true\n  ? UnionEvaluate<\n      {\n        [errorName in allErrorNames]: {\n          abiItem: abi extends Abi\n            ? Abi extends abi\n              ? AbiItem\n              : ExtractAbiError<abi, errorName>\n            : AbiItem\n          args: ContractErrorArgs<abi, errorName>\n          errorName: errorName\n        }\n      }[allErrorNames]\n    >\n  : {\n      abiItem: AbiItem\n      args: readonly unknown[] | undefined\n      errorName: string\n    }\n\nexport type DecodeErrorResultErrorType =\n  | AbiDecodingZeroDataErrorType\n  | AbiErrorSignatureNotFoundErrorType\n  | DecodeAbiParametersErrorType\n  | FormatAbiItemErrorType\n  | ToFunctionSelectorErrorType\n  | ErrorType\n\nexport function decodeErrorResult<const abi extends Abi | readonly unknown[]>(\n  parameters: DecodeErrorResultParameters<abi>,\n): DecodeErrorResultReturnType<abi> {\n  const { abi, data } = parameters as DecodeErrorResultParameters\n\n  const signature = slice(data, 0, 4)\n  if (signature === '0x') throw new AbiDecodingZeroDataError()\n\n  const abi_ = [...(abi || []), solidityError, solidityPanic]\n  const abiItem = abi_.find(\n    (x) =>\n      x.type === 'error' && signature === toFunctionSelector(formatAbiItem(x)),\n  )\n  if (!abiItem)\n    throw new AbiErrorSignatureNotFoundError(signature, {\n      docsPath: '/docs/contract/decodeErrorResult',\n    })\n  return {\n    abiItem,\n    args:\n      'inputs' in abiItem && abiItem.inputs && abiItem.inputs.length > 0\n        ? decodeAbiParameters(abiItem.inputs, slice(data, 4))\n        : undefined,\n    errorName: (abiItem as { name: string }).name,\n  } as DecodeErrorResultReturnType<abi>\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAgEM,SAAU,kBACd,UAA4C;IAE5C,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG;IAEtB,MAAM,YAAY,CAAA,GAAA,kJAAA,CAAA,QAAK,AAAL,EAAM,MAAM,GAAG;IACjC,IAAI,cAAc,MAAM,MAAM,IAAI,yIAAA,CAAA,2BAAwB;IAE1D,MAAM,OAAO;WAAK,OAAO,EAAE;QAAG,iJAAA,CAAA,gBAAa;QAAE,iJAAA,CAAA,gBAAa;KAAC;IAC3D,MAAM,UAAU,KAAK,IAAI,CACvB,CAAC,IACC,EAAE,IAAI,KAAK,WAAW,cAAc,CAAA,GAAA,+JAAA,CAAA,qBAAkB,AAAlB,EAAmB,CAAA,GAAA,yJAAA,CAAA,gBAAa,AAAb,EAAc;IAEzE,IAAI,CAAC,SACH,MAAM,IAAI,yIAAA,CAAA,iCAA8B,CAAC,WAAW;QAClD,UAAU;;IAEd,OAAO;QACL;QACA,MACE,YAAY,WAAW,QAAQ,MAAM,IAAI,QAAQ,MAAM,CAAC,MAAM,GAAG,IAC7D,CAAA,GAAA,+JAAA,CAAA,sBAAmB,AAAnB,EAAoB,QAAQ,MAAM,EAAE,CAAA,GAAA,kJAAA,CAAA,QAAK,AAAL,EAAM,MAAM,MAChD;QACN,WAAY,QAA6B,IAAI;;AAEjD"}},
    {"offset": {"line": 2651, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2656, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/stringify.ts"],"sourcesContent":["import type { ErrorType } from '../errors/utils.js'\n\nexport type StringifyErrorType = ErrorType\n\nexport const stringify: typeof JSON.stringify = (value, replacer, space) =>\n  JSON.stringify(\n    value,\n    (key, value_) => {\n      const value = typeof value_ === 'bigint' ? value_.toString() : value_\n      return typeof replacer === 'function' ? replacer(key, value) : value\n    },\n    space,\n  )\n"],"names":[],"mappings":";;;AAIO,MAAM,YAAmC,CAAC,OAAO,UAAU,QAChE,KAAK,SAAS,CACZ,OACA,CAAC,KAAK;QACJ,MAAM,QAAQ,OAAO,WAAW,WAAW,OAAO,QAAQ,KAAK;QAC/D,OAAO,OAAO,aAAa,aAAa,SAAS,KAAK,SAAS;IACjE,GACA"}},
    {"offset": {"line": 2663, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2668, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/abi/formatAbiItemWithArgs.ts"],"sourcesContent":["import type { AbiParameter } from 'abitype'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { AbiItem } from '../../types/contract.js'\nimport { stringify } from '../stringify.js'\n\nexport type FormatAbiItemWithArgsErrorType = ErrorType\n\nexport function formatAbiItemWithArgs({\n  abiItem,\n  args,\n  includeFunctionName = true,\n  includeName = false,\n}: {\n  abiItem: AbiItem\n  args: readonly unknown[]\n  includeFunctionName?: boolean | undefined\n  includeName?: boolean | undefined\n}) {\n  if (!('name' in abiItem)) return\n  if (!('inputs' in abiItem)) return\n  if (!abiItem.inputs) return\n  return `${includeFunctionName ? abiItem.name : ''}(${abiItem.inputs\n    .map(\n      (input: AbiParameter, i: number) =>\n        `${includeName && input.name ? `${input.name}: ` : ''}${\n          typeof args[i] === 'object' ? stringify(args[i]) : args[i]\n        }`,\n    )\n    .join(', ')})`\n}\n"],"names":[],"mappings":";;;;;;AAQM,SAAU,sBAAsB,EACpC,OAAO,EACP,IAAI,EACJ,sBAAsB,IAAI,EAC1B,cAAc,KAAK,EAMpB;IACC,IAAI,CAAC,CAAC,UAAU,OAAO,GAAG;IAC1B,IAAI,CAAC,CAAC,YAAY,OAAO,GAAG;IAC5B,IAAI,CAAC,QAAQ,MAAM,EAAE;IACrB,OAAO,CAAA,EAAG,sBAAsB,QAAQ,IAAI,GAAG,GAAE,CAAA,EAAI,QAAQ,MAAM,CAChE,GAAG,CACF,CAAC,OAAqB,IACpB,CAAA,EAAG,eAAe,MAAM,IAAI,GAAG,CAAA,EAAG,MAAM,IAAI,CAAA,EAAA,CAAI,GAAG,GAAE,EACnD,OAAO,IAAI,CAAC,EAAE,KAAK,WAAW,CAAA,GAAA,8IAAA,CAAA,YAAS,AAAT,EAAU,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,EAC1D,CAAA,CAAE,EAEL,IAAI,CAAC,MAAK,CAAA,CAAG;AAClB"}},
    {"offset": {"line": 2680, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2685, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/constants/unit.ts"],"sourcesContent":["export const etherUnits = {\n  gwei: 9,\n  wei: 18,\n}\nexport const gweiUnits = {\n  ether: -9,\n  wei: 9,\n}\nexport const weiUnits = {\n  ether: -18,\n  gwei: -9,\n}\n"],"names":[],"mappings":";;;;;AAAO,MAAM,aAAa;IACxB,MAAM;IACN,KAAK;;AAEA,MAAM,YAAY;IACvB,OAAO,CAAC;IACR,KAAK;;AAEA,MAAM,WAAW;IACtB,OAAO,CAAC;IACR,MAAM,CAAC"}},
    {"offset": {"line": 2702, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2707, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/unit/formatUnits.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\n\nexport type FormatUnitsErrorType = ErrorType\n\n/**\n *  Divides a number by a given exponent of base 10 (10exponent), and formats it into a string representation of the number..\n *\n * - Docs: https://viem.sh/docs/utilities/formatUnits\n *\n * @example\n * import { formatUnits } from 'viem'\n *\n * formatUnits(420000000000n, 9)\n * // '420'\n */\nexport function formatUnits(value: bigint, decimals: number) {\n  let display = value.toString()\n\n  const negative = display.startsWith('-')\n  if (negative) display = display.slice(1)\n\n  display = display.padStart(decimals, '0')\n\n  let [integer, fraction] = [\n    display.slice(0, display.length - decimals),\n    display.slice(display.length - decimals),\n  ]\n  fraction = fraction.replace(/(0+)$/, '')\n  return `${negative ? '-' : ''}${integer || '0'}${\n    fraction ? `.${fraction}` : ''\n  }`\n}\n"],"names":[],"mappings":"AAIA;;;;;;;;;;;;;AAWM,SAAU,YAAY,KAAa,EAAE,QAAgB;IACzD,IAAI,UAAU,MAAM,QAAQ;IAE5B,MAAM,WAAW,QAAQ,UAAU,CAAC;IACpC,IAAI,UAAU,UAAU,QAAQ,KAAK,CAAC;IAEtC,UAAU,QAAQ,QAAQ,CAAC,UAAU;IAErC,IAAI,CAAC,SAAS,SAAS,GAAG;QACxB,QAAQ,KAAK,CAAC,GAAG,QAAQ,MAAM,GAAG;QAClC,QAAQ,KAAK,CAAC,QAAQ,MAAM,GAAG;KAChC;IACD,WAAW,SAAS,OAAO,CAAC,SAAS;IACrC,OAAO,CAAA,EAAG,WAAW,MAAM,GAAE,EAAG,WAAW,IAAG,EAC5C,WAAW,CAAA,CAAA,EAAI,SAAQ,CAAE,GAAG,GAC9B,CAAE;AACJ"}},
    {"offset": {"line": 2732, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2737, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/unit/formatEther.ts"],"sourcesContent":["import { etherUnits } from '../../constants/unit.js'\n\nimport { type FormatUnitsErrorType, formatUnits } from './formatUnits.js'\n\nexport type FormatEtherErrorType = FormatUnitsErrorType\n\n/**\n * Converts numerical wei to a string representation of ether.\n *\n * - Docs: https://viem.sh/docs/utilities/formatEther\n *\n * @example\n * import { formatEther } from 'viem'\n *\n * formatEther(1000000000000000000n)\n * // '1'\n */\nexport function formatEther(wei: bigint, unit: 'wei' | 'gwei' = 'wei') {\n  return formatUnits(wei, etherUnits[unit])\n}\n"],"names":[],"mappings":";;;;;;;;AAiBM,SAAU,YAAY,GAAW,EAAE,OAAuB,KAAK;IACnE,OAAO,CAAA,GAAA,wJAAA,CAAA,cAAW,AAAX,EAAY,KAAK,6IAAA,CAAA,aAAU,CAAC,KAAK;AAC1C"}},
    {"offset": {"line": 2748, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2753, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/unit/formatGwei.ts"],"sourcesContent":["import { gweiUnits } from '../../constants/unit.js'\n\nimport { type FormatUnitsErrorType, formatUnits } from './formatUnits.js'\n\nexport type FormatGweiErrorType = FormatUnitsErrorType\n\n/**\n * Converts numerical wei to a string representation of gwei.\n *\n * - Docs: https://viem.sh/docs/utilities/formatGwei\n *\n * @example\n * import { formatGwei } from 'viem'\n *\n * formatGwei(1000000000n)\n * // '1'\n */\nexport function formatGwei(wei: bigint, unit: 'wei' = 'wei') {\n  return formatUnits(wei, gweiUnits[unit])\n}\n"],"names":[],"mappings":";;;;;;;;AAiBM,SAAU,WAAW,GAAW,EAAE,OAAc,KAAK;IACzD,OAAO,CAAA,GAAA,wJAAA,CAAA,cAAW,AAAX,EAAY,KAAK,6IAAA,CAAA,YAAS,CAAC,KAAK;AACzC"}},
    {"offset": {"line": 2764, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2769, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/errors/stateOverride.ts"],"sourcesContent":["import type { StateMapping, StateOverride } from '../types/stateOverride.js'\nimport { BaseError } from './base.js'\n\nexport type AccountStateConflictErrorType = AccountStateConflictError & {\n  name: 'AccountStateConflictError'\n}\n\nexport class AccountStateConflictError extends BaseError {\n  constructor({ address }: { address: string }) {\n    super(`State for account \"${address}\" is set multiple times.`, {\n      name: 'AccountStateConflictError',\n    })\n  }\n}\n\nexport type StateAssignmentConflictErrorType = StateAssignmentConflictError & {\n  name: 'StateAssignmentConflictError'\n}\n\nexport class StateAssignmentConflictError extends BaseError {\n  constructor() {\n    super('state and stateDiff are set on the same account.', {\n      name: 'StateAssignmentConflictError',\n    })\n  }\n}\n\n/** @internal */\nexport function prettyStateMapping(stateMapping: StateMapping) {\n  return stateMapping.reduce((pretty, { slot, value }) => {\n    return `${pretty}        ${slot}: ${value}\\n`\n  }, '')\n}\n\nexport function prettyStateOverride(stateOverride: StateOverride) {\n  return stateOverride\n    .reduce((pretty, { address, ...state }) => {\n      let val = `${pretty}    ${address}:\\n`\n      if (state.nonce) val += `      nonce: ${state.nonce}\\n`\n      if (state.balance) val += `      balance: ${state.balance}\\n`\n      if (state.code) val += `      code: ${state.code}\\n`\n      if (state.state) {\n        val += '      state:\\n'\n        val += prettyStateMapping(state.state)\n      }\n      if (state.stateDiff) {\n        val += '      stateDiff:\\n'\n        val += prettyStateMapping(state.stateDiff)\n      }\n      return val\n    }, '  State Override:\\n')\n    .slice(0, -1)\n}\n"],"names":[],"mappings":";;;;;;;;;AAOM,MAAO,kCAAkC,0IAAA,CAAA,YAAS;IACtD,YAAY,EAAE,OAAO,EAAuB,CAAA;QAC1C,KAAK,CAAC,CAAA,mBAAA,EAAsB,QAAO,wBAAA,CAA0B,EAAE;YAC7D,MAAM;;IAEV;;AAOI,MAAO,qCAAqC,0IAAA,CAAA,YAAS;IACzD,aAAA;QACE,KAAK,CAAC,oDAAoD;YACxD,MAAM;;IAEV;;AAII,SAAU,mBAAmB,YAA0B;IAC3D,OAAO,aAAa,MAAM,CAAC,CAAC,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE;QACjD,OAAO,CAAA,EAAG,OAAM,QAAA,EAAW,KAAI,EAAA,EAAK,MAAK,EAAA,CAAI;IAC/C,GAAG;AACL;AAEM,SAAU,oBAAoB,aAA4B;IAC9D,OAAO,cACJ,MAAM,CAAC,CAAC,QAAQ,EAAE,OAAO,EAAE,GAAG,OAAO;QACpC,IAAI,MAAM,CAAA,EAAG,OAAM,IAAA,EAAO,QAAO,GAAA,CAAK;QACtC,IAAI,MAAM,KAAK,EAAE,OAAO,CAAA,aAAA,EAAgB,MAAM,KAAK,CAAA,EAAA,CAAI;QACvD,IAAI,MAAM,OAAO,EAAE,OAAO,CAAA,eAAA,EAAkB,MAAM,OAAO,CAAA,EAAA,CAAI;QAC7D,IAAI,MAAM,IAAI,EAAE,OAAO,CAAA,YAAA,EAAe,MAAM,IAAI,CAAA,EAAA,CAAI;QACpD,IAAI,MAAM,KAAK,EAAE;YACf,OAAO;YACP,OAAO,mBAAmB,MAAM,KAAK;QACvC;QACA,IAAI,MAAM,SAAS,EAAE;YACnB,OAAO;YACP,OAAO,mBAAmB,MAAM,SAAS;QAC3C;QACA,OAAO;IACT,GAAG,uBACF,KAAK,CAAC,GAAG,CAAC;AACf"}},
    {"offset": {"line": 2814, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2819, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/errors/transaction.ts"],"sourcesContent":["import type { Account } from '../accounts/types.js'\nimport type { SendTransactionParameters } from '../actions/wallet/sendTransaction.js'\nimport type { BlockTag } from '../types/block.js'\nimport type { Chain } from '../types/chain.js'\nimport type { Hash, Hex } from '../types/misc.js'\nimport type { TransactionType } from '../types/transaction.js'\nimport { formatEther } from '../utils/unit/formatEther.js'\nimport { formatGwei } from '../utils/unit/formatGwei.js'\n\nimport { BaseError } from './base.js'\n\nexport function prettyPrint(\n  args: Record<string, bigint | number | string | undefined | false | unknown>,\n) {\n  const entries = Object.entries(args)\n    .map(([key, value]) => {\n      if (value === undefined || value === false) return null\n      return [key, value]\n    })\n    .filter(Boolean) as [string, string][]\n  const maxLength = entries.reduce((acc, [key]) => Math.max(acc, key.length), 0)\n  return entries\n    .map(([key, value]) => `  ${`${key}:`.padEnd(maxLength + 1)}  ${value}`)\n    .join('\\n')\n}\n\nexport type FeeConflictErrorType = FeeConflictError & {\n  name: 'FeeConflictError'\n}\nexport class FeeConflictError extends BaseError {\n  constructor() {\n    super(\n      [\n        'Cannot specify both a `gasPrice` and a `maxFeePerGas`/`maxPriorityFeePerGas`.',\n        'Use `maxFeePerGas`/`maxPriorityFeePerGas` for EIP-1559 compatible networks, and `gasPrice` for others.',\n      ].join('\\n'),\n      { name: 'FeeConflictError' },\n    )\n  }\n}\n\nexport type InvalidLegacyVErrorType = InvalidLegacyVError & {\n  name: 'InvalidLegacyVError'\n}\nexport class InvalidLegacyVError extends BaseError {\n  constructor({ v }: { v: bigint }) {\n    super(`Invalid \\`v\\` value \"${v}\". Expected 27 or 28.`, {\n      name: 'InvalidLegacyVError',\n    })\n  }\n}\n\nexport type InvalidSerializableTransactionErrorType =\n  InvalidSerializableTransactionError & {\n    name: 'InvalidSerializableTransactionError'\n  }\nexport class InvalidSerializableTransactionError extends BaseError {\n  constructor({ transaction }: { transaction: Record<string, unknown> }) {\n    super('Cannot infer a transaction type from provided transaction.', {\n      metaMessages: [\n        'Provided Transaction:',\n        '{',\n        prettyPrint(transaction),\n        '}',\n        '',\n        'To infer the type, either provide:',\n        '- a `type` to the Transaction, or',\n        '- an EIP-1559 Transaction with `maxFeePerGas`, or',\n        '- an EIP-2930 Transaction with `gasPrice` & `accessList`, or',\n        '- an EIP-4844 Transaction with `blobs`, `blobVersionedHashes`, `sidecars`, or',\n        '- an EIP-7702 Transaction with `authorizationList`, or',\n        '- a Legacy Transaction with `gasPrice`',\n      ],\n      name: 'InvalidSerializableTransactionError',\n    })\n  }\n}\n\nexport type InvalidSerializedTransactionTypeErrorType =\n  InvalidSerializedTransactionTypeError & {\n    name: 'InvalidSerializedTransactionTypeError'\n  }\nexport class InvalidSerializedTransactionTypeError extends BaseError {\n  serializedType: Hex\n\n  constructor({ serializedType }: { serializedType: Hex }) {\n    super(`Serialized transaction type \"${serializedType}\" is invalid.`, {\n      name: 'InvalidSerializedTransactionType',\n    })\n\n    this.serializedType = serializedType\n  }\n}\n\nexport type InvalidSerializedTransactionErrorType =\n  InvalidSerializedTransactionError & {\n    name: 'InvalidSerializedTransactionError'\n  }\nexport class InvalidSerializedTransactionError extends BaseError {\n  serializedTransaction: Hex\n  type: TransactionType\n\n  constructor({\n    attributes,\n    serializedTransaction,\n    type,\n  }: {\n    attributes: Record<string, unknown>\n    serializedTransaction: Hex\n    type: TransactionType\n  }) {\n    const missing = Object.entries(attributes)\n      .map(([key, value]) => (typeof value === 'undefined' ? key : undefined))\n      .filter(Boolean)\n    super(`Invalid serialized transaction of type \"${type}\" was provided.`, {\n      metaMessages: [\n        `Serialized Transaction: \"${serializedTransaction}\"`,\n        missing.length > 0 ? `Missing Attributes: ${missing.join(', ')}` : '',\n      ].filter(Boolean),\n      name: 'InvalidSerializedTransactionError',\n    })\n\n    this.serializedTransaction = serializedTransaction\n    this.type = type\n  }\n}\n\nexport type InvalidStorageKeySizeErrorType = InvalidStorageKeySizeError & {\n  name: 'InvalidStorageKeySizeError'\n}\nexport class InvalidStorageKeySizeError extends BaseError {\n  constructor({ storageKey }: { storageKey: Hex }) {\n    super(\n      `Size for storage key \"${storageKey}\" is invalid. Expected 32 bytes. Got ${Math.floor(\n        (storageKey.length - 2) / 2,\n      )} bytes.`,\n      { name: 'InvalidStorageKeySizeError' },\n    )\n  }\n}\n\nexport type TransactionExecutionErrorType = TransactionExecutionError & {\n  name: 'TransactionExecutionError'\n}\nexport class TransactionExecutionError extends BaseError {\n  override cause: BaseError\n\n  constructor(\n    cause: BaseError,\n    {\n      account,\n      docsPath,\n      chain,\n      data,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      to,\n      value,\n    }: Omit<SendTransactionParameters, 'account' | 'chain'> & {\n      account: Account | null\n      chain?: Chain | undefined\n      docsPath?: string | undefined\n    },\n  ) {\n    const prettyArgs = prettyPrint({\n      chain: chain && `${chain?.name} (id: ${chain?.id})`,\n      from: account?.address,\n      to,\n      value:\n        typeof value !== 'undefined' &&\n        `${formatEther(value)} ${chain?.nativeCurrency?.symbol || 'ETH'}`,\n      data,\n      gas,\n      gasPrice:\n        typeof gasPrice !== 'undefined' && `${formatGwei(gasPrice)} gwei`,\n      maxFeePerGas:\n        typeof maxFeePerGas !== 'undefined' &&\n        `${formatGwei(maxFeePerGas)} gwei`,\n      maxPriorityFeePerGas:\n        typeof maxPriorityFeePerGas !== 'undefined' &&\n        `${formatGwei(maxPriorityFeePerGas)} gwei`,\n      nonce,\n    })\n\n    super(cause.shortMessage, {\n      cause,\n      docsPath,\n      metaMessages: [\n        ...(cause.metaMessages ? [...cause.metaMessages, ' '] : []),\n        'Request Arguments:',\n        prettyArgs,\n      ].filter(Boolean) as string[],\n      name: 'TransactionExecutionError',\n    })\n    this.cause = cause\n  }\n}\n\nexport type TransactionNotFoundErrorType = TransactionNotFoundError & {\n  name: 'TransactionNotFoundError'\n}\nexport class TransactionNotFoundError extends BaseError {\n  constructor({\n    blockHash,\n    blockNumber,\n    blockTag,\n    hash,\n    index,\n  }: {\n    blockHash?: Hash | undefined\n    blockNumber?: bigint | undefined\n    blockTag?: BlockTag | undefined\n    hash?: Hash | undefined\n    index?: number | undefined\n  }) {\n    let identifier = 'Transaction'\n    if (blockTag && index !== undefined)\n      identifier = `Transaction at block time \"${blockTag}\" at index \"${index}\"`\n    if (blockHash && index !== undefined)\n      identifier = `Transaction at block hash \"${blockHash}\" at index \"${index}\"`\n    if (blockNumber && index !== undefined)\n      identifier = `Transaction at block number \"${blockNumber}\" at index \"${index}\"`\n    if (hash) identifier = `Transaction with hash \"${hash}\"`\n    super(`${identifier} could not be found.`, {\n      name: 'TransactionNotFoundError',\n    })\n  }\n}\n\nexport type TransactionReceiptNotFoundErrorType =\n  TransactionReceiptNotFoundError & {\n    name: 'TransactionReceiptNotFoundError'\n  }\nexport class TransactionReceiptNotFoundError extends BaseError {\n  constructor({ hash }: { hash: Hash }) {\n    super(\n      `Transaction receipt with hash \"${hash}\" could not be found. The Transaction may not be processed on a block yet.`,\n      {\n        name: 'TransactionReceiptNotFoundError',\n      },\n    )\n  }\n}\n\nexport type WaitForTransactionReceiptTimeoutErrorType =\n  WaitForTransactionReceiptTimeoutError & {\n    name: 'WaitForTransactionReceiptTimeoutError'\n  }\nexport class WaitForTransactionReceiptTimeoutError extends BaseError {\n  constructor({ hash }: { hash: Hash }) {\n    super(\n      `Timed out while waiting for transaction with hash \"${hash}\" to be confirmed.`,\n      { name: 'WaitForTransactionReceiptTimeoutError' },\n    )\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAWM,SAAU,YACd,IAA4E;IAE5E,MAAM,UAAU,OAAO,OAAO,CAAC,MAC5B,GAAG,CAAC,CAAC,CAAC,KAAK,MAAM;QAChB,IAAI,UAAU,aAAa,UAAU,OAAO,OAAO;QACnD,OAAO;YAAC;YAAK;SAAM;IACrB,GACC,MAAM,CAAC;IACV,MAAM,YAAY,QAAQ,MAAM,CAAC,CAAC,KAAK,CAAC,IAAI,GAAK,KAAK,GAAG,CAAC,KAAK,IAAI,MAAM,GAAG;IAC5E,OAAO,QACJ,GAAG,CAAC,CAAC,CAAC,KAAK,MAAM,GAAK,CAAA,EAAA,EAAK,CAAA,EAAG,IAAG,CAAA,CAAG,CAAC,MAAM,CAAC,YAAY,GAAE,EAAA,EAAK,MAAK,CAAE,EACtE,IAAI,CAAC;AACV;AAKM,MAAO,yBAAyB,0IAAA,CAAA,YAAS;IAC7C,aAAA;QACE,KAAK,CACH;YACE;YACA;SACD,CAAC,IAAI,CAAC,OACP;YAAE,MAAM;QAAkB;IAE9B;;AAMI,MAAO,4BAA4B,0IAAA,CAAA,YAAS;IAChD,YAAY,EAAE,CAAC,EAAiB,CAAA;QAC9B,KAAK,CAAC,CAAA,qBAAA,EAAwB,EAAC,qBAAA,CAAuB,EAAE;YACtD,MAAM;;IAEV;;AAOI,MAAO,4CAA4C,0IAAA,CAAA,YAAS;IAChE,YAAY,EAAE,WAAW,EAA4C,CAAA;QACnE,KAAK,CAAC,8DAA8D;YAClE,cAAc;gBACZ;gBACA;gBACA,YAAY;gBACZ;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;aACD;YACD,MAAM;;IAEV;;AAOI,MAAO,8CAA8C,0IAAA,CAAA,YAAS;IAGlE,YAAY,EAAE,cAAc,EAA2B,CAAA;QACrD,KAAK,CAAC,CAAA,6BAAA,EAAgC,eAAc,aAAA,CAAe,EAAE;YACnE,MAAM;;QAJV,OAAA,cAAA,CAAA,IAAA,EAAA,kBAAA;;;;;;QAOE,IAAI,CAAC,cAAc,GAAG;IACxB;;AAOI,MAAO,0CAA0C,0IAAA,CAAA,YAAS;IAI9D,YAAY,EACV,UAAU,EACV,qBAAqB,EACrB,IAAI,EAKL,CAAA;QACC,MAAM,UAAU,OAAO,OAAO,CAAC,YAC5B,GAAG,CAAC,CAAC,CAAC,KAAK,MAAM,GAAM,OAAO,UAAU,cAAc,MAAM,WAC5D,MAAM,CAAC;QACV,KAAK,CAAC,CAAA,wCAAA,EAA2C,KAAI,eAAA,CAAiB,EAAE;YACtE,cAAc;gBACZ,CAAA,yBAAA,EAA4B,sBAAqB,CAAA,CAAG;gBACpD,QAAQ,MAAM,GAAG,IAAI,CAAA,oBAAA,EAAuB,QAAQ,IAAI,CAAC,MAAK,CAAE,GAAG;aACpE,CAAC,MAAM,CAAC;YACT,MAAM;;QApBV,OAAA,cAAA,CAAA,IAAA,EAAA,yBAAA;;;;;;QACA,OAAA,cAAA,CAAA,IAAA,EAAA,QAAA;;;;;;QAsBE,IAAI,CAAC,qBAAqB,GAAG;QAC7B,IAAI,CAAC,IAAI,GAAG;IACd;;AAMI,MAAO,mCAAmC,0IAAA,CAAA,YAAS;IACvD,YAAY,EAAE,UAAU,EAAuB,CAAA;QAC7C,KAAK,CACH,CAAA,sBAAA,EAAyB,WAAU,qCAAA,EAAwC,KAAK,KAAK,CACnF,CAAC,WAAW,MAAM,GAAG,CAAC,IAAI,GAC3B,OAAA,CAAS,EACV;YAAE,MAAM;QAA4B;IAExC;;AAMI,MAAO,kCAAkC,0IAAA,CAAA,YAAS;IAGtD,YACE,KAAgB,EAChB,EACE,OAAO,EACP,QAAQ,EACR,KAAK,EACL,IAAI,EACJ,GAAG,EACH,QAAQ,EACR,YAAY,EACZ,oBAAoB,EACpB,KAAK,EACL,EAAE,EACF,KAAK,EAKN,CAAA;QAED,MAAM,aAAa,YAAY;YAC7B,OAAO,SAAS,CAAA,EAAG,OAAO,KAAI,MAAA,EAAS,OAAO,GAAE,CAAA,CAAG;YACnD,MAAM,SAAS;YACf;YACA,OACE,OAAO,UAAU,eACjB,CAAA,EAAG,CAAA,GAAA,wJAAA,CAAA,cAAW,AAAX,EAAY,OAAM,CAAA,EAAI,OAAO,gBAAgB,UAAU,MAAK,CAAE;YACnE;YACA;YACA,UACE,OAAO,aAAa,eAAe,CAAA,EAAG,CAAA,GAAA,uJAAA,CAAA,aAAU,AAAV,EAAW,UAAS,KAAA,CAAO;YACnE,cACE,OAAO,iBAAiB,eACxB,CAAA,EAAG,CAAA,GAAA,uJAAA,CAAA,aAAU,AAAV,EAAW,cAAa,KAAA,CAAO;YACpC,sBACE,OAAO,yBAAyB,eAChC,CAAA,EAAG,CAAA,GAAA,uJAAA,CAAA,aAAU,AAAV,EAAW,sBAAqB,KAAA,CAAO;YAC5C;;QAGF,KAAK,CAAC,MAAM,YAAY,EAAE;YACxB;YACA;YACA,cAAc;mBACR,MAAM,YAAY,GAAG;uBAAI,MAAM,YAAY;oBAAE;iBAAI,GAAG,EAAE;gBAC1D;gBACA;aACD,CAAC,MAAM,CAAC;YACT,MAAM;;QAlDD,OAAA,cAAA,CAAA,IAAA,EAAA,SAAA;;;;;;QAoDP,IAAI,CAAC,KAAK,GAAG;IACf;;AAMI,MAAO,iCAAiC,0IAAA,CAAA,YAAS;IACrD,YAAY,EACV,SAAS,EACT,WAAW,EACX,QAAQ,EACR,IAAI,EACJ,KAAK,EAON,CAAA;QACC,IAAI,aAAa;QACjB,IAAI,YAAY,UAAU,WACxB,aAAa,CAAA,2BAAA,EAA8B,SAAQ,YAAA,EAAe,MAAK,CAAA,CAAG;QAC5E,IAAI,aAAa,UAAU,WACzB,aAAa,CAAA,2BAAA,EAA8B,UAAS,YAAA,EAAe,MAAK,CAAA,CAAG;QAC7E,IAAI,eAAe,UAAU,WAC3B,aAAa,CAAA,6BAAA,EAAgC,YAAW,YAAA,EAAe,MAAK,CAAA,CAAG;QACjF,IAAI,MAAM,aAAa,CAAA,uBAAA,EAA0B,KAAI,CAAA,CAAG;QACxD,KAAK,CAAC,CAAA,EAAG,WAAU,oBAAA,CAAsB,EAAE;YACzC,MAAM;;IAEV;;AAOI,MAAO,wCAAwC,0IAAA,CAAA,YAAS;IAC5D,YAAY,EAAE,IAAI,EAAkB,CAAA;QAClC,KAAK,CACH,CAAA,+BAAA,EAAkC,KAAI,0EAAA,CAA4E,EAClH;YACE,MAAM;;IAGZ;;AAOI,MAAO,8CAA8C,0IAAA,CAAA,YAAS;IAClE,YAAY,EAAE,IAAI,EAAkB,CAAA;QAClC,KAAK,CACH,CAAA,mDAAA,EAAsD,KAAI,kBAAA,CAAoB,EAC9E;YAAE,MAAM;QAAuC;IAEnD"}},
    {"offset": {"line": 2997, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3002, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/errors/utils.ts"],"sourcesContent":["import type { Address } from 'abitype'\n\nexport type ErrorType<name extends string = 'Error'> = Error & { name: name }\n\nexport const getContractAddress = (address: Address) => address\nexport const getUrl = (url: string) => url\n"],"names":[],"mappings":";;;;AAIO,MAAM,qBAAqB,CAAC,UAAqB;AACjD,MAAM,SAAS,CAAC,MAAgB"}},
    {"offset": {"line": 3008, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3013, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/errors/contract.ts"],"sourcesContent":["import type { Abi, Address } from 'abitype'\n\nimport { parseAccount } from '../accounts/utils/parseAccount.js'\nimport type { CallParameters } from '../actions/public/call.js'\nimport { panicReasons } from '../constants/solidity.js'\nimport type { Chain } from '../types/chain.js'\nimport type { Hex } from '../types/misc.js'\nimport {\n  type DecodeErrorResultReturnType,\n  decodeErrorResult,\n} from '../utils/abi/decodeErrorResult.js'\nimport { formatAbiItem } from '../utils/abi/formatAbiItem.js'\nimport { formatAbiItemWithArgs } from '../utils/abi/formatAbiItemWithArgs.js'\nimport { getAbiItem } from '../utils/abi/getAbiItem.js'\nimport { formatEther } from '../utils/unit/formatEther.js'\nimport { formatGwei } from '../utils/unit/formatGwei.js'\n\nimport { AbiErrorSignatureNotFoundError } from './abi.js'\nimport { BaseError } from './base.js'\nimport { prettyStateOverride } from './stateOverride.js'\nimport { prettyPrint } from './transaction.js'\nimport { getContractAddress } from './utils.js'\n\nexport type CallExecutionErrorType = CallExecutionError & {\n  name: 'CallExecutionError'\n}\nexport class CallExecutionError extends BaseError {\n  override cause: BaseError\n\n  constructor(\n    cause: BaseError,\n    {\n      account: account_,\n      docsPath,\n      chain,\n      data,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      to,\n      value,\n      stateOverride,\n    }: CallParameters & {\n      chain?: Chain | undefined\n      docsPath?: string | undefined\n    },\n  ) {\n    const account = account_ ? parseAccount(account_) : undefined\n    let prettyArgs = prettyPrint({\n      from: account?.address,\n      to,\n      value:\n        typeof value !== 'undefined' &&\n        `${formatEther(value)} ${chain?.nativeCurrency?.symbol || 'ETH'}`,\n      data,\n      gas,\n      gasPrice:\n        typeof gasPrice !== 'undefined' && `${formatGwei(gasPrice)} gwei`,\n      maxFeePerGas:\n        typeof maxFeePerGas !== 'undefined' &&\n        `${formatGwei(maxFeePerGas)} gwei`,\n      maxPriorityFeePerGas:\n        typeof maxPriorityFeePerGas !== 'undefined' &&\n        `${formatGwei(maxPriorityFeePerGas)} gwei`,\n      nonce,\n    })\n\n    if (stateOverride) {\n      prettyArgs += `\\n${prettyStateOverride(stateOverride)}`\n    }\n\n    super(cause.shortMessage, {\n      cause,\n      docsPath,\n      metaMessages: [\n        ...(cause.metaMessages ? [...cause.metaMessages, ' '] : []),\n        'Raw Call Arguments:',\n        prettyArgs,\n      ].filter(Boolean) as string[],\n      name: 'CallExecutionError',\n    })\n    this.cause = cause\n  }\n}\n\nexport type ContractFunctionExecutionErrorType =\n  ContractFunctionExecutionError & {\n    name: 'ContractFunctionExecutionError'\n  }\nexport class ContractFunctionExecutionError extends BaseError {\n  abi: Abi\n  args?: unknown[] | undefined\n  override cause: BaseError\n  contractAddress?: Address | undefined\n  formattedArgs?: string | undefined\n  functionName: string\n  sender?: Address | undefined\n\n  constructor(\n    cause: BaseError,\n    {\n      abi,\n      args,\n      contractAddress,\n      docsPath,\n      functionName,\n      sender,\n    }: {\n      abi: Abi\n      args?: any | undefined\n      contractAddress?: Address | undefined\n      docsPath?: string | undefined\n      functionName: string\n      sender?: Address | undefined\n    },\n  ) {\n    const abiItem = getAbiItem({ abi, args, name: functionName })\n    const formattedArgs = abiItem\n      ? formatAbiItemWithArgs({\n          abiItem,\n          args,\n          includeFunctionName: false,\n          includeName: false,\n        })\n      : undefined\n    const functionWithParams = abiItem\n      ? formatAbiItem(abiItem, { includeName: true })\n      : undefined\n\n    const prettyArgs = prettyPrint({\n      address: contractAddress && getContractAddress(contractAddress),\n      function: functionWithParams,\n      args:\n        formattedArgs &&\n        formattedArgs !== '()' &&\n        `${[...Array(functionName?.length ?? 0).keys()]\n          .map(() => ' ')\n          .join('')}${formattedArgs}`,\n      sender,\n    })\n\n    super(\n      cause.shortMessage ||\n        `An unknown error occurred while executing the contract function \"${functionName}\".`,\n      {\n        cause,\n        docsPath,\n        metaMessages: [\n          ...(cause.metaMessages ? [...cause.metaMessages, ' '] : []),\n          prettyArgs && 'Contract Call:',\n          prettyArgs,\n        ].filter(Boolean) as string[],\n        name: 'ContractFunctionExecutionError',\n      },\n    )\n    this.abi = abi\n    this.args = args\n    this.cause = cause\n    this.contractAddress = contractAddress\n    this.functionName = functionName\n    this.sender = sender\n  }\n}\n\nexport type ContractFunctionRevertedErrorType =\n  ContractFunctionRevertedError & {\n    name: 'ContractFunctionRevertedError'\n  }\nexport class ContractFunctionRevertedError extends BaseError {\n  data?: DecodeErrorResultReturnType | undefined\n  reason?: string | undefined\n  signature?: Hex | undefined\n\n  constructor({\n    abi,\n    data,\n    functionName,\n    message,\n  }: {\n    abi: Abi\n    data?: Hex | undefined\n    functionName: string\n    message?: string | undefined\n  }) {\n    let cause: Error | undefined\n    let decodedData: DecodeErrorResultReturnType | undefined = undefined\n    let metaMessages: string[] | undefined\n    let reason: string | undefined\n    if (data && data !== '0x') {\n      try {\n        decodedData = decodeErrorResult({ abi, data })\n        const { abiItem, errorName, args: errorArgs } = decodedData\n        if (errorName === 'Error') {\n          reason = (errorArgs as [string])[0]\n        } else if (errorName === 'Panic') {\n          const [firstArg] = errorArgs as [number]\n          reason = panicReasons[firstArg as keyof typeof panicReasons]\n        } else {\n          const errorWithParams = abiItem\n            ? formatAbiItem(abiItem, { includeName: true })\n            : undefined\n          const formattedArgs =\n            abiItem && errorArgs\n              ? formatAbiItemWithArgs({\n                  abiItem,\n                  args: errorArgs,\n                  includeFunctionName: false,\n                  includeName: false,\n                })\n              : undefined\n\n          metaMessages = [\n            errorWithParams ? `Error: ${errorWithParams}` : '',\n            formattedArgs && formattedArgs !== '()'\n              ? `       ${[...Array(errorName?.length ?? 0).keys()]\n                  .map(() => ' ')\n                  .join('')}${formattedArgs}`\n              : '',\n          ]\n        }\n      } catch (err) {\n        cause = err as Error\n      }\n    } else if (message) reason = message\n\n    let signature: Hex | undefined\n    if (cause instanceof AbiErrorSignatureNotFoundError) {\n      signature = cause.signature\n      metaMessages = [\n        `Unable to decode signature \"${signature}\" as it was not found on the provided ABI.`,\n        'Make sure you are using the correct ABI and that the error exists on it.',\n        `You can look up the decoded signature here: https://openchain.xyz/signatures?query=${signature}.`,\n      ]\n    }\n\n    super(\n      (reason && reason !== 'execution reverted') || signature\n        ? [\n            `The contract function \"${functionName}\" reverted with the following ${\n              signature ? 'signature' : 'reason'\n            }:`,\n            reason || signature,\n          ].join('\\n')\n        : `The contract function \"${functionName}\" reverted.`,\n      {\n        cause,\n        metaMessages,\n        name: 'ContractFunctionRevertedError',\n      },\n    )\n\n    this.data = decodedData\n    this.reason = reason\n    this.signature = signature\n  }\n}\n\nexport type ContractFunctionZeroDataErrorType =\n  ContractFunctionZeroDataError & {\n    name: 'ContractFunctionZeroDataError'\n  }\nexport class ContractFunctionZeroDataError extends BaseError {\n  constructor({ functionName }: { functionName: string }) {\n    super(`The contract function \"${functionName}\" returned no data (\"0x\").`, {\n      metaMessages: [\n        'This could be due to any of the following:',\n        `  - The contract does not have the function \"${functionName}\",`,\n        '  - The parameters passed to the contract function may be invalid, or',\n        '  - The address is not a contract.',\n      ],\n      name: 'ContractFunctionZeroDataError',\n    })\n  }\n}\n\nexport type CounterfactualDeploymentFailedErrorType =\n  CounterfactualDeploymentFailedError & {\n    name: 'CounterfactualDeploymentFailedError'\n  }\nexport class CounterfactualDeploymentFailedError extends BaseError {\n  constructor({ factory }: { factory?: Address | undefined }) {\n    super(\n      `Deployment for counterfactual contract call failed${\n        factory ? ` for factory \"${factory}\".` : ''\n      }`,\n      {\n        metaMessages: [\n          'Please ensure:',\n          '- The `factory` is a valid contract deployment factory (ie. Create2 Factory, ERC-4337 Factory, etc).',\n          '- The `factoryData` is a valid encoded function call for contract deployment function on the factory.',\n        ],\n        name: 'CounterfactualDeploymentFailedError',\n      },\n    )\n  }\n}\n\nexport type RawContractErrorType = RawContractError & {\n  name: 'RawContractError'\n}\nexport class RawContractError extends BaseError {\n  code = 3\n\n  data?: Hex | { data?: Hex | undefined } | undefined\n\n  constructor({\n    data,\n    message,\n  }: {\n    data?: Hex | { data?: Hex | undefined } | undefined\n    message?: string | undefined\n  }) {\n    super(message || '', { name: 'RawContractError' })\n    this.data = data\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BM,MAAO,2BAA2B,0IAAA,CAAA,YAAS;IAG/C,YACE,KAAgB,EAChB,EACE,SAAS,QAAQ,EACjB,QAAQ,EACR,KAAK,EACL,IAAI,EACJ,GAAG,EACH,QAAQ,EACR,YAAY,EACZ,oBAAoB,EACpB,KAAK,EACL,EAAE,EACF,KAAK,EACL,aAAa,EAId,CAAA;QAED,MAAM,UAAU,WAAW,CAAA,GAAA,6JAAA,CAAA,eAAY,AAAZ,EAAa,YAAY;QACpD,IAAI,aAAa,CAAA,GAAA,iJAAA,CAAA,cAAW,AAAX,EAAY;YAC3B,MAAM,SAAS;YACf;YACA,OACE,OAAO,UAAU,eACjB,CAAA,EAAG,CAAA,GAAA,wJAAA,CAAA,cAAW,AAAX,EAAY,OAAM,CAAA,EAAI,OAAO,gBAAgB,UAAU,MAAK,CAAE;YACnE;YACA;YACA,UACE,OAAO,aAAa,eAAe,CAAA,EAAG,CAAA,GAAA,uJAAA,CAAA,aAAU,AAAV,EAAW,UAAS,KAAA,CAAO;YACnE,cACE,OAAO,iBAAiB,eACxB,CAAA,EAAG,CAAA,GAAA,uJAAA,CAAA,aAAU,AAAV,EAAW,cAAa,KAAA,CAAO;YACpC,sBACE,OAAO,yBAAyB,eAChC,CAAA,EAAG,CAAA,GAAA,uJAAA,CAAA,aAAU,AAAV,EAAW,sBAAqB,KAAA,CAAO;YAC5C;;QAGF,IAAI,eAAe;YACjB,cAAc,CAAA,EAAA,EAAK,CAAA,GAAA,mJAAA,CAAA,sBAAmB,AAAnB,EAAoB,eAAc,CAAE;QACzD;QAEA,KAAK,CAAC,MAAM,YAAY,EAAE;YACxB;YACA;YACA,cAAc;mBACR,MAAM,YAAY,GAAG;uBAAI,MAAM,YAAY;oBAAE;iBAAI,GAAG,EAAE;gBAC1D;gBACA;aACD,CAAC,MAAM,CAAC;YACT,MAAM;;QAtDD,OAAA,cAAA,CAAA,IAAA,EAAA,SAAA;;;;;;QAwDP,IAAI,CAAC,KAAK,GAAG;IACf;;AAOI,MAAO,uCAAuC,0IAAA,CAAA,YAAS;IAS3D,YACE,KAAgB,EAChB,EACE,GAAG,EACH,IAAI,EACJ,eAAe,EACf,QAAQ,EACR,YAAY,EACZ,MAAM,EAQP,CAAA;QAED,MAAM,UAAU,CAAA,GAAA,sJAAA,CAAA,aAAU,AAAV,EAAW;YAAE;YAAK;YAAM,MAAM;QAAY;QAC1D,MAAM,gBAAgB,UAClB,CAAA,GAAA,iKAAA,CAAA,wBAAqB,AAArB,EAAsB;YACpB;YACA;YACA,qBAAqB;YACrB,aAAa;aAEf;QACJ,MAAM,qBAAqB,UACvB,CAAA,GAAA,yJAAA,CAAA,gBAAa,AAAb,EAAc,SAAS;YAAE,aAAa;QAAI,KAC1C;QAEJ,MAAM,aAAa,CAAA,GAAA,iJAAA,CAAA,cAAW,AAAX,EAAY;YAC7B,SAAS,mBAAmB,CAAA,GAAA,2IAAA,CAAA,qBAAkB,AAAlB,EAAmB;YAC/C,UAAU;YACV,MACE,iBACA,kBAAkB,QAClB,CAAA,EAAG;mBAAI,MAAM,cAAc,UAAU,GAAG,IAAI;aAAG,CAC5C,GAAG,CAAC,IAAM,KACV,IAAI,CAAC,IAAG,EAAG,cAAa,CAAE;YAC/B;;QAGF,KAAK,CACH,MAAM,YAAY,IAChB,CAAA,iEAAA,EAAoE,aAAY,EAAA,CAAI,EACtF;YACE;YACA;YACA,cAAc;mBACR,MAAM,YAAY,GAAG;uBAAI,MAAM,YAAY;oBAAE;iBAAI,GAAG,EAAE;gBAC1D,cAAc;gBACd;aACD,CAAC,MAAM,CAAC;YACT,MAAM;;QA9DZ,OAAA,cAAA,CAAA,IAAA,EAAA,OAAA;;;;;;QACA,OAAA,cAAA,CAAA,IAAA,EAAA,QAAA;;;;;;QACS,OAAA,cAAA,CAAA,IAAA,EAAA,SAAA;;;;;;QACT,OAAA,cAAA,CAAA,IAAA,EAAA,mBAAA;;;;;;QACA,OAAA,cAAA,CAAA,IAAA,EAAA,iBAAA;;;;;;QACA,OAAA,cAAA,CAAA,IAAA,EAAA,gBAAA;;;;;;QACA,OAAA,cAAA,CAAA,IAAA,EAAA,UAAA;;;;;;QA2DE,IAAI,CAAC,GAAG,GAAG;QACX,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,KAAK,GAAG;QACb,IAAI,CAAC,eAAe,GAAG;QACvB,IAAI,CAAC,YAAY,GAAG;QACpB,IAAI,CAAC,MAAM,GAAG;IAChB;;AAOI,MAAO,sCAAsC,0IAAA,CAAA,YAAS;IAK1D,YAAY,EACV,GAAG,EACH,IAAI,EACJ,YAAY,EACZ,OAAO,EAMR,CAAA;QACC,IAAI;QACJ,IAAI,cAAuD;QAC3D,IAAI;QACJ,IAAI;QACJ,IAAI,QAAQ,SAAS,MAAM;YACzB,IAAI;gBACF,cAAc,CAAA,GAAA,6JAAA,CAAA,oBAAiB,AAAjB,EAAkB;oBAAE;oBAAK;gBAAI;gBAC3C,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,SAAS,EAAE,GAAG;gBAChD,IAAI,cAAc,SAAS;oBACzB,SAAU,SAAsB,CAAC,EAAE;gBACrC,OAAO,IAAI,cAAc,SAAS;oBAChC,MAAM,CAAC,SAAS,GAAG;oBACnB,SAAS,iJAAA,CAAA,eAAY,CAAC,SAAsC;gBAC9D,OAAO;oBACL,MAAM,kBAAkB,UACpB,CAAA,GAAA,yJAAA,CAAA,gBAAa,AAAb,EAAc,SAAS;wBAAE,aAAa;oBAAI,KAC1C;oBACJ,MAAM,gBACJ,WAAW,YACP,CAAA,GAAA,iKAAA,CAAA,wBAAqB,AAArB,EAAsB;wBACpB;wBACA,MAAM;wBACN,qBAAqB;wBACrB,aAAa;yBAEf;oBAEN,eAAe;wBACb,kBAAkB,CAAA,OAAA,EAAU,gBAAe,CAAE,GAAG;wBAChD,iBAAiB,kBAAkB,OAC/B,CAAA,OAAA,EAAU;+BAAI,MAAM,WAAW,UAAU,GAAG,IAAI;yBAAG,CAChD,GAAG,CAAC,IAAM,KACV,IAAI,CAAC,IAAG,EAAG,cAAa,CAAE,GAC7B;qBACL;gBACH;YACF,EAAE,OAAO,KAAK;gBACZ,QAAQ;YACV;QACF,OAAO,IAAI,SAAS,SAAS;QAE7B,IAAI;QACJ,IAAI,iBAAiB,yIAAA,CAAA,iCAA8B,EAAE;YACnD,YAAY,MAAM,SAAS;YAC3B,eAAe;gBACb,CAAA,4BAAA,EAA+B,UAAS,0CAAA,CAA4C;gBACpF;gBACA,CAAA,mFAAA,EAAsF,UAAS,CAAA,CAAG;aACnG;QACH;QAEA,KAAK,CACH,AAAC,UAAU,WAAW,wBAAyB,YAC3C;YACE,CAAA,uBAAA,EAA0B,aAAY,8BAAA,EACpC,YAAY,cAAc,SAC5B,CAAA,CAAG;YACH,UAAU;SACX,CAAC,IAAI,CAAC,QACP,CAAA,uBAAA,EAA0B,aAAY,WAAA,CAAa,EACvD;YACE;YACA;YACA,MAAM;;QA9EZ,OAAA,cAAA,CAAA,IAAA,EAAA,QAAA;;;;;;QACA,OAAA,cAAA,CAAA,IAAA,EAAA,UAAA;;;;;;QACA,OAAA,cAAA,CAAA,IAAA,EAAA,aAAA;;;;;;QAgFE,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,MAAM,GAAG;QACd,IAAI,CAAC,SAAS,GAAG;IACnB;;AAOI,MAAO,sCAAsC,0IAAA,CAAA,YAAS;IAC1D,YAAY,EAAE,YAAY,EAA4B,CAAA;QACpD,KAAK,CAAC,CAAA,uBAAA,EAA0B,aAAY,0BAAA,CAA4B,EAAE;YACxE,cAAc;gBACZ;gBACA,CAAA,6CAAA,EAAgD,aAAY,EAAA,CAAI;gBAChE;gBACA;aACD;YACD,MAAM;;IAEV;;AAOI,MAAO,4CAA4C,0IAAA,CAAA,YAAS;IAChE,YAAY,EAAE,OAAO,EAAqC,CAAA;QACxD,KAAK,CACH,CAAA,kDAAA,EACE,UAAU,CAAA,cAAA,EAAiB,QAAO,EAAA,CAAI,GAAG,GAC3C,CAAE,EACF;YACE,cAAc;gBACZ;gBACA;gBACA;aACD;YACD,MAAM;;IAGZ;;AAMI,MAAO,yBAAyB,0IAAA,CAAA,YAAS;IAK7C,YAAY,EACV,IAAI,EACJ,OAAO,EAIR,CAAA;QACC,KAAK,CAAC,WAAW,IAAI;YAAE,MAAM;QAAkB;QAXjD,OAAA,cAAA,CAAA,IAAA,EAAA,QAAA;;;;mBAAO;;QAEP,OAAA,cAAA,CAAA,IAAA,EAAA,QAAA;;;;;;QAUE,IAAI,CAAC,IAAI,GAAG;IACd"}},
    {"offset": {"line": 3298, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3303, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/errors/request.ts"],"sourcesContent":["import { stringify } from '../utils/stringify.js'\n\nimport { BaseError } from './base.js'\nimport { getUrl } from './utils.js'\n\nexport type HttpRequestErrorType = HttpRequestError & {\n  name: 'HttpRequestError'\n}\nexport class HttpRequestError extends BaseError {\n  body?: { [x: string]: unknown } | { [y: string]: unknown }[] | undefined\n  headers?: Headers | undefined\n  status?: number | undefined\n  url: string\n\n  constructor({\n    body,\n    cause,\n    details,\n    headers,\n    status,\n    url,\n  }: {\n    body?: { [x: string]: unknown } | { [y: string]: unknown }[] | undefined\n    cause?: Error | undefined\n    details?: string | undefined\n    headers?: Headers | undefined\n    status?: number | undefined\n    url: string\n  }) {\n    super('HTTP request failed.', {\n      cause,\n      details,\n      metaMessages: [\n        status && `Status: ${status}`,\n        `URL: ${getUrl(url)}`,\n        body && `Request body: ${stringify(body)}`,\n      ].filter(Boolean) as string[],\n      name: 'HttpRequestError',\n    })\n    this.body = body\n    this.headers = headers\n    this.status = status\n    this.url = url\n  }\n}\n\nexport type WebSocketRequestErrorType = WebSocketRequestError & {\n  name: 'WebSocketRequestError'\n}\nexport class WebSocketRequestError extends BaseError {\n  constructor({\n    body,\n    cause,\n    details,\n    url,\n  }: {\n    body?: { [key: string]: unknown } | undefined\n    cause?: Error | undefined\n    details?: string | undefined\n    url: string\n  }) {\n    super('WebSocket request failed.', {\n      cause,\n      details,\n      metaMessages: [\n        `URL: ${getUrl(url)}`,\n        body && `Request body: ${stringify(body)}`,\n      ].filter(Boolean) as string[],\n      name: 'WebSocketRequestError',\n    })\n  }\n}\n\nexport type RpcRequestErrorType = RpcRequestError & {\n  name: 'RpcRequestError'\n}\nexport class RpcRequestError extends BaseError {\n  code: number\n\n  constructor({\n    body,\n    error,\n    url,\n  }: {\n    body: { [x: string]: unknown } | { [y: string]: unknown }[]\n    error: { code: number; message: string }\n    url: string\n  }) {\n    super('RPC Request failed.', {\n      cause: error as any,\n      details: error.message,\n      metaMessages: [`URL: ${getUrl(url)}`, `Request body: ${stringify(body)}`],\n      name: 'RpcRequestError',\n    })\n    this.code = error.code\n  }\n}\n\nexport type SocketClosedErrorType = SocketClosedError & {\n  name: 'SocketClosedError'\n}\nexport class SocketClosedError extends BaseError {\n  constructor({\n    url,\n  }: {\n    url?: string | undefined\n  } = {}) {\n    super('The socket has been closed.', {\n      metaMessages: [url && `URL: ${getUrl(url)}`].filter(Boolean) as string[],\n      name: 'SocketClosedError',\n    })\n  }\n}\n\nexport type TimeoutErrorType = TimeoutError & {\n  name: 'TimeoutError'\n}\nexport class TimeoutError extends BaseError {\n  constructor({\n    body,\n    url,\n  }: {\n    body: { [x: string]: unknown } | { [y: string]: unknown }[]\n    url: string\n  }) {\n    super('The request took too long to respond.', {\n      details: 'The request timed out.',\n      metaMessages: [`URL: ${getUrl(url)}`, `Request body: ${stringify(body)}`],\n      name: 'TimeoutError',\n    })\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;AAQM,MAAO,yBAAyB,0IAAA,CAAA,YAAS;IAM7C,YAAY,EACV,IAAI,EACJ,KAAK,EACL,OAAO,EACP,OAAO,EACP,MAAM,EACN,GAAG,EAQJ,CAAA;QACC,KAAK,CAAC,wBAAwB;YAC5B;YACA;YACA,cAAc;gBACZ,UAAU,CAAA,QAAA,EAAW,OAAM,CAAE;gBAC7B,CAAA,KAAA,EAAQ,CAAA,GAAA,2IAAA,CAAA,SAAM,AAAN,EAAO,KAAI,CAAE;gBACrB,QAAQ,CAAA,cAAA,EAAiB,CAAA,GAAA,8IAAA,CAAA,YAAS,AAAT,EAAU,MAAK,CAAE;aAC3C,CAAC,MAAM,CAAC;YACT,MAAM;;QA5BV,OAAA,cAAA,CAAA,IAAA,EAAA,QAAA;;;;;;QACA,OAAA,cAAA,CAAA,IAAA,EAAA,WAAA;;;;;;QACA,OAAA,cAAA,CAAA,IAAA,EAAA,UAAA;;;;;;QACA,OAAA,cAAA,CAAA,IAAA,EAAA,OAAA;;;;;;QA2BE,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,OAAO,GAAG;QACf,IAAI,CAAC,MAAM,GAAG;QACd,IAAI,CAAC,GAAG,GAAG;IACb;;AAMI,MAAO,8BAA8B,0IAAA,CAAA,YAAS;IAClD,YAAY,EACV,IAAI,EACJ,KAAK,EACL,OAAO,EACP,GAAG,EAMJ,CAAA;QACC,KAAK,CAAC,6BAA6B;YACjC;YACA;YACA,cAAc;gBACZ,CAAA,KAAA,EAAQ,CAAA,GAAA,2IAAA,CAAA,SAAM,AAAN,EAAO,KAAI,CAAE;gBACrB,QAAQ,CAAA,cAAA,EAAiB,CAAA,GAAA,8IAAA,CAAA,YAAS,AAAT,EAAU,MAAK,CAAE;aAC3C,CAAC,MAAM,CAAC;YACT,MAAM;;IAEV;;AAMI,MAAO,wBAAwB,0IAAA,CAAA,YAAS;IAG5C,YAAY,EACV,IAAI,EACJ,KAAK,EACL,GAAG,EAKJ,CAAA;QACC,KAAK,CAAC,uBAAuB;YAC3B,OAAO;YACP,SAAS,MAAM,OAAO;YACtB,cAAc;gBAAC,CAAA,KAAA,EAAQ,CAAA,GAAA,2IAAA,CAAA,SAAM,AAAN,EAAO,KAAI,CAAE;gBAAE,CAAA,cAAA,EAAiB,CAAA,GAAA,8IAAA,CAAA,YAAS,AAAT,EAAU,MAAK,CAAE;aAAC;YACzE,MAAM;;QAfV,OAAA,cAAA,CAAA,IAAA,EAAA,QAAA;;;;;;QAiBE,IAAI,CAAC,IAAI,GAAG,MAAM,IAAI;IACxB;;AAMI,MAAO,0BAA0B,0IAAA,CAAA,YAAS;IAC9C,YAAY,EACV,GAAG,EAAA,GAGD,CAAA,CAAE,CAAA;QACJ,KAAK,CAAC,+BAA+B;YACnC,cAAc;gBAAC,OAAO,CAAA,KAAA,EAAQ,CAAA,GAAA,2IAAA,CAAA,SAAM,AAAN,EAAO,KAAI,CAAE;aAAC,CAAC,MAAM,CAAC;YACpD,MAAM;;IAEV;;AAMI,MAAO,qBAAqB,0IAAA,CAAA,YAAS;IACzC,YAAY,EACV,IAAI,EACJ,GAAG,EAIJ,CAAA;QACC,KAAK,CAAC,yCAAyC;YAC7C,SAAS;YACT,cAAc;gBAAC,CAAA,KAAA,EAAQ,CAAA,GAAA,2IAAA,CAAA,SAAM,AAAN,EAAO,KAAI,CAAE;gBAAE,CAAA,cAAA,EAAiB,CAAA,GAAA,8IAAA,CAAA,YAAS,AAAT,EAAU,MAAK,CAAE;aAAC;YACzE,MAAM;;IAEV"}},
    {"offset": {"line": 3414, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3419, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/errors/rpc.ts"],"sourcesContent":["import type { Prettify } from '../types/utils.js'\nimport { BaseError } from './base.js'\nimport { RpcRequestError } from './request.js'\n\nconst unknownErrorCode = -1\n\nexport type RpcErrorCode =\n  | -1\n  | -32700 // Parse error\n  | -32600 // Invalid request\n  | -32601 // Method not found\n  | -32602 // Invalid params\n  | -32603 // Internal error\n  | -32000 // Invalid input\n  | -32001 // Resource not found\n  | -32002 // Resource unavailable\n  | -32003 // Transaction rejected\n  | -32004 // Method not supported\n  | -32005 // Limit exceeded\n  | -32006 // JSON-RPC version not supported\n  | -32042 // Method not found\n\ntype RpcErrorOptions<code extends number = RpcErrorCode> = {\n  code?: code | (number & {}) | undefined\n  docsPath?: string | undefined\n  metaMessages?: string[] | undefined\n  name?: string | undefined\n  shortMessage: string\n}\n\n/**\n * Error subclass implementing JSON RPC 2.0 errors and Ethereum RPC errors per EIP-1474.\n *\n * - EIP https://eips.ethereum.org/EIPS/eip-1474\n */\nexport type RpcErrorType = RpcError & { name: 'RpcError' }\nexport class RpcError<code_ extends number = RpcErrorCode> extends BaseError {\n  code: code_ | (number & {})\n\n  constructor(\n    cause: Error,\n    {\n      code,\n      docsPath,\n      metaMessages,\n      name,\n      shortMessage,\n    }: RpcErrorOptions<code_>,\n  ) {\n    super(shortMessage, {\n      cause,\n      docsPath,\n      metaMessages:\n        metaMessages || (cause as { metaMessages?: string[] })?.metaMessages,\n      name: name || 'RpcError',\n    })\n    this.name = name || cause.name\n    this.code = (\n      cause instanceof RpcRequestError ? cause.code : (code ?? unknownErrorCode)\n    ) as code_\n  }\n}\n\nexport type ProviderRpcErrorCode =\n  | 4001 // User Rejected Request\n  | 4100 // Unauthorized\n  | 4200 // Unsupported Method\n  | 4900 // Disconnected\n  | 4901 // Chain Disconnected\n  | 4902 // Chain Not Recognized\n\n/**\n * Error subclass implementing Ethereum Provider errors per EIP-1193.\n *\n * - EIP https://eips.ethereum.org/EIPS/eip-1193\n */\nexport type ProviderRpcErrorType = ProviderRpcError & {\n  name: 'ProviderRpcError'\n}\nexport class ProviderRpcError<\n  T = undefined,\n> extends RpcError<ProviderRpcErrorCode> {\n  data?: T | undefined\n\n  constructor(\n    cause: Error,\n    options: Prettify<\n      RpcErrorOptions<ProviderRpcErrorCode> & {\n        data?: T | undefined\n      }\n    >,\n  ) {\n    super(cause, options)\n\n    this.data = options.data\n  }\n}\n\n/**\n * Subclass for a \"Parse error\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport type ParseRpcErrorType = ParseRpcError & {\n  code: -32700\n  name: 'ParseRpcError'\n}\nexport class ParseRpcError extends RpcError {\n  static code = -32700 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: ParseRpcError.code,\n      name: 'ParseRpcError',\n      shortMessage:\n        'Invalid JSON was received by the server. An error occurred on the server while parsing the JSON text.',\n    })\n  }\n}\n\n/**\n * Subclass for a \"Invalid request\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport type InvalidRequestRpcErrorType = InvalidRequestRpcError & {\n  code: -32600\n  name: 'InvalidRequestRpcError'\n}\nexport class InvalidRequestRpcError extends RpcError {\n  static code = -32600 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: InvalidRequestRpcError.code,\n      name: 'InvalidRequestRpcError',\n      shortMessage: 'JSON is not a valid request object.',\n    })\n  }\n}\n\n/**\n * Subclass for a \"Method not found\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport type MethodNotFoundRpcErrorType = MethodNotFoundRpcError & {\n  code: -32601\n  name: 'MethodNotFoundRpcError'\n}\nexport class MethodNotFoundRpcError extends RpcError {\n  static code = -32601 as const\n\n  constructor(cause: Error, { method }: { method?: string } = {}) {\n    super(cause, {\n      code: MethodNotFoundRpcError.code,\n      name: 'MethodNotFoundRpcError',\n      shortMessage: `The method${method ? ` \"${method}\"` : ''} does not exist / is not available.`,\n    })\n  }\n}\n\n/**\n * Subclass for an \"Invalid params\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport type InvalidParamsRpcErrorType = InvalidParamsRpcError & {\n  code: -32602\n  name: 'InvalidParamsRpcError'\n}\nexport class InvalidParamsRpcError extends RpcError {\n  static code = -32602 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: InvalidParamsRpcError.code,\n      name: 'InvalidParamsRpcError',\n      shortMessage: [\n        'Invalid parameters were provided to the RPC method.',\n        'Double check you have provided the correct parameters.',\n      ].join('\\n'),\n    })\n  }\n}\n\n/**\n * Subclass for an \"Internal error\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport type InternalRpcErrorType = InternalRpcError & {\n  code: -32603\n  name: 'InternalRpcError'\n}\nexport class InternalRpcError extends RpcError {\n  static code = -32603 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: InternalRpcError.code,\n      name: 'InternalRpcError',\n      shortMessage: 'An internal error was received.',\n    })\n  }\n}\n\n/**\n * Subclass for an \"Invalid input\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport type InvalidInputRpcErrorType = InvalidInputRpcError & {\n  code: -32000\n  name: 'InvalidInputRpcError'\n}\nexport class InvalidInputRpcError extends RpcError {\n  static code = -32000 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: InvalidInputRpcError.code,\n      name: 'InvalidInputRpcError',\n      shortMessage: [\n        'Missing or invalid parameters.',\n        'Double check you have provided the correct parameters.',\n      ].join('\\n'),\n    })\n  }\n}\n\n/**\n * Subclass for a \"Resource not found\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport type ResourceNotFoundRpcErrorType = ResourceNotFoundRpcError & {\n  code: -32001\n  name: 'ResourceNotFoundRpcError'\n}\nexport class ResourceNotFoundRpcError extends RpcError {\n  override name = 'ResourceNotFoundRpcError'\n  static code = -32001 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: ResourceNotFoundRpcError.code,\n      name: 'ResourceNotFoundRpcError',\n      shortMessage: 'Requested resource not found.',\n    })\n  }\n}\n\n/**\n * Subclass for a \"Resource unavailable\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport type ResourceUnavailableRpcErrorType = ResourceUnavailableRpcError & {\n  code: -32002\n  name: 'ResourceUnavailableRpcError'\n}\nexport class ResourceUnavailableRpcError extends RpcError {\n  static code = -32002 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: ResourceUnavailableRpcError.code,\n      name: 'ResourceUnavailableRpcError',\n      shortMessage: 'Requested resource not available.',\n    })\n  }\n}\n\n/**\n * Subclass for a \"Transaction rejected\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport type TransactionRejectedRpcErrorType = TransactionRejectedRpcError & {\n  code: -32003\n  name: 'TransactionRejectedRpcError'\n}\nexport class TransactionRejectedRpcError extends RpcError {\n  static code = -32003 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: TransactionRejectedRpcError.code,\n      name: 'TransactionRejectedRpcError',\n      shortMessage: 'Transaction creation failed.',\n    })\n  }\n}\n\n/**\n * Subclass for a \"Method not supported\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport type MethodNotSupportedRpcErrorType = MethodNotSupportedRpcError & {\n  code: -32004\n  name: 'MethodNotSupportedRpcError'\n}\nexport class MethodNotSupportedRpcError extends RpcError {\n  static code = -32004 as const\n\n  constructor(cause: Error, { method }: { method?: string } = {}) {\n    super(cause, {\n      code: MethodNotSupportedRpcError.code,\n      name: 'MethodNotSupportedRpcError',\n      shortMessage: `Method${method ? ` \"${method}\"` : ''} is not implemented.`,\n    })\n  }\n}\n\n/**\n * Subclass for a \"Limit exceeded\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport type LimitExceededRpcErrorType = LimitExceededRpcError & {\n  code: -32005\n  name: 'LimitExceededRpcError'\n}\nexport class LimitExceededRpcError extends RpcError {\n  static code = -32005 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: LimitExceededRpcError.code,\n      name: 'LimitExceededRpcError',\n      shortMessage: 'Request exceeds defined limit.',\n    })\n  }\n}\n\n/**\n * Subclass for a \"JSON-RPC version not supported\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport type JsonRpcVersionUnsupportedErrorType =\n  JsonRpcVersionUnsupportedError & {\n    code: -32006\n    name: 'JsonRpcVersionUnsupportedError'\n  }\nexport class JsonRpcVersionUnsupportedError extends RpcError {\n  static code = -32006 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: JsonRpcVersionUnsupportedError.code,\n      name: 'JsonRpcVersionUnsupportedError',\n      shortMessage: 'Version of JSON-RPC protocol is not supported.',\n    })\n  }\n}\n\n/**\n * Subclass for a \"User Rejected Request\" EIP-1193 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1193#provider-errors\n */\nexport type UserRejectedRequestErrorType = UserRejectedRequestError & {\n  code: 4001\n  name: 'UserRejectedRequestError'\n}\nexport class UserRejectedRequestError extends ProviderRpcError {\n  static code = 4001 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: UserRejectedRequestError.code,\n      name: 'UserRejectedRequestError',\n      shortMessage: 'User rejected the request.',\n    })\n  }\n}\n\n/**\n * Subclass for an \"Unauthorized\" EIP-1193 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1193#provider-errors\n */\nexport type UnauthorizedProviderErrorType = UnauthorizedProviderError & {\n  code: 4100\n  name: 'UnauthorizedProviderError'\n}\nexport class UnauthorizedProviderError extends ProviderRpcError {\n  static code = 4100 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: UnauthorizedProviderError.code,\n      name: 'UnauthorizedProviderError',\n      shortMessage:\n        'The requested method and/or account has not been authorized by the user.',\n    })\n  }\n}\n\n/**\n * Subclass for an \"Unsupported Method\" EIP-1193 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1193#provider-errors\n */\nexport type UnsupportedProviderMethodErrorType =\n  UnsupportedProviderMethodError & {\n    code: 4200\n    name: 'UnsupportedProviderMethodError'\n  }\nexport class UnsupportedProviderMethodError extends ProviderRpcError {\n  static code = 4200 as const\n\n  constructor(cause: Error, { method }: { method?: string } = {}) {\n    super(cause, {\n      code: UnsupportedProviderMethodError.code,\n      name: 'UnsupportedProviderMethodError',\n      shortMessage: `The Provider does not support the requested method${method ? ` \" ${method}\"` : ''}.`,\n    })\n  }\n}\n\n/**\n * Subclass for an \"Disconnected\" EIP-1193 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1193#provider-errors\n */\nexport type ProviderDisconnectedErrorType = ProviderDisconnectedError & {\n  code: 4900\n  name: 'ProviderDisconnectedError'\n}\nexport class ProviderDisconnectedError extends ProviderRpcError {\n  static code = 4900 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: ProviderDisconnectedError.code,\n      name: 'ProviderDisconnectedError',\n      shortMessage: 'The Provider is disconnected from all chains.',\n    })\n  }\n}\n\n/**\n * Subclass for an \"Chain Disconnected\" EIP-1193 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1193#provider-errors\n */\nexport type ChainDisconnectedErrorType = ChainDisconnectedError & {\n  code: 4901\n  name: 'ChainDisconnectedError'\n}\nexport class ChainDisconnectedError extends ProviderRpcError {\n  static code = 4901 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: ChainDisconnectedError.code,\n      name: 'ChainDisconnectedError',\n      shortMessage: 'The Provider is not connected to the requested chain.',\n    })\n  }\n}\n\n/**\n * Subclass for an \"Switch Chain\" EIP-1193 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1193#provider-errors\n */\nexport type SwitchChainErrorType = SwitchChainError & {\n  code: 4902\n  name: 'SwitchChainError'\n}\nexport class SwitchChainError extends ProviderRpcError {\n  static code = 4902 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: SwitchChainError.code,\n      name: 'SwitchChainError',\n      shortMessage: 'An error occurred when attempting to switch chain.',\n    })\n  }\n}\n\n/**\n * Subclass for an unknown RPC error.\n */\nexport type UnknownRpcErrorType = UnknownRpcError & {\n  name: 'UnknownRpcError'\n}\nexport class UnknownRpcError extends RpcError {\n  constructor(cause: Error) {\n    super(cause, {\n      name: 'UnknownRpcError',\n      shortMessage: 'An unknown RPC error occurred.',\n    })\n  }\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 3768, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3773, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/errors/getContractError.ts"],"sourcesContent":["import type { Abi, Address } from 'abitype'\n\nimport { AbiDecodingZeroDataError } from '../../errors/abi.js'\nimport { BaseError } from '../../errors/base.js'\nimport {\n  ContractFunctionExecutionError,\n  type ContractFunctionExecutionErrorType,\n  ContractFunctionRevertedError,\n  type ContractFunctionRevertedErrorType,\n  ContractFunctionZeroDataError,\n  type ContractFunctionZeroDataErrorType,\n  RawContractError,\n} from '../../errors/contract.js'\nimport { InternalRpcError } from '../../errors/rpc.js'\nimport type { ErrorType } from '../../errors/utils.js'\n\nconst EXECUTION_REVERTED_ERROR_CODE = 3\n\nexport type GetContractErrorReturnType<cause = ErrorType> = Omit<\n  ContractFunctionExecutionErrorType,\n  'cause'\n> & {\n  cause:\n    | cause\n    | ContractFunctionZeroDataErrorType\n    | ContractFunctionRevertedErrorType\n}\n\nexport function getContractError<err extends ErrorType<string>>(\n  err: err,\n  {\n    abi,\n    address,\n    args,\n    docsPath,\n    functionName,\n    sender,\n  }: {\n    abi: Abi\n    args: any\n    address?: Address | undefined\n    docsPath?: string | undefined\n    functionName: string\n    sender?: Address | undefined\n  },\n): GetContractErrorReturnType {\n  const { code, data, message, shortMessage } = (\n    err instanceof RawContractError\n      ? err\n      : err instanceof BaseError\n        ? err.walk((err) => 'data' in (err as Error)) || err.walk()\n        : {}\n  ) as RawContractError\n\n  const cause = (() => {\n    if (err instanceof AbiDecodingZeroDataError)\n      return new ContractFunctionZeroDataError({ functionName })\n    if (\n      [EXECUTION_REVERTED_ERROR_CODE, InternalRpcError.code].includes(code) &&\n      (data || message || shortMessage)\n    ) {\n      return new ContractFunctionRevertedError({\n        abi,\n        data: typeof data === 'object' ? data.data : data,\n        functionName,\n        message: shortMessage ?? message,\n      })\n    }\n    return err\n  })()\n\n  return new ContractFunctionExecutionError(cause as BaseError, {\n    abi,\n    args,\n    contractAddress: address,\n    docsPath,\n    functionName,\n    sender,\n  }) as GetContractErrorReturnType\n}\n"],"names":[],"mappings":";;;;;;;;;;;;AAgBA,MAAM,gCAAgC;AAYhC,SAAU,iBACd,GAAQ,EACR,EACE,GAAG,EACH,OAAO,EACP,IAAI,EACJ,QAAQ,EACR,YAAY,EACZ,MAAM,EAQP;IAED,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,YAAY,EAAE,GACzC,eAAe,8IAAA,CAAA,mBAAgB,GAC3B,MACA,eAAe,0IAAA,CAAA,YAAS,GACtB,IAAI,IAAI,CAAC,CAAC,MAAQ,UAAW,QAAkB,IAAI,IAAI,KACvD,CAAA;IAGR,MAAM,QAAQ,CAAC;QACb,IAAI,eAAe,yIAAA,CAAA,2BAAwB,EACzC,OAAO,IAAI,8IAAA,CAAA,gCAA6B,CAAC;YAAE;QAAY;QACzD,IACE;YAAC;YAA+B,yIAAA,CAAA,mBAAgB,CAAC,IAAI;SAAC,CAAC,QAAQ,CAAC,SAChE,CAAC,QAAQ,WAAW,YAAY,GAChC;YACA,OAAO,IAAI,8IAAA,CAAA,gCAA6B,CAAC;gBACvC;gBACA,MAAM,OAAO,SAAS,WAAW,KAAK,IAAI,GAAG;gBAC7C;gBACA,SAAS,gBAAgB;;QAE7B;QACA,OAAO;IACT,CAAC;IAED,OAAO,IAAI,8IAAA,CAAA,iCAA8B,CAAC,OAAoB;QAC5D;QACA;QACA,iBAAiB;QACjB;QACA;QACA;;AAEJ"}},
    {"offset": {"line": 3814, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3819, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/getAction.ts"],"sourcesContent":["import type { Client } from '../clients/createClient.js'\nimport type { PublicActions } from '../clients/decorators/public.js'\nimport type { WalletActions } from '../clients/decorators/wallet.js'\nimport type { Transport } from '../clients/transports/createTransport.js'\nimport type { Account } from '../types/account.js'\nimport type { Chain } from '../types/chain.js'\nimport type { RpcSchema } from '../types/eip1193.js'\n\n/**\n * Retrieves and returns an action from the client (if exists), and falls\n * back to the tree-shakable action.\n *\n * Useful for extracting overridden actions from a client (ie. if a consumer\n * wants to override the `sendTransaction` implementation).\n */\nexport function getAction<\n  transport extends Transport,\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n  rpcSchema extends RpcSchema | undefined,\n  extended extends { [key: string]: unknown },\n  client extends Client<transport, chain, account, rpcSchema, extended>,\n  parameters,\n  returnType,\n>(\n  client: client,\n  actionFn: (_: any, parameters: parameters) => returnType,\n  // Some minifiers drop `Function.prototype.name`, or replace it with short letters,\n  // meaning that `actionFn.name` will not always work. For that case, the consumer\n  // needs to pass the name explicitly.\n  name: keyof PublicActions | keyof WalletActions | (string & {}),\n): (parameters: parameters) => returnType {\n  const action_implicit = client[actionFn.name]\n  if (typeof action_implicit === 'function')\n    return action_implicit as (params: parameters) => returnType\n\n  const action_explicit = client[name]\n  if (typeof action_explicit === 'function')\n    return action_explicit as (params: parameters) => returnType\n\n  return (params) => actionFn(client, params)\n}\n"],"names":[],"mappings":"AAQA;;;;;;;;;AAOM,SAAU,UAUd,MAAc,EACd,QAAwD,EACxD,mFAAmF;AACnF,iFAAiF;AACjF,qCAAqC;AACrC,IAA+D;IAE/D,MAAM,kBAAkB,MAAM,CAAC,SAAS,IAAI,CAAC;IAC7C,IAAI,OAAO,oBAAoB,YAC7B,OAAO;IAET,MAAM,kBAAkB,MAAM,CAAC,KAAK;IACpC,IAAI,OAAO,oBAAoB,YAC7B,OAAO;IAET,OAAO,CAAC,SAAW,SAAS,QAAQ;AACtC"}},
    {"offset": {"line": 3838, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3843, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/constants/abis.ts"],"sourcesContent":["/* [Multicall3](https://github.com/mds1/multicall) */\nexport const multicall3Abi = [\n  {\n    inputs: [\n      {\n        components: [\n          {\n            name: 'target',\n            type: 'address',\n          },\n          {\n            name: 'allowFailure',\n            type: 'bool',\n          },\n          {\n            name: 'callData',\n            type: 'bytes',\n          },\n        ],\n        name: 'calls',\n        type: 'tuple[]',\n      },\n    ],\n    name: 'aggregate3',\n    outputs: [\n      {\n        components: [\n          {\n            name: 'success',\n            type: 'bool',\n          },\n          {\n            name: 'returnData',\n            type: 'bytes',\n          },\n        ],\n        name: 'returnData',\n        type: 'tuple[]',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n] as const\n\nconst universalResolverErrors = [\n  {\n    inputs: [],\n    name: 'ResolverNotFound',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'ResolverWildcardNotSupported',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'ResolverNotContract',\n    type: 'error',\n  },\n  {\n    inputs: [\n      {\n        name: 'returnData',\n        type: 'bytes',\n      },\n    ],\n    name: 'ResolverError',\n    type: 'error',\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            name: 'status',\n            type: 'uint16',\n          },\n          {\n            name: 'message',\n            type: 'string',\n          },\n        ],\n        name: 'errors',\n        type: 'tuple[]',\n      },\n    ],\n    name: 'HttpError',\n    type: 'error',\n  },\n] as const\n\nexport const universalResolverResolveAbi = [\n  ...universalResolverErrors,\n  {\n    name: 'resolve',\n    type: 'function',\n    stateMutability: 'view',\n    inputs: [\n      { name: 'name', type: 'bytes' },\n      { name: 'data', type: 'bytes' },\n    ],\n    outputs: [\n      { name: '', type: 'bytes' },\n      { name: 'address', type: 'address' },\n    ],\n  },\n  {\n    name: 'resolve',\n    type: 'function',\n    stateMutability: 'view',\n    inputs: [\n      { name: 'name', type: 'bytes' },\n      { name: 'data', type: 'bytes' },\n      { name: 'gateways', type: 'string[]' },\n    ],\n    outputs: [\n      { name: '', type: 'bytes' },\n      { name: 'address', type: 'address' },\n    ],\n  },\n] as const\n\nexport const universalResolverReverseAbi = [\n  ...universalResolverErrors,\n  {\n    name: 'reverse',\n    type: 'function',\n    stateMutability: 'view',\n    inputs: [{ type: 'bytes', name: 'reverseName' }],\n    outputs: [\n      { type: 'string', name: 'resolvedName' },\n      { type: 'address', name: 'resolvedAddress' },\n      { type: 'address', name: 'reverseResolver' },\n      { type: 'address', name: 'resolver' },\n    ],\n  },\n  {\n    name: 'reverse',\n    type: 'function',\n    stateMutability: 'view',\n    inputs: [\n      { type: 'bytes', name: 'reverseName' },\n      { type: 'string[]', name: 'gateways' },\n    ],\n    outputs: [\n      { type: 'string', name: 'resolvedName' },\n      { type: 'address', name: 'resolvedAddress' },\n      { type: 'address', name: 'reverseResolver' },\n      { type: 'address', name: 'resolver' },\n    ],\n  },\n] as const\n\nexport const textResolverAbi = [\n  {\n    name: 'text',\n    type: 'function',\n    stateMutability: 'view',\n    inputs: [\n      { name: 'name', type: 'bytes32' },\n      { name: 'key', type: 'string' },\n    ],\n    outputs: [{ name: '', type: 'string' }],\n  },\n] as const\n\nexport const addressResolverAbi = [\n  {\n    name: 'addr',\n    type: 'function',\n    stateMutability: 'view',\n    inputs: [{ name: 'name', type: 'bytes32' }],\n    outputs: [{ name: '', type: 'address' }],\n  },\n  {\n    name: 'addr',\n    type: 'function',\n    stateMutability: 'view',\n    inputs: [\n      { name: 'name', type: 'bytes32' },\n      { name: 'coinType', type: 'uint256' },\n    ],\n    outputs: [{ name: '', type: 'bytes' }],\n  },\n] as const\n\n// ERC-1271\n// isValidSignature(bytes32 hash, bytes signature) → bytes4 magicValue\n/** @internal */\nexport const smartAccountAbi = [\n  {\n    name: 'isValidSignature',\n    type: 'function',\n    stateMutability: 'view',\n    inputs: [\n      { name: 'hash', type: 'bytes32' },\n      { name: 'signature', type: 'bytes' },\n    ],\n    outputs: [{ name: '', type: 'bytes4' }],\n  },\n] as const\n\n// ERC-6492 - universal deployless signature validator contract\n// constructor(address _signer, bytes32 _hash, bytes _signature) → bytes4 returnValue\n// returnValue is either 0x1 (valid) or 0x0 (invalid)\nexport const universalSignatureValidatorAbi = [\n  {\n    inputs: [\n      {\n        name: '_signer',\n        type: 'address',\n      },\n      {\n        name: '_hash',\n        type: 'bytes32',\n      },\n      {\n        name: '_signature',\n        type: 'bytes',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n  },\n  {\n    inputs: [\n      {\n        name: '_signer',\n        type: 'address',\n      },\n      {\n        name: '_hash',\n        type: 'bytes32',\n      },\n      {\n        name: '_signature',\n        type: 'bytes',\n      },\n    ],\n    outputs: [\n      {\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'function',\n    name: 'isValidSig',\n  },\n] as const\n\n/** [ERC-20 Token Standard](https://ethereum.org/en/developers/docs/standards/tokens/erc-20) */\nexport const erc20Abi = [\n  {\n    type: 'event',\n    name: 'Approval',\n    inputs: [\n      {\n        indexed: true,\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        name: 'spender',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        name: 'value',\n        type: 'uint256',\n      },\n    ],\n  },\n  {\n    type: 'event',\n    name: 'Transfer',\n    inputs: [\n      {\n        indexed: true,\n        name: 'from',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        name: 'to',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        name: 'value',\n        type: 'uint256',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'allowance',\n    stateMutability: 'view',\n    inputs: [\n      {\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        name: 'spender',\n        type: 'address',\n      },\n    ],\n    outputs: [\n      {\n        type: 'uint256',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'approve',\n    stateMutability: 'nonpayable',\n    inputs: [\n      {\n        name: 'spender',\n        type: 'address',\n      },\n      {\n        name: 'amount',\n        type: 'uint256',\n      },\n    ],\n    outputs: [\n      {\n        type: 'bool',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'balanceOf',\n    stateMutability: 'view',\n    inputs: [\n      {\n        name: 'account',\n        type: 'address',\n      },\n    ],\n    outputs: [\n      {\n        type: 'uint256',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'decimals',\n    stateMutability: 'view',\n    inputs: [],\n    outputs: [\n      {\n        type: 'uint8',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'name',\n    stateMutability: 'view',\n    inputs: [],\n    outputs: [\n      {\n        type: 'string',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'symbol',\n    stateMutability: 'view',\n    inputs: [],\n    outputs: [\n      {\n        type: 'string',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'totalSupply',\n    stateMutability: 'view',\n    inputs: [],\n    outputs: [\n      {\n        type: 'uint256',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'transfer',\n    stateMutability: 'nonpayable',\n    inputs: [\n      {\n        name: 'recipient',\n        type: 'address',\n      },\n      {\n        name: 'amount',\n        type: 'uint256',\n      },\n    ],\n    outputs: [\n      {\n        type: 'bool',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'transferFrom',\n    stateMutability: 'nonpayable',\n    inputs: [\n      {\n        name: 'sender',\n        type: 'address',\n      },\n      {\n        name: 'recipient',\n        type: 'address',\n      },\n      {\n        name: 'amount',\n        type: 'uint256',\n      },\n    ],\n    outputs: [\n      {\n        type: 'bool',\n      },\n    ],\n  },\n] as const\n\n/**\n * [bytes32-flavored ERC-20](https://docs.makerdao.com/smart-contract-modules/mkr-module#4.-gotchas-potential-source-of-user-error)\n * for tokens (ie. Maker) that use bytes32 instead of string.\n */\nexport const erc20Abi_bytes32 = [\n  {\n    type: 'event',\n    name: 'Approval',\n    inputs: [\n      {\n        indexed: true,\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        name: 'spender',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        name: 'value',\n        type: 'uint256',\n      },\n    ],\n  },\n  {\n    type: 'event',\n    name: 'Transfer',\n    inputs: [\n      {\n        indexed: true,\n        name: 'from',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        name: 'to',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        name: 'value',\n        type: 'uint256',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'allowance',\n    stateMutability: 'view',\n    inputs: [\n      {\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        name: 'spender',\n        type: 'address',\n      },\n    ],\n    outputs: [\n      {\n        type: 'uint256',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'approve',\n    stateMutability: 'nonpayable',\n    inputs: [\n      {\n        name: 'spender',\n        type: 'address',\n      },\n      {\n        name: 'amount',\n        type: 'uint256',\n      },\n    ],\n    outputs: [\n      {\n        type: 'bool',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'balanceOf',\n    stateMutability: 'view',\n    inputs: [\n      {\n        name: 'account',\n        type: 'address',\n      },\n    ],\n    outputs: [\n      {\n        type: 'uint256',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'decimals',\n    stateMutability: 'view',\n    inputs: [],\n    outputs: [\n      {\n        type: 'uint8',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'name',\n    stateMutability: 'view',\n    inputs: [],\n    outputs: [\n      {\n        type: 'bytes32',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'symbol',\n    stateMutability: 'view',\n    inputs: [],\n    outputs: [\n      {\n        type: 'bytes32',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'totalSupply',\n    stateMutability: 'view',\n    inputs: [],\n    outputs: [\n      {\n        type: 'uint256',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'transfer',\n    stateMutability: 'nonpayable',\n    inputs: [\n      {\n        name: 'recipient',\n        type: 'address',\n      },\n      {\n        name: 'amount',\n        type: 'uint256',\n      },\n    ],\n    outputs: [\n      {\n        type: 'bool',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'transferFrom',\n    stateMutability: 'nonpayable',\n    inputs: [\n      {\n        name: 'sender',\n        type: 'address',\n      },\n      {\n        name: 'recipient',\n        type: 'address',\n      },\n      {\n        name: 'amount',\n        type: 'uint256',\n      },\n    ],\n    outputs: [\n      {\n        type: 'bool',\n      },\n    ],\n  },\n] as const\n\n/** [ERC-721 Non-Fungible Token Standard](https://ethereum.org/en/developers/docs/standards/tokens/erc-721) */\nexport const erc721Abi = [\n  {\n    type: 'event',\n    name: 'Approval',\n    inputs: [\n      {\n        indexed: true,\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        name: 'spender',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n  },\n  {\n    type: 'event',\n    name: 'ApprovalForAll',\n    inputs: [\n      {\n        indexed: true,\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        name: 'operator',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        name: 'approved',\n        type: 'bool',\n      },\n    ],\n  },\n  {\n    type: 'event',\n    name: 'Transfer',\n    inputs: [\n      {\n        indexed: true,\n        name: 'from',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        name: 'to',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'approve',\n    stateMutability: 'payable',\n    inputs: [\n      {\n        name: 'spender',\n        type: 'address',\n      },\n      {\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n    outputs: [],\n  },\n  {\n    type: 'function',\n    name: 'balanceOf',\n    stateMutability: 'view',\n    inputs: [\n      {\n        name: 'account',\n        type: 'address',\n      },\n    ],\n    outputs: [\n      {\n        type: 'uint256',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'getApproved',\n    stateMutability: 'view',\n    inputs: [\n      {\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n    outputs: [\n      {\n        type: 'address',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'isApprovedForAll',\n    stateMutability: 'view',\n    inputs: [\n      {\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        name: 'operator',\n        type: 'address',\n      },\n    ],\n    outputs: [\n      {\n        type: 'bool',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'name',\n    stateMutability: 'view',\n    inputs: [],\n    outputs: [\n      {\n        type: 'string',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'ownerOf',\n    stateMutability: 'view',\n    inputs: [\n      {\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n    outputs: [\n      {\n        name: 'owner',\n        type: 'address',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'safeTransferFrom',\n    stateMutability: 'payable',\n    inputs: [\n      {\n        name: 'from',\n        type: 'address',\n      },\n      {\n        name: 'to',\n        type: 'address',\n      },\n      {\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n    outputs: [],\n  },\n  {\n    type: 'function',\n    name: 'safeTransferFrom',\n    stateMutability: 'nonpayable',\n    inputs: [\n      {\n        name: 'from',\n        type: 'address',\n      },\n      {\n        name: 'to',\n        type: 'address',\n      },\n      {\n        name: 'id',\n        type: 'uint256',\n      },\n      {\n        name: 'data',\n        type: 'bytes',\n      },\n    ],\n    outputs: [],\n  },\n  {\n    type: 'function',\n    name: 'setApprovalForAll',\n    stateMutability: 'nonpayable',\n    inputs: [\n      {\n        name: 'operator',\n        type: 'address',\n      },\n      {\n        name: 'approved',\n        type: 'bool',\n      },\n    ],\n    outputs: [],\n  },\n  {\n    type: 'function',\n    name: 'symbol',\n    stateMutability: 'view',\n    inputs: [],\n    outputs: [\n      {\n        type: 'string',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'tokenByIndex',\n    stateMutability: 'view',\n    inputs: [\n      {\n        name: 'index',\n        type: 'uint256',\n      },\n    ],\n    outputs: [\n      {\n        type: 'uint256',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'tokenByIndex',\n    stateMutability: 'view',\n    inputs: [\n      {\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        name: 'index',\n        type: 'uint256',\n      },\n    ],\n    outputs: [\n      {\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'tokenURI',\n    stateMutability: 'view',\n    inputs: [\n      {\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n    outputs: [\n      {\n        type: 'string',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'totalSupply',\n    stateMutability: 'view',\n    inputs: [],\n    outputs: [\n      {\n        type: 'uint256',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'transferFrom',\n    stateMutability: 'payable',\n    inputs: [\n      {\n        name: 'sender',\n        type: 'address',\n      },\n      {\n        name: 'recipient',\n        type: 'address',\n      },\n      {\n        name: 'tokeId',\n        type: 'uint256',\n      },\n    ],\n    outputs: [],\n  },\n] as const\n\n/** [ERC-4626 Tokenized Vaults Standard](https://ethereum.org/en/developers/docs/standards/tokens/erc-4626) */\nexport const erc4626Abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        name: 'spender',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        name: 'value',\n        type: 'uint256',\n      },\n    ],\n    name: 'Approval',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: 'sender',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        name: 'receiver',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        name: 'assets',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        name: 'shares',\n        type: 'uint256',\n      },\n    ],\n    name: 'Deposit',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: 'from',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        name: 'to',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        name: 'value',\n        type: 'uint256',\n      },\n    ],\n    name: 'Transfer',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: 'sender',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        name: 'receiver',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        name: 'assets',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        name: 'shares',\n        type: 'uint256',\n      },\n    ],\n    name: 'Withdraw',\n    type: 'event',\n  },\n  {\n    inputs: [\n      {\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        name: 'spender',\n        type: 'address',\n      },\n    ],\n    name: 'allowance',\n    outputs: [\n      {\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'spender',\n        type: 'address',\n      },\n      {\n        name: 'amount',\n        type: 'uint256',\n      },\n    ],\n    name: 'approve',\n    outputs: [\n      {\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'asset',\n    outputs: [\n      {\n        name: 'assetTokenAddress',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'account',\n        type: 'address',\n      },\n    ],\n    name: 'balanceOf',\n    outputs: [\n      {\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'shares',\n        type: 'uint256',\n      },\n    ],\n    name: 'convertToAssets',\n    outputs: [\n      {\n        name: 'assets',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'assets',\n        type: 'uint256',\n      },\n    ],\n    name: 'convertToShares',\n    outputs: [\n      {\n        name: 'shares',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'assets',\n        type: 'uint256',\n      },\n      {\n        name: 'receiver',\n        type: 'address',\n      },\n    ],\n    name: 'deposit',\n    outputs: [\n      {\n        name: 'shares',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'caller',\n        type: 'address',\n      },\n    ],\n    name: 'maxDeposit',\n    outputs: [\n      {\n        name: 'maxAssets',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'caller',\n        type: 'address',\n      },\n    ],\n    name: 'maxMint',\n    outputs: [\n      {\n        name: 'maxShares',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'owner',\n        type: 'address',\n      },\n    ],\n    name: 'maxRedeem',\n    outputs: [\n      {\n        name: 'maxShares',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'owner',\n        type: 'address',\n      },\n    ],\n    name: 'maxWithdraw',\n    outputs: [\n      {\n        name: 'maxAssets',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'shares',\n        type: 'uint256',\n      },\n      {\n        name: 'receiver',\n        type: 'address',\n      },\n    ],\n    name: 'mint',\n    outputs: [\n      {\n        name: 'assets',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'assets',\n        type: 'uint256',\n      },\n    ],\n    name: 'previewDeposit',\n    outputs: [\n      {\n        name: 'shares',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'shares',\n        type: 'uint256',\n      },\n    ],\n    name: 'previewMint',\n    outputs: [\n      {\n        name: 'assets',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'shares',\n        type: 'uint256',\n      },\n    ],\n    name: 'previewRedeem',\n    outputs: [\n      {\n        name: 'assets',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'assets',\n        type: 'uint256',\n      },\n    ],\n    name: 'previewWithdraw',\n    outputs: [\n      {\n        name: 'shares',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'shares',\n        type: 'uint256',\n      },\n      {\n        name: 'receiver',\n        type: 'address',\n      },\n      {\n        name: 'owner',\n        type: 'address',\n      },\n    ],\n    name: 'redeem',\n    outputs: [\n      {\n        name: 'assets',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'totalAssets',\n    outputs: [\n      {\n        name: 'totalManagedAssets',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'totalSupply',\n    outputs: [\n      {\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'to',\n        type: 'address',\n      },\n      {\n        name: 'amount',\n        type: 'uint256',\n      },\n    ],\n    name: 'transfer',\n    outputs: [\n      {\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'from',\n        type: 'address',\n      },\n      {\n        name: 'to',\n        type: 'address',\n      },\n      {\n        name: 'amount',\n        type: 'uint256',\n      },\n    ],\n    name: 'transferFrom',\n    outputs: [\n      {\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'assets',\n        type: 'uint256',\n      },\n      {\n        name: 'receiver',\n        type: 'address',\n      },\n      {\n        name: 'owner',\n        type: 'address',\n      },\n    ],\n    name: 'withdraw',\n    outputs: [\n      {\n        name: 'shares',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n] as const\n"],"names":[],"mappings":"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;SAAG;;CAEjC;AAKH,MAAM,iCAAiC;IAC5C;QACE,QAAQ;YACN;gBACE,MAAM;gBACN,MAAM;;YAER;gBACE,MAAM;gBACN,MAAM;;YAER;gBACE,MAAM;gBACN,MAAM;;SAET;QACD,iBAAiB;QACjB,MAAM;;IAER;QACE,QAAQ;YACN;gBACE,MAAM;gBACN,MAAM;;YAER;gBACE,MAAM;gBACN,MAAM;;YAER;gBACE,MAAM;gBACN,MAAM;;SAET;QACD,SAAS;YACP;gBACE,MAAM;;SAET;QACD,iBAAiB;QACjB,MAAM;QACN,MAAM;;CAEA;AAGH,MAAM,WAAW;IACtB;QACE,MAAM;QACN,MAAM;QACN,QAAQ;YACN;gBACE,SAAS;gBACT,MAAM;gBACN,MAAM;;YAER;gBACE,SAAS;gBACT,MAAM;gBACN,MAAM;;YAER;gBACE,SAAS;gBACT,MAAM;gBACN,MAAM;;SAET;;IAEH;QACE,MAAM;QACN,MAAM;QACN,QAAQ;YACN;gBACE,SAAS;gBACT,MAAM;gBACN,MAAM;;YAER;gBACE,SAAS;gBACT,MAAM;gBACN,MAAM;;YAER;gBACE,SAAS;gBACT,MAAM;gBACN,MAAM;;SAET;;IAEH;QACE,MAAM;QACN,MAAM;QACN,iBAAiB;QACjB,QAAQ;YACN;gBACE,MAAM;gBACN,MAAM;;YAER;gBACE,MAAM;gBACN,MAAM;;SAET;QACD,SAAS;YACP;gBACE,MAAM;;SAET;;IAEH;QACE,MAAM;QACN,MAAM;QACN,iBAAiB;QACjB,QAAQ;YACN;gBACE,MAAM;gBACN,MAAM;;YAER;gBACE,MAAM;gBACN,MAAM;;SAET;QACD,SAAS;YACP;gBACE,MAAM;;SAET;;IAEH;QACE,MAAM;QACN,MAAM;QACN,iBAAiB;QACjB,QAAQ;YACN;gBACE,MAAM;gBACN,MAAM;;SAET;QACD,SAAS;YACP;gBACE,MAAM;;SAET;;IAEH;QACE,MAAM;QACN,MAAM;QACN,iBAAiB;QACjB,QAAQ,EAAE;QACV,SAAS;YACP;gBACE,MAAM;;SAET;;IAEH;QACE,MAAM;QACN,MAAM;QACN,iBAAiB;QACjB,QAAQ,EAAE;QACV,SAAS;YACP;gBACE,MAAM;;SAET;;IAEH;QACE,MAAM;QACN,MAAM;QACN,iBAAiB;QACjB,QAAQ,EAAE;QACV,SAAS;YACP;gBACE,MAAM;;SAET;;IAEH;QACE,MAAM;QACN,MAAM;QACN,iBAAiB;QACjB,QAAQ,EAAE;QACV,SAAS;YACP;gBACE,MAAM;;SAET;;IAEH;QACE,MAAM;QACN,MAAM;QACN,iBAAiB;QACjB,QAAQ;YACN;gBACE,MAAM;gBACN,MAAM;;YAER;gBACE,MAAM;gBACN,MAAM;;SAET;QACD,SAAS;YACP;gBACE,MAAM;;SAET;;IAEH;QACE,MAAM;QACN,MAAM;QACN,iBAAiB;QACjB,QAAQ;YACN;gBACE,MAAM;gBACN,MAAM;;YAER;gBACE,MAAM;gBACN,MAAM;;YAER;gBACE,MAAM;gBACN,MAAM;;SAET;QACD,SAAS;YACP;gBACE,MAAM;;SAET;;CAEK;AAMH,MAAM,mBAAmB;IAC9B;QACE,MAAM;QACN,MAAM;QACN,QAAQ;YACN;gBACE,SAAS;gBACT,MAAM;gBACN,MAAM;;YAER;gBACE,SAAS;gBACT,MAAM;gBACN,MAAM;;YAER;gBACE,SAAS;gBACT,MAAM;gBACN,MAAM;;SAET;;IAEH;QACE,MAAM;QACN,MAAM;QACN,QAAQ;YACN;gBACE,SAAS;gBACT,MAAM;gBACN,MAAM;;YAER;gBACE,SAAS;gBACT,MAAM;gBACN,MAAM;;YAER;gBACE,SAAS;gBACT,MAAM;gBACN,MAAM;;SAET;;IAEH;QACE,MAAM;QACN,MAAM;QACN,iBAAiB;QACjB,QAAQ;YACN;gBACE,MAAM;gBACN,MAAM;;YAER;gBACE,MAAM;gBACN,MAAM;;SAET;QACD,SAAS;YACP;gBACE,MAAM;;SAET;;IAEH;QACE,MAAM;QACN,MAAM;QACN,iBAAiB;QACjB,QAAQ;YACN;gBACE,MAAM;gBACN,MAAM;;YAER;gBACE,MAAM;gBACN,MAAM;;SAET;QACD,SAAS;YACP;gBACE,MAAM;;SAET;;IAEH;QACE,MAAM;QACN,MAAM;QACN,iBAAiB;QACjB,QAAQ;YACN;gBACE,MAAM;gBACN,MAAM;;SAET;QACD,SAAS;YACP;gBACE,MAAM;;SAET;;IAEH;QACE,MAAM;QACN,MAAM;QACN,iBAAiB;QACjB,QAAQ,EAAE;QACV,SAAS;YACP;gBACE,MAAM;;SAET;;IAEH;QACE,MAAM;QACN,MAAM;QACN,iBAAiB;QACjB,QAAQ,EAAE;QACV,SAAS;YACP;gBACE,MAAM;;SAET;;IAEH;QACE,MAAM;QACN,MAAM;QACN,iBAAiB;QACjB,QAAQ,EAAE;QACV,SAAS;YACP;gBACE,MAAM;;SAET;;IAEH;QACE,MAAM;QACN,MAAM;QACN,iBAAiB;QACjB,QAAQ,EAAE;QACV,SAAS;YACP;gBACE,MAAM;;SAET;;IAEH;QACE,MAAM;QACN,MAAM;QACN,iBAAiB;QACjB,QAAQ;YACN;gBACE,MAAM;gBACN,MAAM;;YAER;gBACE,MAAM;gBACN,MAAM;;SAET;QACD,SAAS;YACP;gBACE,MAAM;;SAET;;IAEH;QACE,MAAM;QACN,MAAM;QACN,iBAAiB;QACjB,QAAQ;YACN;gBACE,MAAM;gBACN,MAAM;;YAER;gBACE,MAAM;gBACN,MAAM;;YAER;gBACE,MAAM;gBACN,MAAM;;SAET;QACD,SAAS;YACP;gBACE,MAAM;;SAET;;CAEK;AAGH,MAAM,YAAY;IACvB;QACE,MAAM;QACN,MAAM;QACN,QAAQ;YACN;gBACE,SAAS;gBACT,MAAM;gBACN,MAAM;;YAER;gBACE,SAAS;gBACT,MAAM;gBACN,MAAM;;YAER;gBACE,SAAS;gBACT,MAAM;gBACN,MAAM;;SAET;;IAEH;QACE,MAAM;QACN,MAAM;QACN,QAAQ;YACN;gBACE,SAAS;gBACT,MAAM;gBACN,MAAM;;YAER;gBACE,SAAS;gBACT,MAAM;gBACN,MAAM;;YAER;gBACE,SAAS;gBACT,MAAM;gBACN,MAAM;;SAET;;IAEH;QACE,MAAM;QACN,MAAM;QACN,QAAQ;YACN;gBACE,SAAS;gBACT,MAAM;gBACN,MAAM;;YAER;gBACE,SAAS;gBACT,MAAM;gBACN,MAAM;;YAER;gBACE,SAAS;gBACT,MAAM;gBACN,MAAM;;SAET;;IAEH;QACE,MAAM;QACN,MAAM;QACN,iBAAiB;QACjB,QAAQ;YACN;gBACE,MAAM;gBACN,MAAM;;YAER;gBACE,MAAM;gBACN,MAAM;;SAET;QACD,SAAS,EAAE;;IAEb;QACE,MAAM;QACN,MAAM;QACN,iBAAiB;QACjB,QAAQ;YACN;gBACE,MAAM;gBACN,MAAM;;SAET;QACD,SAAS;YACP;gBACE,MAAM;;SAET;;IAEH;QACE,MAAM;QACN,MAAM;QACN,iBAAiB;QACjB,QAAQ;YACN;gBACE,MAAM;gBACN,MAAM;;SAET;QACD,SAAS;YACP;gBACE,MAAM;;SAET;;IAEH;QACE,MAAM;QACN,MAAM;QACN,iBAAiB;QACjB,QAAQ;YACN;gBACE,MAAM;gBACN,MAAM;;YAER;gBACE,MAAM;gBACN,MAAM;;SAET;QACD,SAAS;YACP;gBACE,MAAM;;SAET;;IAEH;QACE,MAAM;QACN,MAAM;QACN,iBAAiB;QACjB,QAAQ,EAAE;QACV,SAAS;YACP;gBACE,MAAM;;SAET;;IAEH;QACE,MAAM;QACN,MAAM;QACN,iBAAiB;QACjB,QAAQ;YACN;gBACE,MAAM;gBACN,MAAM;;SAET;QACD,SAAS;YACP;gBACE,MAAM;gBACN,MAAM;;SAET;;IAEH;QACE,MAAM;QACN,MAAM;QACN,iBAAiB;QACjB,QAAQ;YACN;gBACE,MAAM;gBACN,MAAM;;YAER;gBACE,MAAM;gBACN,MAAM;;YAER;gBACE,MAAM;gBACN,MAAM;;SAET;QACD,SAAS,EAAE;;IAEb;QACE,MAAM;QACN,MAAM;QACN,iBAAiB;QACjB,QAAQ;YACN;gBACE,MAAM;gBACN,MAAM;;YAER;gBACE,MAAM;gBACN,MAAM;;YAER;gBACE,MAAM;gBACN,MAAM;;YAER;gBACE,MAAM;gBACN,MAAM;;SAET;QACD,SAAS,EAAE;;IAEb;QACE,MAAM;QACN,MAAM;QACN,iBAAiB;QACjB,QAAQ;YACN;gBACE,MAAM;gBACN,MAAM;;YAER;gBACE,MAAM;gBACN,MAAM;;SAET;QACD,SAAS,EAAE;;IAEb;QACE,MAAM;QACN,MAAM;QACN,iBAAiB;QACjB,QAAQ,EAAE;QACV,SAAS;YACP;gBACE,MAAM;;SAET;;IAEH;QACE,MAAM;QACN,MAAM;QACN,iBAAiB;QACjB,QAAQ;YACN;gBACE,MAAM;gBACN,MAAM;;SAET;QACD,SAAS;YACP;gBACE,MAAM;;SAET;;IAEH;QACE,MAAM;QACN,MAAM;QACN,iBAAiB;QACjB,QAAQ;YACN;gBACE,MAAM;gBACN,MAAM;;YAER;gBACE,MAAM;gBACN,MAAM;;SAET;QACD,SAAS;YACP;gBACE,MAAM;gBACN,MAAM;;SAET;;IAEH;QACE,MAAM;QACN,MAAM;QACN,iBAAiB;QACjB,QAAQ;YACN;gBACE,MAAM;gBACN,MAAM;;SAET;QACD,SAAS;YACP;gBACE,MAAM;;SAET;;IAEH;QACE,MAAM;QACN,MAAM;QACN,iBAAiB;QACjB,QAAQ,EAAE;QACV,SAAS;YACP;gBACE,MAAM;;SAET;;IAEH;QACE,MAAM;QACN,MAAM;QACN,iBAAiB;QACjB,QAAQ;YACN;gBACE,MAAM;gBACN,MAAM;;YAER;gBACE,MAAM;gBACN,MAAM;;YAER;gBACE,MAAM;gBACN,MAAM;;SAET;QACD,SAAS,EAAE;;CAEL;AAGH,MAAM,aAAa;IACxB;QACE,WAAW;QACX,QAAQ;YACN;gBACE,SAAS;gBACT,MAAM;gBACN,MAAM;;YAER;gBACE,SAAS;gBACT,MAAM;gBACN,MAAM;;YAER;gBACE,SAAS;gBACT,MAAM;gBACN,MAAM;;SAET;QACD,MAAM;QACN,MAAM;;IAER;QACE,WAAW;QACX,QAAQ;YACN;gBACE,SAAS;gBACT,MAAM;gBACN,MAAM;;YAER;gBACE,SAAS;gBACT,MAAM;gBACN,MAAM;;YAER;gBACE,SAAS;gBACT,MAAM;gBACN,MAAM;;YAER;gBACE,SAAS;gBACT,MAAM;gBACN,MAAM;;SAET;QACD,MAAM;QACN,MAAM;;IAER;QACE,WAAW;QACX,QAAQ;YACN;gBACE,SAAS;gBACT,MAAM;gBACN,MAAM;;YAER;gBACE,SAAS;gBACT,MAAM;gBACN,MAAM;;YAER;gBACE,SAAS;gBACT,MAAM;gBACN,MAAM;;SAET;QACD,MAAM;QACN,MAAM;;IAER;QACE,WAAW;QACX,QAAQ;YACN;gBACE,SAAS;gBACT,MAAM;gBACN,MAAM;;YAER;gBACE,SAAS;gBACT,MAAM;gBACN,MAAM;;YAER;gBACE,SAAS;gBACT,MAAM;gBACN,MAAM;;YAER;gBACE,SAAS;gBACT,MAAM;gBACN,MAAM;;YAER;gBACE,SAAS;gBACT,MAAM;gBACN,MAAM;;SAET;QACD,MAAM;QACN,MAAM;;IAER;QACE,QAAQ;YACN;gBACE,MAAM;gBACN,MAAM;;YAER;gBACE,MAAM;gBACN,MAAM;;SAET;QACD,MAAM;QACN,SAAS;YACP;gBACE,MAAM;;SAET;QACD,iBAAiB;QACjB,MAAM;;IAER;QACE,QAAQ;YACN;gBACE,MAAM;gBACN,MAAM;;YAER;gBACE,MAAM;gBACN,MAAM;;SAET;QACD,MAAM;QACN,SAAS;YACP;gBACE,MAAM;;SAET;QACD,iBAAiB;QACjB,MAAM;;IAER;QACE,QAAQ,EAAE;QACV,MAAM;QACN,SAAS;YACP;gBACE,MAAM;gBACN,MAAM;;SAET;QACD,iBAAiB;QACjB,MAAM;;IAER;QACE,QAAQ;YACN;gBACE,MAAM;gBACN,MAAM;;SAET;QACD,MAAM;QACN,SAAS;YACP;gBACE,MAAM;;SAET;QACD,iBAAiB;QACjB,MAAM;;IAER;QACE,QAAQ;YACN;gBACE,MAAM;gBACN,MAAM;;SAET;QACD,MAAM;QACN,SAAS;YACP;gBACE,MAAM;gBACN,MAAM;;SAET;QACD,iBAAiB;QACjB,MAAM;;IAER;QACE,QAAQ;YACN;gBACE,MAAM;gBACN,MAAM;;SAET;QACD,MAAM;QACN,SAAS;YACP;gBACE,MAAM;gBACN,MAAM;;SAET;QACD,iBAAiB;QACjB,MAAM;;IAER;QACE,QAAQ;YACN;gBACE,MAAM;gBACN,MAAM;;YAER;gBACE,MAAM;gBACN,MAAM;;SAET;QACD,MAAM;QACN,SAAS;YACP;gBACE,MAAM;gBACN,MAAM;;SAET;QACD,iBAAiB;QACjB,MAAM;;IAER;QACE,QAAQ;YACN;gBACE,MAAM;gBACN,MAAM;;SAET;QACD,MAAM;QACN,SAAS;YACP;gBACE,MAAM;gBACN,MAAM;;SAET;QACD,iBAAiB;QACjB,MAAM;;IAER;QACE,QAAQ;YACN;gBACE,MAAM;gBACN,MAAM;;SAET;QACD,MAAM;QACN,SAAS;YACP;gBACE,MAAM;gBACN,MAAM;;SAET;QACD,iBAAiB;QACjB,MAAM;;IAER;QACE,QAAQ;YACN;gBACE,MAAM;gBACN,MAAM;;SAET;QACD,MAAM;QACN,SAAS;YACP;gBACE,MAAM;gBACN,MAAM;;SAET;QACD,iBAAiB;QACjB,MAAM;;IAER;QACE,QAAQ;YACN;gBACE,MAAM;gBACN,MAAM;;SAET;QACD,MAAM;QACN,SAAS;YACP;gBACE,MAAM;gBACN,MAAM;;SAET;QACD,iBAAiB;QACjB,MAAM;;IAER;QACE,QAAQ;YACN;gBACE,MAAM;gBACN,MAAM;;YAER;gBACE,MAAM;gBACN,MAAM;;SAET;QACD,MAAM;QACN,SAAS;YACP;gBACE,MAAM;gBACN,MAAM;;SAET;QACD,iBAAiB;QACjB,MAAM;;IAER;QACE,QAAQ;YACN;gBACE,MAAM;gBACN,MAAM;;SAET;QACD,MAAM;QACN,SAAS;YACP;gBACE,MAAM;gBACN,MAAM;;SAET;QACD,iBAAiB;QACjB,MAAM;;IAER;QACE,QAAQ;YACN;gBACE,MAAM;gBACN,MAAM;;SAET;QACD,MAAM;QACN,SAAS;YACP;gBACE,MAAM;gBACN,MAAM;;SAET;QACD,iBAAiB;QACjB,MAAM;;IAER;QACE,QAAQ;YACN;gBACE,MAAM;gBACN,MAAM;;SAET;QACD,MAAM;QACN,SAAS;YACP;gBACE,MAAM;gBACN,MAAM;;SAET;QACD,iBAAiB;QACjB,MAAM;;IAER;QACE,QAAQ;YACN;gBACE,MAAM;gBACN,MAAM;;SAET;QACD,MAAM;QACN,SAAS;YACP;gBACE,MAAM;gBACN,MAAM;;SAET;QACD,iBAAiB;QACjB,MAAM;;IAER;QACE,QAAQ;YACN;gBACE,MAAM;gBACN,MAAM;;YAER;gBACE,MAAM;gBACN,MAAM;;YAER;gBACE,MAAM;gBACN,MAAM;;SAET;QACD,MAAM;QACN,SAAS;YACP;gBACE,MAAM;gBACN,MAAM;;SAET;QACD,iBAAiB;QACjB,MAAM;;IAER;QACE,QAAQ,EAAE;QACV,MAAM;QACN,SAAS;YACP;gBACE,MAAM;gBACN,MAAM;;SAET;QACD,iBAAiB;QACjB,MAAM;;IAER;QACE,QAAQ,EAAE;QACV,MAAM;QACN,SAAS;YACP;gBACE,MAAM;;SAET;QACD,iBAAiB;QACjB,MAAM;;IAER;QACE,QAAQ;YACN;gBACE,MAAM;gBACN,MAAM;;YAER;gBACE,MAAM;gBACN,MAAM;;SAET;QACD,MAAM;QACN,SAAS;YACP;gBACE,MAAM;;SAET;QACD,iBAAiB;QACjB,MAAM;;IAER;QACE,QAAQ;YACN;gBACE,MAAM;gBACN,MAAM;;YAER;gBACE,MAAM;gBACN,MAAM;;YAER;gBACE,MAAM;gBACN,MAAM;;SAET;QACD,MAAM;QACN,SAAS;YACP;gBACE,MAAM;;SAET;QACD,iBAAiB;QACjB,MAAM;;IAER;QACE,QAAQ;YACN;gBACE,MAAM;gBACN,MAAM;;YAER;gBACE,MAAM;gBACN,MAAM;;YAER;gBACE,MAAM;gBACN,MAAM;;SAET;QACD,MAAM;QACN,SAAS;YACP;gBACE,MAAM;gBACN,MAAM;;SAET;QACD,iBAAiB;QACjB,MAAM;;CAEA"}},
    {"offset": {"line": 5392, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5397, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/constants/contract.ts"],"sourcesContent":["export const aggregate3Signature = '0x82ad56cb'\n"],"names":[],"mappings":";;;AAAO,MAAM,sBAAsB"}},
    {"offset": {"line": 5401, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5406, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/constants/contracts.ts"],"sourcesContent":["export const deploylessCallViaBytecodeBytecode =\n  '0x608060405234801561001057600080fd5b5060405161018e38038061018e83398101604081905261002f91610124565b6000808351602085016000f59050803b61004857600080fd5b6000808351602085016000855af16040513d6000823e81610067573d81fd5b3d81f35b634e487b7160e01b600052604160045260246000fd5b600082601f83011261009257600080fd5b81516001600160401b038111156100ab576100ab61006b565b604051601f8201601f19908116603f011681016001600160401b03811182821017156100d9576100d961006b565b6040528181528382016020018510156100f157600080fd5b60005b82811015610110576020818601810151838301820152016100f4565b506000918101602001919091529392505050565b6000806040838503121561013757600080fd5b82516001600160401b0381111561014d57600080fd5b61015985828601610081565b602085015190935090506001600160401b0381111561017757600080fd5b61018385828601610081565b915050925092905056fe'\n\nexport const deploylessCallViaFactoryBytecode =\n  '0x608060405234801561001057600080fd5b506040516102c03803806102c083398101604081905261002f916101e6565b836001600160a01b03163b6000036100e457600080836001600160a01b03168360405161005c9190610270565b6000604051808303816000865af19150503d8060008114610099576040519150601f19603f3d011682016040523d82523d6000602084013e61009e565b606091505b50915091508115806100b857506001600160a01b0386163b155b156100e1578060405163101bb98d60e01b81526004016100d8919061028c565b60405180910390fd5b50505b6000808451602086016000885af16040513d6000823e81610103573d81fd5b3d81f35b80516001600160a01b038116811461011e57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561015457818101518382015260200161013c565b50506000910152565b600082601f83011261016e57600080fd5b81516001600160401b0381111561018757610187610123565b604051601f8201601f19908116603f011681016001600160401b03811182821017156101b5576101b5610123565b6040528181528382016020018510156101cd57600080fd5b6101de826020830160208701610139565b949350505050565b600080600080608085870312156101fc57600080fd5b61020585610107565b60208601519094506001600160401b0381111561022157600080fd5b61022d8782880161015d565b93505061023c60408601610107565b60608601519092506001600160401b0381111561025857600080fd5b6102648782880161015d565b91505092959194509250565b60008251610282818460208701610139565b9190910192915050565b60208152600082518060208401526102ab816040850160208701610139565b601f01601f1916919091016040019291505056fe'\n\nexport const universalSignatureValidatorByteCode =\n  '0x608060405234801561001057600080fd5b5060405161069438038061069483398101604081905261002f9161051e565b600061003c848484610048565b9050806000526001601ff35b60007f64926492649264926492649264926492649264926492649264926492649264926100748361040c565b036101e7576000606080848060200190518101906100929190610577565b60405192955090935091506000906001600160a01b038516906100b69085906105dd565b6000604051808303816000865af19150503d80600081146100f3576040519150601f19603f3d011682016040523d82523d6000602084013e6100f8565b606091505b50509050876001600160a01b03163b60000361016057806101605760405162461bcd60e51b815260206004820152601e60248201527f5369676e617475726556616c696461746f723a206465706c6f796d656e74000060448201526064015b60405180910390fd5b604051630b135d3f60e11b808252906001600160a01b038a1690631626ba7e90610190908b9087906004016105f9565b602060405180830381865afa1580156101ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d19190610633565b6001600160e01b03191614945050505050610405565b6001600160a01b0384163b1561027a57604051630b135d3f60e11b808252906001600160a01b03861690631626ba7e9061022790879087906004016105f9565b602060405180830381865afa158015610244573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102689190610633565b6001600160e01b031916149050610405565b81516041146102df5760405162461bcd60e51b815260206004820152603a602482015260008051602061067483398151915260448201527f3a20696e76616c6964207369676e6174757265206c656e6774680000000000006064820152608401610157565b6102e7610425565b5060208201516040808401518451859392600091859190811061030c5761030c61065d565b016020015160f81c9050601b811480159061032b57508060ff16601c14155b1561038c5760405162461bcd60e51b815260206004820152603b602482015260008051602061067483398151915260448201527f3a20696e76616c6964207369676e617475726520762076616c756500000000006064820152608401610157565b60408051600081526020810180835289905260ff83169181019190915260608101849052608081018390526001600160a01b0389169060019060a0016020604051602081039080840390855afa1580156103ea573d6000803e3d6000fd5b505050602060405103516001600160a01b0316149450505050505b9392505050565b600060208251101561041d57600080fd5b508051015190565b60405180606001604052806003906020820280368337509192915050565b6001600160a01b038116811461045857600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561048c578181015183820152602001610474565b50506000910152565b600082601f8301126104a657600080fd5b81516001600160401b038111156104bf576104bf61045b565b604051601f8201601f19908116603f011681016001600160401b03811182821017156104ed576104ed61045b565b60405281815283820160200185101561050557600080fd5b610516826020830160208701610471565b949350505050565b60008060006060848603121561053357600080fd5b835161053e81610443565b6020850151604086015191945092506001600160401b0381111561056157600080fd5b61056d86828701610495565b9150509250925092565b60008060006060848603121561058c57600080fd5b835161059781610443565b60208501519093506001600160401b038111156105b357600080fd5b6105bf86828701610495565b604086015190935090506001600160401b0381111561056157600080fd5b600082516105ef818460208701610471565b9190910192915050565b828152604060208201526000825180604084015261061e816060850160208701610471565b601f01601f1916919091016060019392505050565b60006020828403121561064557600080fd5b81516001600160e01b03198116811461040557600080fd5b634e487b7160e01b600052603260045260246000fdfe5369676e617475726556616c696461746f72237265636f7665725369676e6572'\n"],"names":[],"mappings":";;;;;AAAO,MAAM,oCACX;AAEK,MAAM,mCACX;AAEK,MAAM,sCACX"}},
    {"offset": {"line": 5414, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5419, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/errors/chain.ts"],"sourcesContent":["import type { Chain } from '../types/chain.js'\n\nimport { BaseError } from './base.js'\n\nexport type ChainDoesNotSupportContractErrorType =\n  ChainDoesNotSupportContract & {\n    name: 'ChainDoesNotSupportContract'\n  }\nexport class ChainDoesNotSupportContract extends BaseError {\n  constructor({\n    blockNumber,\n    chain,\n    contract,\n  }: {\n    blockNumber?: bigint | undefined\n    chain: Chain\n    contract: { name: string; blockCreated?: number | undefined }\n  }) {\n    super(\n      `Chain \"${chain.name}\" does not support contract \"${contract.name}\".`,\n      {\n        metaMessages: [\n          'This could be due to any of the following:',\n          ...(blockNumber &&\n          contract.blockCreated &&\n          contract.blockCreated > blockNumber\n            ? [\n                `- The contract \"${contract.name}\" was not deployed until block ${contract.blockCreated} (current block ${blockNumber}).`,\n              ]\n            : [\n                `- The chain does not have the contract \"${contract.name}\" configured.`,\n              ]),\n        ],\n        name: 'ChainDoesNotSupportContract',\n      },\n    )\n  }\n}\n\nexport type ChainMismatchErrorType = ChainMismatchError & {\n  name: 'ChainMismatchError'\n}\nexport class ChainMismatchError extends BaseError {\n  constructor({\n    chain,\n    currentChainId,\n  }: {\n    chain: Chain\n    currentChainId: number\n  }) {\n    super(\n      `The current chain of the wallet (id: ${currentChainId}) does not match the target chain for the transaction (id: ${chain.id} – ${chain.name}).`,\n      {\n        metaMessages: [\n          `Current Chain ID:  ${currentChainId}`,\n          `Expected Chain ID: ${chain.id} – ${chain.name}`,\n        ],\n        name: 'ChainMismatchError',\n      },\n    )\n  }\n}\n\nexport type ChainNotFoundErrorType = ChainNotFoundError & {\n  name: 'ChainNotFoundError'\n}\nexport class ChainNotFoundError extends BaseError {\n  constructor() {\n    super(\n      [\n        'No chain was provided to the request.',\n        'Please provide a chain with the `chain` argument on the Action, or by supplying a `chain` to WalletClient.',\n      ].join('\\n'),\n      {\n        name: 'ChainNotFoundError',\n      },\n    )\n  }\n}\n\nexport type ClientChainNotConfiguredErrorType =\n  ClientChainNotConfiguredError & {\n    name: 'ClientChainNotConfiguredError'\n  }\nexport class ClientChainNotConfiguredError extends BaseError {\n  constructor() {\n    super('No chain was provided to the Client.', {\n      name: 'ClientChainNotConfiguredError',\n    })\n  }\n}\n\nexport type InvalidChainIdErrorType = InvalidChainIdError & {\n  name: 'InvalidChainIdError'\n}\nexport class InvalidChainIdError extends BaseError {\n  constructor({ chainId }: { chainId?: number | undefined }) {\n    super(\n      typeof chainId === 'number'\n        ? `Chain ID \"${chainId}\" is invalid.`\n        : 'Chain ID is invalid.',\n      { name: 'InvalidChainIdError' },\n    )\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;;AAQM,MAAO,oCAAoC,0IAAA,CAAA,YAAS;IACxD,YAAY,EACV,WAAW,EACX,KAAK,EACL,QAAQ,EAKT,CAAA;QACC,KAAK,CACH,CAAA,OAAA,EAAU,MAAM,IAAI,CAAA,6BAAA,EAAgC,SAAS,IAAI,CAAA,EAAA,CAAI,EACrE;YACE,cAAc;gBACZ;mBACI,eACJ,SAAS,YAAY,IACrB,SAAS,YAAY,GAAG,cACpB;oBACE,CAAA,gBAAA,EAAmB,SAAS,IAAI,CAAA,+BAAA,EAAkC,SAAS,YAAY,CAAA,gBAAA,EAAmB,YAAW,EAAA,CAAI;iBAC1H,GACD;oBACE,CAAA,wCAAA,EAA2C,SAAS,IAAI,CAAA,aAAA,CAAe;iBACxE;aACN;YACD,MAAM;;IAGZ;;AAMI,MAAO,2BAA2B,0IAAA,CAAA,YAAS;IAC/C,YAAY,EACV,KAAK,EACL,cAAc,EAIf,CAAA;QACC,KAAK,CACH,CAAA,qCAAA,EAAwC,eAAc,2DAAA,EAA8D,MAAM,EAAE,CAAA,GAAA,EAAM,MAAM,IAAI,CAAA,EAAA,CAAI,EAChJ;YACE,cAAc;gBACZ,CAAA,mBAAA,EAAsB,eAAc,CAAE;gBACtC,CAAA,mBAAA,EAAsB,MAAM,EAAE,CAAA,GAAA,EAAM,MAAM,IAAI,CAAA,CAAE;aACjD;YACD,MAAM;;IAGZ;;AAMI,MAAO,2BAA2B,0IAAA,CAAA,YAAS;IAC/C,aAAA;QACE,KAAK,CACH;YACE;YACA;SACD,CAAC,IAAI,CAAC,OACP;YACE,MAAM;;IAGZ;;AAOI,MAAO,sCAAsC,0IAAA,CAAA,YAAS;IAC1D,aAAA;QACE,KAAK,CAAC,wCAAwC;YAC5C,MAAM;;IAEV;;AAMI,MAAO,4BAA4B,0IAAA,CAAA,YAAS;IAChD,YAAY,EAAE,OAAO,EAAoC,CAAA;QACvD,KAAK,CACH,OAAO,YAAY,WACf,CAAA,UAAA,EAAa,QAAO,aAAA,CAAe,GACnC,wBACJ;YAAE,MAAM;QAAqB;IAEjC"}},
    {"offset": {"line": 5479, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5484, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/abi/encodeDeployData.ts"],"sourcesContent":["import type { Abi } from 'abitype'\n\nimport {\n  AbiConstructorNotFoundError,\n  type AbiConstructorNotFoundErrorType,\n  AbiConstructorParamsNotFoundError,\n} from '../../errors/abi.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ContractConstructorArgs } from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { UnionEvaluate } from '../../types/utils.js'\nimport { type ConcatHexErrorType, concatHex } from '../data/concat.js'\nimport {\n  type EncodeAbiParametersErrorType,\n  encodeAbiParameters,\n} from './encodeAbiParameters.js'\n\nconst docsPath = '/docs/contract/encodeDeployData'\n\nexport type EncodeDeployDataParameters<\n  abi extends Abi | readonly unknown[] = Abi,\n  ///\n  hasConstructor = abi extends Abi\n    ? Abi extends abi\n      ? true\n      : [Extract<abi[number], { type: 'constructor' }>] extends [never]\n        ? false\n        : true\n    : true,\n  allArgs = ContractConstructorArgs<abi>,\n> = {\n  abi: abi\n  bytecode: Hex\n} & UnionEvaluate<\n  hasConstructor extends false\n    ? { args?: undefined }\n    : readonly [] extends allArgs\n      ? { args?: allArgs | undefined }\n      : { args: allArgs }\n>\n\nexport type EncodeDeployDataReturnType = Hex\n\nexport type EncodeDeployDataErrorType =\n  | AbiConstructorNotFoundErrorType\n  | ConcatHexErrorType\n  | EncodeAbiParametersErrorType\n  | ErrorType\n\nexport function encodeDeployData<const abi extends Abi | readonly unknown[]>(\n  parameters: EncodeDeployDataParameters<abi>,\n): EncodeDeployDataReturnType {\n  const { abi, args, bytecode } = parameters as EncodeDeployDataParameters\n  if (!args || args.length === 0) return bytecode\n\n  const description = abi.find((x) => 'type' in x && x.type === 'constructor')\n  if (!description) throw new AbiConstructorNotFoundError({ docsPath })\n  if (!('inputs' in description))\n    throw new AbiConstructorParamsNotFoundError({ docsPath })\n  if (!description.inputs || description.inputs.length === 0)\n    throw new AbiConstructorParamsNotFoundError({ docsPath })\n\n  const data = encodeAbiParameters(description.inputs, args)\n  return concatHex([bytecode, data!])\n}\n"],"names":[],"mappings":";;;;;;;;;;AAiBA,MAAM,WAAW;AAgCX,SAAU,iBACd,UAA2C;IAE3C,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG;IAChC,IAAI,CAAC,QAAQ,KAAK,MAAM,KAAK,GAAG,OAAO;IAEvC,MAAM,cAAc,IAAI,IAAI,CAAC,CAAC,IAAM,UAAU,KAAK,EAAE,IAAI,KAAK;IAC9D,IAAI,CAAC,aAAa,MAAM,IAAI,yIAAA,CAAA,8BAA2B,CAAC;QAAE;IAAQ;IAClE,IAAI,CAAC,CAAC,YAAY,WAAW,GAC3B,MAAM,IAAI,yIAAA,CAAA,oCAAiC,CAAC;QAAE;IAAQ;IACxD,IAAI,CAAC,YAAY,MAAM,IAAI,YAAY,MAAM,CAAC,MAAM,KAAK,GACvD,MAAM,IAAI,yIAAA,CAAA,oCAAiC,CAAC;QAAE;IAAQ;IAExD,MAAM,OAAO,CAAA,GAAA,+JAAA,CAAA,sBAAmB,AAAnB,EAAoB,YAAY,MAAM,EAAE;IACrD,OAAO,CAAA,GAAA,mJAAA,CAAA,YAAS,AAAT,EAAU;QAAC;QAAU;KAAM;AACpC"}},
    {"offset": {"line": 5514, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5519, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/chain/getChainContractAddress.ts"],"sourcesContent":["import {\n  ChainDoesNotSupportContract,\n  type ChainDoesNotSupportContractErrorType,\n} from '../../errors/chain.js'\nimport type { Chain, ChainContract } from '../../types/chain.js'\n\nexport type GetChainContractAddressErrorType =\n  ChainDoesNotSupportContractErrorType\n\nexport function getChainContractAddress({\n  blockNumber,\n  chain,\n  contract: name,\n}: {\n  blockNumber?: bigint | undefined\n  chain: Chain\n  contract: string\n}) {\n  const contract = (chain?.contracts as Record<string, ChainContract>)?.[name]\n  if (!contract)\n    throw new ChainDoesNotSupportContract({\n      chain,\n      contract: { name },\n    })\n\n  if (\n    blockNumber &&\n    contract.blockCreated &&\n    contract.blockCreated > blockNumber\n  )\n    throw new ChainDoesNotSupportContract({\n      blockNumber,\n      chain,\n      contract: {\n        name,\n        blockCreated: contract.blockCreated,\n      },\n    })\n\n  return contract.address\n}\n"],"names":[],"mappings":";;;;;;AASM,SAAU,wBAAwB,EACtC,WAAW,EACX,KAAK,EACL,UAAU,IAAI,EAKf;IACC,MAAM,WAAY,OAAO,WAA6C,CAAC,KAAK;IAC5E,IAAI,CAAC,UACH,MAAM,IAAI,2IAAA,CAAA,8BAA2B,CAAC;QACpC;QACA,UAAU;YAAE;QAAI;;IAGpB,IACE,eACA,SAAS,YAAY,IACrB,SAAS,YAAY,GAAG,aAExB,MAAM,IAAI,2IAAA,CAAA,8BAA2B,CAAC;QACpC;QACA;QACA,UAAU;YACR;YACA,cAAc,SAAS,YAAY;;;IAIzC,OAAO,SAAS,OAAO;AACzB"}},
    {"offset": {"line": 5543, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5548, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/errors/node.ts"],"sourcesContent":["import { formatGwei } from '../utils/unit/formatGwei.js'\n\nimport { BaseError } from './base.js'\n\n/**\n * geth:    https://github.com/ethereum/go-ethereum/blob/master/core/error.go\n *          https://github.com/ethereum/go-ethereum/blob/master/core/types/transaction.go#L34-L41\n *\n * erigon:  https://github.com/ledgerwatch/erigon/blob/master/core/error.go\n *          https://github.com/ledgerwatch/erigon/blob/master/core/types/transaction.go#L41-L46\n *\n * anvil:   https://github.com/foundry-rs/foundry/blob/master/anvil/src/eth/error.rs#L108\n */\nexport type ExecutionRevertedErrorType = ExecutionRevertedError & {\n  code: 3\n  name: 'ExecutionRevertedError'\n}\nexport class ExecutionRevertedError extends BaseError {\n  static code = 3\n  static nodeMessage = /execution reverted/\n\n  constructor({\n    cause,\n    message,\n  }: { cause?: BaseError | undefined; message?: string | undefined } = {}) {\n    const reason = message\n      ?.replace('execution reverted: ', '')\n      ?.replace('execution reverted', '')\n    super(\n      `Execution reverted ${\n        reason ? `with reason: ${reason}` : 'for an unknown reason'\n      }.`,\n      {\n        cause,\n        name: 'ExecutionRevertedError',\n      },\n    )\n  }\n}\n\nexport type FeeCapTooHighErrorType = FeeCapTooHighError & {\n  name: 'FeeCapTooHighError'\n}\nexport class FeeCapTooHighError extends BaseError {\n  static nodeMessage =\n    /max fee per gas higher than 2\\^256-1|fee cap higher than 2\\^256-1/\n  constructor({\n    cause,\n    maxFeePerGas,\n  }: {\n    cause?: BaseError | undefined\n    maxFeePerGas?: bigint | undefined\n  } = {}) {\n    super(\n      `The fee cap (\\`maxFeePerGas\\`${\n        maxFeePerGas ? ` = ${formatGwei(maxFeePerGas)} gwei` : ''\n      }) cannot be higher than the maximum allowed value (2^256-1).`,\n      {\n        cause,\n        name: 'FeeCapTooHighError',\n      },\n    )\n  }\n}\n\nexport type FeeCapTooLowErrorType = FeeCapTooLowError & {\n  name: 'FeeCapTooLowError'\n}\nexport class FeeCapTooLowError extends BaseError {\n  static nodeMessage =\n    /max fee per gas less than block base fee|fee cap less than block base fee|transaction is outdated/\n  constructor({\n    cause,\n    maxFeePerGas,\n  }: {\n    cause?: BaseError | undefined\n    maxFeePerGas?: bigint | undefined\n  } = {}) {\n    super(\n      `The fee cap (\\`maxFeePerGas\\`${\n        maxFeePerGas ? ` = ${formatGwei(maxFeePerGas)}` : ''\n      } gwei) cannot be lower than the block base fee.`,\n      {\n        cause,\n        name: 'FeeCapTooLowError',\n      },\n    )\n  }\n}\n\nexport type NonceTooHighErrorType = NonceTooHighError & {\n  name: 'NonceTooHighError'\n}\nexport class NonceTooHighError extends BaseError {\n  static nodeMessage = /nonce too high/\n  constructor({\n    cause,\n    nonce,\n  }: { cause?: BaseError | undefined; nonce?: number | undefined } = {}) {\n    super(\n      `Nonce provided for the transaction ${\n        nonce ? `(${nonce}) ` : ''\n      }is higher than the next one expected.`,\n      { cause, name: 'NonceTooHighError' },\n    )\n  }\n}\n\nexport type NonceTooLowErrorType = NonceTooLowError & {\n  name: 'NonceTooLowError'\n}\nexport class NonceTooLowError extends BaseError {\n  static nodeMessage =\n    /nonce too low|transaction already imported|already known/\n  constructor({\n    cause,\n    nonce,\n  }: { cause?: BaseError | undefined; nonce?: number | undefined } = {}) {\n    super(\n      [\n        `Nonce provided for the transaction ${\n          nonce ? `(${nonce}) ` : ''\n        }is lower than the current nonce of the account.`,\n        'Try increasing the nonce or find the latest nonce with `getTransactionCount`.',\n      ].join('\\n'),\n      { cause, name: 'NonceTooLowError' },\n    )\n  }\n}\n\nexport type NonceMaxValueErrorType = NonceMaxValueError & {\n  name: 'NonceMaxValueError'\n}\nexport class NonceMaxValueError extends BaseError {\n  static nodeMessage = /nonce has max value/\n  constructor({\n    cause,\n    nonce,\n  }: { cause?: BaseError | undefined; nonce?: number | undefined } = {}) {\n    super(\n      `Nonce provided for the transaction ${\n        nonce ? `(${nonce}) ` : ''\n      }exceeds the maximum allowed nonce.`,\n      { cause, name: 'NonceMaxValueError' },\n    )\n  }\n}\n\nexport type InsufficientFundsErrorType = InsufficientFundsError & {\n  name: 'InsufficientFundsError'\n}\nexport class InsufficientFundsError extends BaseError {\n  static nodeMessage =\n    /insufficient funds|exceeds transaction sender account balance/\n  constructor({ cause }: { cause?: BaseError | undefined } = {}) {\n    super(\n      [\n        'The total cost (gas * gas fee + value) of executing this transaction exceeds the balance of the account.',\n      ].join('\\n'),\n      {\n        cause,\n        metaMessages: [\n          'This error could arise when the account does not have enough funds to:',\n          ' - pay for the total gas fee,',\n          ' - pay for the value to send.',\n          ' ',\n          'The cost of the transaction is calculated as `gas * gas fee + value`, where:',\n          ' - `gas` is the amount of gas needed for transaction to execute,',\n          ' - `gas fee` is the gas fee,',\n          ' - `value` is the amount of ether to send to the recipient.',\n        ],\n        name: 'InsufficientFundsError',\n      },\n    )\n  }\n}\n\nexport type IntrinsicGasTooHighErrorType = IntrinsicGasTooHighError & {\n  name: 'IntrinsicGasTooHighError'\n}\nexport class IntrinsicGasTooHighError extends BaseError {\n  static nodeMessage = /intrinsic gas too high|gas limit reached/\n  constructor({\n    cause,\n    gas,\n  }: { cause?: BaseError | undefined; gas?: bigint | undefined } = {}) {\n    super(\n      `The amount of gas ${\n        gas ? `(${gas}) ` : ''\n      }provided for the transaction exceeds the limit allowed for the block.`,\n      {\n        cause,\n        name: 'IntrinsicGasTooHighError',\n      },\n    )\n  }\n}\n\nexport type IntrinsicGasTooLowErrorType = IntrinsicGasTooLowError & {\n  name: 'IntrinsicGasTooLowError'\n}\nexport class IntrinsicGasTooLowError extends BaseError {\n  static nodeMessage = /intrinsic gas too low/\n  constructor({\n    cause,\n    gas,\n  }: { cause?: BaseError | undefined; gas?: bigint | undefined } = {}) {\n    super(\n      `The amount of gas ${\n        gas ? `(${gas}) ` : ''\n      }provided for the transaction is too low.`,\n      {\n        cause,\n        name: 'IntrinsicGasTooLowError',\n      },\n    )\n  }\n}\n\nexport type TransactionTypeNotSupportedErrorType =\n  TransactionTypeNotSupportedError & {\n    name: 'TransactionTypeNotSupportedError'\n  }\nexport class TransactionTypeNotSupportedError extends BaseError {\n  static nodeMessage = /transaction type not valid/\n  constructor({ cause }: { cause?: BaseError | undefined }) {\n    super('The transaction type is not supported for this chain.', {\n      cause,\n      name: 'TransactionTypeNotSupportedError',\n    })\n  }\n}\n\nexport type TipAboveFeeCapErrorType = TipAboveFeeCapError & {\n  name: 'TipAboveFeeCapError'\n}\nexport class TipAboveFeeCapError extends BaseError {\n  static nodeMessage =\n    /max priority fee per gas higher than max fee per gas|tip higher than fee cap/\n  constructor({\n    cause,\n    maxPriorityFeePerGas,\n    maxFeePerGas,\n  }: {\n    cause?: BaseError | undefined\n    maxPriorityFeePerGas?: bigint | undefined\n    maxFeePerGas?: bigint | undefined\n  } = {}) {\n    super(\n      [\n        `The provided tip (\\`maxPriorityFeePerGas\\`${\n          maxPriorityFeePerGas\n            ? ` = ${formatGwei(maxPriorityFeePerGas)} gwei`\n            : ''\n        }) cannot be higher than the fee cap (\\`maxFeePerGas\\`${\n          maxFeePerGas ? ` = ${formatGwei(maxFeePerGas)} gwei` : ''\n        }).`,\n      ].join('\\n'),\n      {\n        cause,\n        name: 'TipAboveFeeCapError',\n      },\n    )\n  }\n}\n\nexport type UnknownNodeErrorType = UnknownNodeError & {\n  name: 'UnknownNodeError'\n}\nexport class UnknownNodeError extends BaseError {\n  constructor({ cause }: { cause?: BaseError | undefined }) {\n    super(`An error occurred while executing: ${cause?.shortMessage}`, {\n      cause,\n      name: 'UnknownNodeError',\n    })\n  }\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 5753, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5758, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/errors/getNodeError.ts"],"sourcesContent":["import type { SendTransactionParameters } from '../../actions/wallet/sendTransaction.js'\nimport { BaseError } from '../../errors/base.js'\nimport {\n  ExecutionRevertedError,\n  type ExecutionRevertedErrorType,\n  FeeCapTooHighError,\n  type FeeCapTooHighErrorType,\n  FeeCapTooLowError,\n  type FeeCapTooLowErrorType,\n  InsufficientFundsError,\n  type InsufficientFundsErrorType,\n  IntrinsicGasTooHighError,\n  type IntrinsicGasTooHighErrorType,\n  IntrinsicGasTooLowError,\n  type IntrinsicGasTooLowErrorType,\n  NonceMaxValueError,\n  type NonceMaxValueErrorType,\n  NonceTooHighError,\n  type NonceTooHighErrorType,\n  NonceTooLowError,\n  type NonceTooLowErrorType,\n  TipAboveFeeCapError,\n  type TipAboveFeeCapErrorType,\n  TransactionTypeNotSupportedError,\n  type TransactionTypeNotSupportedErrorType,\n  UnknownNodeError,\n  type UnknownNodeErrorType,\n} from '../../errors/node.js'\nimport { RpcRequestError } from '../../errors/request.js'\nimport {\n  InvalidInputRpcError,\n  TransactionRejectedRpcError,\n} from '../../errors/rpc.js'\nimport type { ExactPartial } from '../../types/utils.js'\n\nexport function containsNodeError(err: BaseError) {\n  return (\n    err instanceof TransactionRejectedRpcError ||\n    err instanceof InvalidInputRpcError ||\n    (err instanceof RpcRequestError && err.code === ExecutionRevertedError.code)\n  )\n}\n\nexport type GetNodeErrorParameters = ExactPartial<\n  SendTransactionParameters<any>\n>\n\nexport type GetNodeErrorReturnType =\n  | ExecutionRevertedErrorType\n  | FeeCapTooHighErrorType\n  | FeeCapTooLowErrorType\n  | NonceTooHighErrorType\n  | NonceTooLowErrorType\n  | NonceMaxValueErrorType\n  | InsufficientFundsErrorType\n  | IntrinsicGasTooHighErrorType\n  | IntrinsicGasTooLowErrorType\n  | TransactionTypeNotSupportedErrorType\n  | TipAboveFeeCapErrorType\n  | UnknownNodeErrorType\n\nexport function getNodeError(\n  err: BaseError,\n  args: GetNodeErrorParameters,\n): GetNodeErrorReturnType {\n  const message = (err.details || '').toLowerCase()\n\n  const executionRevertedError =\n    err instanceof BaseError\n      ? err.walk(\n          (e) =>\n            (e as { code: number } | null | undefined)?.code ===\n            ExecutionRevertedError.code,\n        )\n      : err\n  if (executionRevertedError instanceof BaseError)\n    return new ExecutionRevertedError({\n      cause: err,\n      message: executionRevertedError.details,\n    }) as any\n  if (ExecutionRevertedError.nodeMessage.test(message))\n    return new ExecutionRevertedError({\n      cause: err,\n      message: err.details,\n    }) as any\n  if (FeeCapTooHighError.nodeMessage.test(message))\n    return new FeeCapTooHighError({\n      cause: err,\n      maxFeePerGas: args?.maxFeePerGas,\n    }) as any\n  if (FeeCapTooLowError.nodeMessage.test(message))\n    return new FeeCapTooLowError({\n      cause: err,\n      maxFeePerGas: args?.maxFeePerGas,\n    }) as any\n  if (NonceTooHighError.nodeMessage.test(message))\n    return new NonceTooHighError({ cause: err, nonce: args?.nonce }) as any\n  if (NonceTooLowError.nodeMessage.test(message))\n    return new NonceTooLowError({ cause: err, nonce: args?.nonce }) as any\n  if (NonceMaxValueError.nodeMessage.test(message))\n    return new NonceMaxValueError({ cause: err, nonce: args?.nonce }) as any\n  if (InsufficientFundsError.nodeMessage.test(message))\n    return new InsufficientFundsError({ cause: err }) as any\n  if (IntrinsicGasTooHighError.nodeMessage.test(message))\n    return new IntrinsicGasTooHighError({ cause: err, gas: args?.gas }) as any\n  if (IntrinsicGasTooLowError.nodeMessage.test(message))\n    return new IntrinsicGasTooLowError({ cause: err, gas: args?.gas }) as any\n  if (TransactionTypeNotSupportedError.nodeMessage.test(message))\n    return new TransactionTypeNotSupportedError({ cause: err }) as any\n  if (TipAboveFeeCapError.nodeMessage.test(message))\n    return new TipAboveFeeCapError({\n      cause: err,\n      maxFeePerGas: args?.maxFeePerGas,\n      maxPriorityFeePerGas: args?.maxPriorityFeePerGas,\n    }) as any\n  return new UnknownNodeError({\n    cause: err,\n  }) as any\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAmCM,SAAU,kBAAkB,GAAc;IAC9C,OACE,eAAe,yIAAA,CAAA,8BAA2B,IAC1C,eAAe,yIAAA,CAAA,uBAAoB,IAClC,eAAe,6IAAA,CAAA,kBAAe,IAAI,IAAI,IAAI,KAAK,0IAAA,CAAA,yBAAsB,CAAC,IAAI;AAE/E;AAoBM,SAAU,aACd,GAAc,EACd,IAA4B;IAE5B,MAAM,UAAU,CAAC,IAAI,OAAO,IAAI,EAAE,EAAE,WAAW;IAE/C,MAAM,yBACJ,eAAe,0IAAA,CAAA,YAAS,GACpB,IAAI,IAAI,CACN,CAAC,IACE,GAA2C,SAC5C,0IAAA,CAAA,yBAAsB,CAAC,IAAI,IAE/B;IACN,IAAI,kCAAkC,0IAAA,CAAA,YAAS,EAC7C,OAAO,IAAI,0IAAA,CAAA,yBAAsB,CAAC;QAChC,OAAO;QACP,SAAS,uBAAuB,OAAO;;IAE3C,IAAI,0IAAA,CAAA,yBAAsB,CAAC,WAAW,CAAC,IAAI,CAAC,UAC1C,OAAO,IAAI,0IAAA,CAAA,yBAAsB,CAAC;QAChC,OAAO;QACP,SAAS,IAAI,OAAO;;IAExB,IAAI,0IAAA,CAAA,qBAAkB,CAAC,WAAW,CAAC,IAAI,CAAC,UACtC,OAAO,IAAI,0IAAA,CAAA,qBAAkB,CAAC;QAC5B,OAAO;QACP,cAAc,MAAM;;IAExB,IAAI,0IAAA,CAAA,oBAAiB,CAAC,WAAW,CAAC,IAAI,CAAC,UACrC,OAAO,IAAI,0IAAA,CAAA,oBAAiB,CAAC;QAC3B,OAAO;QACP,cAAc,MAAM;;IAExB,IAAI,0IAAA,CAAA,oBAAiB,CAAC,WAAW,CAAC,IAAI,CAAC,UACrC,OAAO,IAAI,0IAAA,CAAA,oBAAiB,CAAC;QAAE,OAAO;QAAK,OAAO,MAAM;IAAK;IAC/D,IAAI,0IAAA,CAAA,mBAAgB,CAAC,WAAW,CAAC,IAAI,CAAC,UACpC,OAAO,IAAI,0IAAA,CAAA,mBAAgB,CAAC;QAAE,OAAO;QAAK,OAAO,MAAM;IAAK;IAC9D,IAAI,0IAAA,CAAA,qBAAkB,CAAC,WAAW,CAAC,IAAI,CAAC,UACtC,OAAO,IAAI,0IAAA,CAAA,qBAAkB,CAAC;QAAE,OAAO;QAAK,OAAO,MAAM;IAAK;IAChE,IAAI,0IAAA,CAAA,yBAAsB,CAAC,WAAW,CAAC,IAAI,CAAC,UAC1C,OAAO,IAAI,0IAAA,CAAA,yBAAsB,CAAC;QAAE,OAAO;IAAG;IAChD,IAAI,0IAAA,CAAA,2BAAwB,CAAC,WAAW,CAAC,IAAI,CAAC,UAC5C,OAAO,IAAI,0IAAA,CAAA,2BAAwB,CAAC;QAAE,OAAO;QAAK,KAAK,MAAM;IAAG;IAClE,IAAI,0IAAA,CAAA,0BAAuB,CAAC,WAAW,CAAC,IAAI,CAAC,UAC3C,OAAO,IAAI,0IAAA,CAAA,0BAAuB,CAAC;QAAE,OAAO;QAAK,KAAK,MAAM;IAAG;IACjE,IAAI,0IAAA,CAAA,mCAAgC,CAAC,WAAW,CAAC,IAAI,CAAC,UACpD,OAAO,IAAI,0IAAA,CAAA,mCAAgC,CAAC;QAAE,OAAO;IAAG;IAC1D,IAAI,0IAAA,CAAA,sBAAmB,CAAC,WAAW,CAAC,IAAI,CAAC,UACvC,OAAO,IAAI,0IAAA,CAAA,sBAAmB,CAAC;QAC7B,OAAO;QACP,cAAc,MAAM;QACpB,sBAAsB,MAAM;;IAEhC,OAAO,IAAI,0IAAA,CAAA,mBAAgB,CAAC;QAC1B,OAAO;;AAEX"}},
    {"offset": {"line": 5828, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5833, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/errors/getCallError.ts"],"sourcesContent":["import type { CallParameters } from '../../actions/public/call.js'\nimport type { BaseError } from '../../errors/base.js'\nimport {\n  CallExecutionError,\n  type CallExecutionErrorType,\n} from '../../errors/contract.js'\nimport { UnknownNodeError } from '../../errors/node.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\n\nimport {\n  type GetNodeErrorParameters,\n  type GetNodeErrorReturnType,\n  getNodeError,\n} from './getNodeError.js'\n\nexport type GetCallErrorReturnType<cause = ErrorType> = Omit<\n  CallExecutionErrorType,\n  'cause'\n> & {\n  cause: cause | GetNodeErrorReturnType\n}\n\nexport function getCallError<err extends ErrorType<string>>(\n  err: err,\n  {\n    docsPath,\n    ...args\n  }: CallParameters & {\n    chain?: Chain | undefined\n    docsPath?: string | undefined\n  },\n): GetCallErrorReturnType<err> {\n  const cause = (() => {\n    const cause = getNodeError(\n      err as {} as BaseError,\n      args as GetNodeErrorParameters,\n    )\n    if (cause instanceof UnknownNodeError) return err as {} as BaseError\n    return cause\n  })()\n  return new CallExecutionError(cause, {\n    docsPath,\n    ...args,\n  }) as GetCallErrorReturnType<err>\n}\n"],"names":[],"mappings":";;;;;;;;;;AAuBM,SAAU,aACd,GAAQ,EACR,EACE,QAAQ,EACR,GAAG,MAIJ;IAED,MAAM,QAAQ,CAAC;QACb,MAAM,QAAQ,CAAA,GAAA,2JAAA,CAAA,eAAY,AAAZ,EACZ,KACA;QAEF,IAAI,iBAAiB,0IAAA,CAAA,mBAAgB,EAAE,OAAO;QAC9C,OAAO;IACT,CAAC;IACD,OAAO,IAAI,8IAAA,CAAA,qBAAkB,CAAC,OAAO;QACnC;QACA,GAAG,IAAI;;AAEX"}},
    {"offset": {"line": 5854, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5859, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/formatters/extract.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\nimport type { ChainFormatter } from '../../types/chain.js'\n\nexport type ExtractErrorType = ErrorType\n\n/**\n * @description Picks out the keys from `value` that exist in the formatter..\n */\nexport function extract(\n  value_: Record<string, unknown>,\n  { format }: { format?: ChainFormatter['format'] | undefined },\n) {\n  if (!format) return {}\n\n  const value: Record<string, unknown> = {}\n  function extract_(formatted: Record<string, any>) {\n    const keys = Object.keys(formatted)\n    for (const key of keys) {\n      if (key in value_) value[key] = value_[key]\n      if (\n        formatted[key] &&\n        typeof formatted[key] === 'object' &&\n        !Array.isArray(formatted[key])\n      )\n        extract_(formatted[key])\n    }\n  }\n\n  const formatted = format(value_ || {})\n  extract_(formatted)\n\n  return value\n}\n"],"names":[],"mappings":"AAKA;;;;;AAGM,SAAU,QACd,MAA+B,EAC/B,EAAE,MAAM,EAAqD;IAE7D,IAAI,CAAC,QAAQ,OAAO,CAAA;IAEpB,MAAM,QAAiC,CAAA;IACvC,SAAS,SAAS,SAA8B;QAC9C,MAAM,OAAO,OAAO,IAAI,CAAC;QACzB,KAAK,MAAM,OAAO,KAAM;YACtB,IAAI,OAAO,QAAQ,KAAK,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI;YAC3C,IACE,SAAS,CAAC,IAAI,IACd,OAAO,SAAS,CAAC,IAAI,KAAK,YAC1B,CAAC,MAAM,OAAO,CAAC,SAAS,CAAC,IAAI,GAE7B,SAAS,SAAS,CAAC,IAAI;QAC3B;IACF;IAEA,MAAM,YAAY,OAAO,UAAU,CAAA;IACnC,SAAS;IAET,OAAO;AACT"}},
    {"offset": {"line": 5878, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5883, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/formatters/formatter.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\nimport type { Prettify } from '../../types/utils.js'\n\nexport type DefineFormatterErrorType = ErrorType\n\nexport function defineFormatter<type extends string, parameters, returnType>(\n  type: type,\n  format: (_: parameters) => returnType,\n) {\n  return <\n    parametersOverride,\n    returnTypeOverride,\n    exclude extends (keyof parameters | keyof parametersOverride)[] = [],\n  >({\n    exclude,\n    format: overrides,\n  }: {\n    exclude?: exclude | undefined\n    format: (_: parametersOverride) => returnTypeOverride\n  }) => {\n    return {\n      exclude,\n      format: (args: parametersOverride) => {\n        const formatted = format(args as any)\n        if (exclude) {\n          for (const key of exclude) {\n            delete (formatted as any)[key]\n          }\n        }\n        return {\n          ...formatted,\n          ...overrides(args),\n        } as Prettify<returnTypeOverride> & {\n          [_key in exclude[number]]: never\n        }\n      },\n      type,\n    }\n  }\n}\n"],"names":[],"mappings":";;;AAKM,SAAU,gBACd,IAAU,EACV,MAAqC;IAErC,OAAO,CAIL,EACA,OAAO,EACP,QAAQ,SAAS,EAIlB;QACC,OAAO;YACL;YACA,QAAQ,CAAC;gBACP,MAAM,YAAY,OAAO;gBACzB,IAAI,SAAS;oBACX,KAAK,MAAM,OAAO,QAAS;wBACzB,OAAQ,SAAiB,CAAC,IAAI;oBAChC;gBACF;gBACA,OAAO;oBACL,GAAG,SAAS;oBACZ,GAAG,UAAU,KAAK;;YAItB;YACA;;IAEJ;AACF"}},
    {"offset": {"line": 5906, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5911, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/formatters/transactionRequest.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\nimport type { AuthorizationList } from '../../experimental/eip7702/types/authorization.js'\nimport type { RpcAuthorizationList } from '../../experimental/eip7702/types/rpc.js'\nimport type {\n  Chain,\n  ExtractChainFormatterParameters,\n} from '../../types/chain.js'\nimport type { ByteArray } from '../../types/misc.js'\nimport type { RpcTransactionRequest } from '../../types/rpc.js'\nimport type { TransactionRequest } from '../../types/transaction.js'\nimport type { ExactPartial } from '../../types/utils.js'\nimport { bytesToHex, numberToHex } from '../encoding/toHex.js'\nimport { type DefineFormatterErrorType, defineFormatter } from './formatter.js'\n\nexport type FormattedTransactionRequest<\n  chain extends Chain | undefined = Chain | undefined,\n> = ExtractChainFormatterParameters<\n  chain,\n  'transactionRequest',\n  TransactionRequest\n>\n\nexport const rpcTransactionType = {\n  legacy: '0x0',\n  eip2930: '0x1',\n  eip1559: '0x2',\n  eip4844: '0x3',\n  eip7702: '0x4',\n} as const\n\nexport type FormatTransactionRequestErrorType = ErrorType\n\nexport function formatTransactionRequest(\n  request: ExactPartial<TransactionRequest>,\n) {\n  const rpcRequest = {} as RpcTransactionRequest\n\n  if (typeof request.authorizationList !== 'undefined')\n    rpcRequest.authorizationList = formatAuthorizationList(\n      request.authorizationList,\n    )\n  if (typeof request.accessList !== 'undefined')\n    rpcRequest.accessList = request.accessList\n  if (typeof request.blobVersionedHashes !== 'undefined')\n    rpcRequest.blobVersionedHashes = request.blobVersionedHashes\n  if (typeof request.blobs !== 'undefined') {\n    if (typeof request.blobs[0] !== 'string')\n      rpcRequest.blobs = (request.blobs as ByteArray[]).map((x) =>\n        bytesToHex(x),\n      )\n    else rpcRequest.blobs = request.blobs\n  }\n  if (typeof request.data !== 'undefined') rpcRequest.data = request.data\n  if (typeof request.from !== 'undefined') rpcRequest.from = request.from\n  if (typeof request.gas !== 'undefined')\n    rpcRequest.gas = numberToHex(request.gas)\n  if (typeof request.gasPrice !== 'undefined')\n    rpcRequest.gasPrice = numberToHex(request.gasPrice)\n  if (typeof request.maxFeePerBlobGas !== 'undefined')\n    rpcRequest.maxFeePerBlobGas = numberToHex(request.maxFeePerBlobGas)\n  if (typeof request.maxFeePerGas !== 'undefined')\n    rpcRequest.maxFeePerGas = numberToHex(request.maxFeePerGas)\n  if (typeof request.maxPriorityFeePerGas !== 'undefined')\n    rpcRequest.maxPriorityFeePerGas = numberToHex(request.maxPriorityFeePerGas)\n  if (typeof request.nonce !== 'undefined')\n    rpcRequest.nonce = numberToHex(request.nonce)\n  if (typeof request.to !== 'undefined') rpcRequest.to = request.to\n  if (typeof request.type !== 'undefined')\n    rpcRequest.type = rpcTransactionType[request.type]\n  if (typeof request.value !== 'undefined')\n    rpcRequest.value = numberToHex(request.value)\n\n  return rpcRequest\n}\n\nexport type DefineTransactionRequestErrorType =\n  | DefineFormatterErrorType\n  | ErrorType\n\nexport const defineTransactionRequest = /*#__PURE__*/ defineFormatter(\n  'transactionRequest',\n  formatTransactionRequest,\n)\n\n//////////////////////////////////////////////////////////////////////////////\n\nfunction formatAuthorizationList(\n  authorizationList: AuthorizationList<number, boolean>,\n): RpcAuthorizationList {\n  return authorizationList.map(\n    (authorization) =>\n      ({\n        address: authorization.contractAddress,\n        r: authorization.r,\n        s: authorization.s,\n        chainId: numberToHex(authorization.chainId),\n        nonce: numberToHex(authorization.nonce),\n        ...(typeof authorization.yParity !== 'undefined'\n          ? { yParity: numberToHex(authorization.yParity) }\n          : {}),\n        ...(typeof authorization.v !== 'undefined' &&\n        typeof authorization.yParity === 'undefined'\n          ? { v: numberToHex(authorization.v) }\n          : {}),\n      }) as any,\n  ) as RpcAuthorizationList\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 5967, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5972, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/promise/createBatchScheduler.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\n\ntype Resolved<returnType extends readonly unknown[] = any> = [\n  result: returnType[number],\n  results: returnType,\n]\n\ntype PendingPromise<returnType extends readonly unknown[] = any> = {\n  resolve?: ((data: Resolved<returnType>) => void) | undefined\n  reject?: ((reason?: unknown) => void) | undefined\n}\n\ntype SchedulerItem = { args: unknown; pendingPromise: PendingPromise }\n\ntype BatchResultsCompareFn<result = unknown> = (a: result, b: result) => number\n\ntype CreateBatchSchedulerArguments<\n  parameters = unknown,\n  returnType extends readonly unknown[] = readonly unknown[],\n> = {\n  fn: (args: parameters[]) => Promise<returnType>\n  id: number | string\n  shouldSplitBatch?: ((args: parameters[]) => boolean) | undefined\n  wait?: number | undefined\n  sort?: BatchResultsCompareFn<returnType[number]> | undefined\n}\n\ntype CreateBatchSchedulerReturnType<\n  parameters = unknown,\n  returnType extends readonly unknown[] = readonly unknown[],\n> = {\n  flush: () => void\n  schedule: parameters extends undefined\n    ? (args?: parameters | undefined) => Promise<Resolved<returnType>>\n    : (args: parameters) => Promise<Resolved<returnType>>\n}\n\nexport type CreateBatchSchedulerErrorType = ErrorType\n\nconst schedulerCache = /*#__PURE__*/ new Map<number | string, SchedulerItem[]>()\n\n/** @internal */\nexport function createBatchScheduler<\n  parameters,\n  returnType extends readonly unknown[],\n>({\n  fn,\n  id,\n  shouldSplitBatch,\n  wait = 0,\n  sort,\n}: CreateBatchSchedulerArguments<\n  parameters,\n  returnType\n>): CreateBatchSchedulerReturnType<parameters, returnType> {\n  const exec = async () => {\n    const scheduler = getScheduler()\n    flush()\n\n    const args = scheduler.map(({ args }) => args)\n\n    if (args.length === 0) return\n\n    fn(args as parameters[])\n      .then((data) => {\n        if (sort && Array.isArray(data)) data.sort(sort)\n        for (let i = 0; i < scheduler.length; i++) {\n          const { pendingPromise } = scheduler[i]\n          pendingPromise.resolve?.([data[i], data])\n        }\n      })\n      .catch((err) => {\n        for (let i = 0; i < scheduler.length; i++) {\n          const { pendingPromise } = scheduler[i]\n          pendingPromise.reject?.(err)\n        }\n      })\n  }\n\n  const flush = () => schedulerCache.delete(id)\n\n  const getBatchedArgs = () =>\n    getScheduler().map(({ args }) => args) as parameters[]\n\n  const getScheduler = () => schedulerCache.get(id) || []\n\n  const setScheduler = (item: SchedulerItem) =>\n    schedulerCache.set(id, [...getScheduler(), item])\n\n  return {\n    flush,\n    async schedule(args: parameters) {\n      const pendingPromise: PendingPromise<returnType> = {}\n      const promise = new Promise<Resolved<returnType>>((resolve, reject) => {\n        pendingPromise.resolve = resolve\n        pendingPromise.reject = reject\n      })\n\n      const split = shouldSplitBatch?.([...getBatchedArgs(), args])\n\n      if (split) exec()\n\n      const hasActiveScheduler = getScheduler().length > 0\n      if (hasActiveScheduler) {\n        setScheduler({ args, pendingPromise })\n        return promise\n      }\n\n      setScheduler({ args, pendingPromise })\n      setTimeout(exec, wait)\n      return promise\n    },\n  } as unknown as CreateBatchSchedulerReturnType<parameters, returnType>\n}\n"],"names":[],"mappings":";;;AAuCA,MAAM,iBAAiB,WAAA,GAAc,IAAI;AAGnC,SAAU,qBAGd,EACA,EAAE,EACF,EAAE,EACF,gBAAgB,EAChB,OAAO,CAAC,EACR,IAAI,EAIL;IACC,MAAM,OAAO;QACX,MAAM,YAAY;QAClB;QAEA,MAAM,OAAO,UAAU,GAAG,CAAC,CAAC,EAAE,IAAI,EAAE,GAAK;QAEzC,IAAI,KAAK,MAAM,KAAK,GAAG;QAEvB,GAAG,MACA,IAAI,CAAC,CAAC;YACL,IAAI,QAAQ,MAAM,OAAO,CAAC,OAAO,KAAK,IAAI,CAAC;YAC3C,IAAK,IAAI,IAAI,GAAG,IAAI,UAAU,MAAM,EAAE,IAAK;gBACzC,MAAM,EAAE,cAAc,EAAE,GAAG,SAAS,CAAC,EAAE;gBACvC,eAAe,OAAO,GAAG;oBAAC,IAAI,CAAC,EAAE;oBAAE;iBAAK;YAC1C;QACF,GACC,KAAK,CAAC,CAAC;YACN,IAAK,IAAI,IAAI,GAAG,IAAI,UAAU,MAAM,EAAE,IAAK;gBACzC,MAAM,EAAE,cAAc,EAAE,GAAG,SAAS,CAAC,EAAE;gBACvC,eAAe,MAAM,GAAG;YAC1B;QACF;IACJ;IAEA,MAAM,QAAQ,IAAM,eAAe,MAAM,CAAC;IAE1C,MAAM,iBAAiB,IACrB,eAAe,GAAG,CAAC,CAAC,EAAE,IAAI,EAAE,GAAK;IAEnC,MAAM,eAAe,IAAM,eAAe,GAAG,CAAC,OAAO,EAAE;IAEvD,MAAM,eAAe,CAAC,OACpB,eAAe,GAAG,CAAC,IAAI;eAAI;YAAgB;SAAK;IAElD,OAAO;QACL;QACA,MAAM,UAAS,IAAgB;YAC7B,MAAM,iBAA6C,CAAA;YACnD,MAAM,UAAU,IAAI,QAA8B,CAAC,SAAS;gBAC1D,eAAe,OAAO,GAAG;gBACzB,eAAe,MAAM,GAAG;YAC1B;YAEA,MAAM,QAAQ,mBAAmB;mBAAI;gBAAkB;aAAK;YAE5D,IAAI,OAAO;YAEX,MAAM,qBAAqB,eAAe,MAAM,GAAG;YACnD,IAAI,oBAAoB;gBACtB,aAAa;oBAAE;oBAAM;gBAAc;gBACnC,OAAO;YACT;YAEA,aAAa;gBAAE;gBAAM;YAAc;YACnC,WAAW,MAAM;YACjB,OAAO;QACT;;AAEJ"}},
    {"offset": {"line": 6035, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6040, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/stateOverride.ts"],"sourcesContent":["import {\n  InvalidAddressError,\n  type InvalidAddressErrorType,\n} from '../errors/address.js'\nimport {\n  InvalidBytesLengthError,\n  type InvalidBytesLengthErrorType,\n} from '../errors/data.js'\nimport {\n  AccountStateConflictError,\n  type AccountStateConflictErrorType,\n  StateAssignmentConflictError,\n  type StateAssignmentConflictErrorType,\n} from '../errors/stateOverride.js'\nimport type {\n  RpcAccountStateOverride,\n  RpcStateMapping,\n  RpcStateOverride,\n} from '../types/rpc.js'\nimport type { StateMapping, StateOverride } from '../types/stateOverride.js'\nimport { isAddress } from './address/isAddress.js'\nimport { type NumberToHexErrorType, numberToHex } from './encoding/toHex.js'\n\ntype SerializeStateMappingParameters = StateMapping | undefined\n\ntype SerializeStateMappingErrorType = InvalidBytesLengthErrorType\n\n/** @internal */\nexport function serializeStateMapping(\n  stateMapping: SerializeStateMappingParameters,\n): RpcStateMapping | undefined {\n  if (!stateMapping || stateMapping.length === 0) return undefined\n  return stateMapping.reduce((acc, { slot, value }) => {\n    if (slot.length !== 66)\n      throw new InvalidBytesLengthError({\n        size: slot.length,\n        targetSize: 66,\n        type: 'hex',\n      })\n    if (value.length !== 66)\n      throw new InvalidBytesLengthError({\n        size: value.length,\n        targetSize: 66,\n        type: 'hex',\n      })\n    acc[slot] = value\n    return acc\n  }, {} as RpcStateMapping)\n}\n\ntype SerializeAccountStateOverrideParameters = Omit<\n  StateOverride[number],\n  'address'\n>\n\ntype SerializeAccountStateOverrideErrorType =\n  | NumberToHexErrorType\n  | StateAssignmentConflictErrorType\n  | SerializeStateMappingErrorType\n\n/** @internal */\nexport function serializeAccountStateOverride(\n  parameters: SerializeAccountStateOverrideParameters,\n): RpcAccountStateOverride {\n  const { balance, nonce, state, stateDiff, code } = parameters\n  const rpcAccountStateOverride: RpcAccountStateOverride = {}\n  if (code !== undefined) rpcAccountStateOverride.code = code\n  if (balance !== undefined)\n    rpcAccountStateOverride.balance = numberToHex(balance)\n  if (nonce !== undefined) rpcAccountStateOverride.nonce = numberToHex(nonce)\n  if (state !== undefined)\n    rpcAccountStateOverride.state = serializeStateMapping(state)\n  if (stateDiff !== undefined) {\n    if (rpcAccountStateOverride.state) throw new StateAssignmentConflictError()\n    rpcAccountStateOverride.stateDiff = serializeStateMapping(stateDiff)\n  }\n  return rpcAccountStateOverride\n}\n\ntype SerializeStateOverrideParameters = StateOverride | undefined\n\nexport type SerializeStateOverrideErrorType =\n  | InvalidAddressErrorType\n  | AccountStateConflictErrorType\n  | SerializeAccountStateOverrideErrorType\n\n/** @internal */\nexport function serializeStateOverride(\n  parameters?: SerializeStateOverrideParameters,\n): RpcStateOverride | undefined {\n  if (!parameters) return undefined\n  const rpcStateOverride: RpcStateOverride = {}\n  for (const { address, ...accountState } of parameters) {\n    if (!isAddress(address, { strict: false }))\n      throw new InvalidAddressError({ address })\n    if (rpcStateOverride[address])\n      throw new AccountStateConflictError({ address: address })\n    rpcStateOverride[address] = serializeAccountStateOverride(accountState)\n  }\n  return rpcStateOverride\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;AA4BM,SAAU,sBACd,YAA6C;IAE7C,IAAI,CAAC,gBAAgB,aAAa,MAAM,KAAK,GAAG,OAAO;IACvD,OAAO,aAAa,MAAM,CAAC,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE;QAC9C,IAAI,KAAK,MAAM,KAAK,IAClB,MAAM,IAAI,0IAAA,CAAA,0BAAuB,CAAC;YAChC,MAAM,KAAK,MAAM;YACjB,YAAY;YACZ,MAAM;;QAEV,IAAI,MAAM,MAAM,KAAK,IACnB,MAAM,IAAI,0IAAA,CAAA,0BAAuB,CAAC;YAChC,MAAM,MAAM,MAAM;YAClB,YAAY;YACZ,MAAM;;QAEV,GAAG,CAAC,KAAK,GAAG;QACZ,OAAO;IACT,GAAG,CAAA;AACL;AAaM,SAAU,8BACd,UAAmD;IAEnD,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG;IACnD,MAAM,0BAAmD,CAAA;IACzD,IAAI,SAAS,WAAW,wBAAwB,IAAI,GAAG;IACvD,IAAI,YAAY,WACd,wBAAwB,OAAO,GAAG,CAAA,GAAA,sJAAA,CAAA,cAAW,AAAX,EAAY;IAChD,IAAI,UAAU,WAAW,wBAAwB,KAAK,GAAG,CAAA,GAAA,sJAAA,CAAA,cAAW,AAAX,EAAY;IACrE,IAAI,UAAU,WACZ,wBAAwB,KAAK,GAAG,sBAAsB;IACxD,IAAI,cAAc,WAAW;QAC3B,IAAI,wBAAwB,KAAK,EAAE,MAAM,IAAI,mJAAA,CAAA,+BAA4B;QACzE,wBAAwB,SAAS,GAAG,sBAAsB;IAC5D;IACA,OAAO;AACT;AAUM,SAAU,uBACd,UAA6C;IAE7C,IAAI,CAAC,YAAY,OAAO;IACxB,MAAM,mBAAqC,CAAA;IAC3C,KAAK,MAAM,EAAE,OAAO,EAAE,GAAG,cAAc,IAAI,WAAY;QACrD,IAAI,CAAC,CAAA,GAAA,yJAAA,CAAA,YAAS,AAAT,EAAU,SAAS;YAAE,QAAQ;QAAK,IACrC,MAAM,IAAI,6IAAA,CAAA,sBAAmB,CAAC;YAAE;QAAO;QACzC,IAAI,gBAAgB,CAAC,QAAQ,EAC3B,MAAM,IAAI,mJAAA,CAAA,4BAAyB,CAAC;YAAE,SAAS;QAAO;QACxD,gBAAgB,CAAC,QAAQ,GAAG,8BAA8B;IAC5D;IACA,OAAO;AACT"}},
    {"offset": {"line": 6102, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6107, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/constants/number.ts"],"sourcesContent":["export const maxInt8 = 2n ** (8n - 1n) - 1n\nexport const maxInt16 = 2n ** (16n - 1n) - 1n\nexport const maxInt24 = 2n ** (24n - 1n) - 1n\nexport const maxInt32 = 2n ** (32n - 1n) - 1n\nexport const maxInt40 = 2n ** (40n - 1n) - 1n\nexport const maxInt48 = 2n ** (48n - 1n) - 1n\nexport const maxInt56 = 2n ** (56n - 1n) - 1n\nexport const maxInt64 = 2n ** (64n - 1n) - 1n\nexport const maxInt72 = 2n ** (72n - 1n) - 1n\nexport const maxInt80 = 2n ** (80n - 1n) - 1n\nexport const maxInt88 = 2n ** (88n - 1n) - 1n\nexport const maxInt96 = 2n ** (96n - 1n) - 1n\nexport const maxInt104 = 2n ** (104n - 1n) - 1n\nexport const maxInt112 = 2n ** (112n - 1n) - 1n\nexport const maxInt120 = 2n ** (120n - 1n) - 1n\nexport const maxInt128 = 2n ** (128n - 1n) - 1n\nexport const maxInt136 = 2n ** (136n - 1n) - 1n\nexport const maxInt144 = 2n ** (144n - 1n) - 1n\nexport const maxInt152 = 2n ** (152n - 1n) - 1n\nexport const maxInt160 = 2n ** (160n - 1n) - 1n\nexport const maxInt168 = 2n ** (168n - 1n) - 1n\nexport const maxInt176 = 2n ** (176n - 1n) - 1n\nexport const maxInt184 = 2n ** (184n - 1n) - 1n\nexport const maxInt192 = 2n ** (192n - 1n) - 1n\nexport const maxInt200 = 2n ** (200n - 1n) - 1n\nexport const maxInt208 = 2n ** (208n - 1n) - 1n\nexport const maxInt216 = 2n ** (216n - 1n) - 1n\nexport const maxInt224 = 2n ** (224n - 1n) - 1n\nexport const maxInt232 = 2n ** (232n - 1n) - 1n\nexport const maxInt240 = 2n ** (240n - 1n) - 1n\nexport const maxInt248 = 2n ** (248n - 1n) - 1n\nexport const maxInt256 = 2n ** (256n - 1n) - 1n\n\nexport const minInt8 = -(2n ** (8n - 1n))\nexport const minInt16 = -(2n ** (16n - 1n))\nexport const minInt24 = -(2n ** (24n - 1n))\nexport const minInt32 = -(2n ** (32n - 1n))\nexport const minInt40 = -(2n ** (40n - 1n))\nexport const minInt48 = -(2n ** (48n - 1n))\nexport const minInt56 = -(2n ** (56n - 1n))\nexport const minInt64 = -(2n ** (64n - 1n))\nexport const minInt72 = -(2n ** (72n - 1n))\nexport const minInt80 = -(2n ** (80n - 1n))\nexport const minInt88 = -(2n ** (88n - 1n))\nexport const minInt96 = -(2n ** (96n - 1n))\nexport const minInt104 = -(2n ** (104n - 1n))\nexport const minInt112 = -(2n ** (112n - 1n))\nexport const minInt120 = -(2n ** (120n - 1n))\nexport const minInt128 = -(2n ** (128n - 1n))\nexport const minInt136 = -(2n ** (136n - 1n))\nexport const minInt144 = -(2n ** (144n - 1n))\nexport const minInt152 = -(2n ** (152n - 1n))\nexport const minInt160 = -(2n ** (160n - 1n))\nexport const minInt168 = -(2n ** (168n - 1n))\nexport const minInt176 = -(2n ** (176n - 1n))\nexport const minInt184 = -(2n ** (184n - 1n))\nexport const minInt192 = -(2n ** (192n - 1n))\nexport const minInt200 = -(2n ** (200n - 1n))\nexport const minInt208 = -(2n ** (208n - 1n))\nexport const minInt216 = -(2n ** (216n - 1n))\nexport const minInt224 = -(2n ** (224n - 1n))\nexport const minInt232 = -(2n ** (232n - 1n))\nexport const minInt240 = -(2n ** (240n - 1n))\nexport const minInt248 = -(2n ** (248n - 1n))\nexport const minInt256 = -(2n ** (256n - 1n))\n\nexport const maxUint8 = 2n ** 8n - 1n\nexport const maxUint16 = 2n ** 16n - 1n\nexport const maxUint24 = 2n ** 24n - 1n\nexport const maxUint32 = 2n ** 32n - 1n\nexport const maxUint40 = 2n ** 40n - 1n\nexport const maxUint48 = 2n ** 48n - 1n\nexport const maxUint56 = 2n ** 56n - 1n\nexport const maxUint64 = 2n ** 64n - 1n\nexport const maxUint72 = 2n ** 72n - 1n\nexport const maxUint80 = 2n ** 80n - 1n\nexport const maxUint88 = 2n ** 88n - 1n\nexport const maxUint96 = 2n ** 96n - 1n\nexport const maxUint104 = 2n ** 104n - 1n\nexport const maxUint112 = 2n ** 112n - 1n\nexport const maxUint120 = 2n ** 120n - 1n\nexport const maxUint128 = 2n ** 128n - 1n\nexport const maxUint136 = 2n ** 136n - 1n\nexport const maxUint144 = 2n ** 144n - 1n\nexport const maxUint152 = 2n ** 152n - 1n\nexport const maxUint160 = 2n ** 160n - 1n\nexport const maxUint168 = 2n ** 168n - 1n\nexport const maxUint176 = 2n ** 176n - 1n\nexport const maxUint184 = 2n ** 184n - 1n\nexport const maxUint192 = 2n ** 192n - 1n\nexport const maxUint200 = 2n ** 200n - 1n\nexport const maxUint208 = 2n ** 208n - 1n\nexport const maxUint216 = 2n ** 216n - 1n\nexport const maxUint224 = 2n ** 224n - 1n\nexport const maxUint232 = 2n ** 232n - 1n\nexport const maxUint240 = 2n ** 240n - 1n\nexport const maxUint248 = 2n ** 248n - 1n\nexport const maxUint256 = 2n ** 256n - 1n\n"],"names":[],"mappings":"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AC,EAAE,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;AACnC,MAAM,WAAW,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;AACnC,MAAM,WAAW,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;AACnC,MAAM,WAAW,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;AACnC,MAAM,YAAY,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;AACrC,MAAM,YAAY,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;AACrC,MAAM,YAAY,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;AACrC,MAAM,YAAY,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;AACrC,MAAM,YAAY,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;AACrC,MAAM,YAAY,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;AACrC,MAAM,YAAY,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;AACrC,MAAM,YAAY,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;AACrC,MAAM,YAAY,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;AACrC,MAAM,YAAY,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;AACrC,MAAM,YAAY,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;AACrC,MAAM,YAAY,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;AACrC,MAAM,YAAY,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;AACrC,MAAM,YAAY,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;AACrC,MAAM,YAAY,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;AACrC,MAAM,YAAY,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;AACrC,MAAM,YAAY,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;AACrC,MAAM,YAAY,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;AACrC,MAAM,YAAY,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;AACrC,MAAM,YAAY,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;AAErC,MAAM,WAAW,EAAE,IAAI,EAAE,GAAG,EAAE;AAC9B,MAAM,YAAY,EAAE,IAAI,GAAG,GAAG,EAAE;AAChC,MAAM,YAAY,EAAE,IAAI,GAAG,GAAG,EAAE;AAChC,MAAM,YAAY,EAAE,IAAI,GAAG,GAAG,EAAE;AAChC,MAAM,YAAY,EAAE,IAAI,GAAG,GAAG,EAAE;AAChC,MAAM,YAAY,EAAE,IAAI,GAAG,GAAG,EAAE;AAChC,MAAM,YAAY,EAAE,IAAI,GAAG,GAAG,EAAE;AAChC,MAAM,YAAY,EAAE,IAAI,GAAG,GAAG,EAAE;AAChC,MAAM,YAAY,EAAE,IAAI,GAAG,GAAG,EAAE;AAChC,MAAM,YAAY,EAAE,IAAI,GAAG,GAAG,EAAE;AAChC,MAAM,YAAY,EAAE,IAAI,GAAG,GAAG,EAAE;AAChC,MAAM,YAAY,EAAE,IAAI,GAAG,GAAG,EAAE;AAChC,MAAM,aAAa,EAAE,IAAI,IAAI,GAAG,EAAE;AAClC,MAAM,aAAa,EAAE,IAAI,IAAI,GAAG,EAAE;AAClC,MAAM,aAAa,EAAE,IAAI,IAAI,GAAG,EAAE;AAClC,MAAM,aAAa,EAAE,IAAI,IAAI,GAAG,EAAE;AAClC,MAAM,aAAa,EAAE,IAAI,IAAI,GAAG,EAAE;AAClC,MAAM,aAAa,EAAE,IAAI,IAAI,GAAG,EAAE;AAClC,MAAM,aAAa,EAAE,IAAI,IAAI,GAAG,EAAE;AAClC,MAAM,aAAa,EAAE,IAAI,IAAI,GAAG,EAAE;AAClC,MAAM,aAAa,EAAE,IAAI,IAAI,GAAG,EAAE;AAClC,MAAM,aAAa,EAAE,IAAI,IAAI,GAAG,EAAE;AAClC,MAAM,aAAa,EAAE,IAAI,IAAI,GAAG,EAAE;AAClC,MAAM,aAAa,EAAE,IAAI,IAAI,GAAG,EAAE;AAClC,MAAM,aAAa,EAAE,IAAI,IAAI,GAAG,EAAE;AAClC,MAAM,aAAa,EAAE,IAAI,IAAI,GAAG,EAAE;AAClC,MAAM,aAAa,EAAE,IAAI,IAAI,GAAG,EAAE;AAClC,MAAM,aAAa,EAAE,IAAI,IAAI,GAAG,EAAE;AAClC,MAAM,aAAa,EAAE,IAAI,IAAI,GAAG,EAAE;AAClC,MAAM,aAAa,EAAE,IAAI,IAAI,GAAG,EAAE;AAClC,MAAM,aAAa,EAAE,IAAI,IAAI,GAAG,EAAE;AAClC,MAAM,aAAa,EAAE,IAAI,IAAI,GAAG,EAAE"}},
    {"offset": {"line": 6301, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6306, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/transaction/assertRequest.ts"],"sourcesContent":["import {\n  type ParseAccountErrorType,\n  parseAccount,\n} from '../../accounts/utils/parseAccount.js'\nimport type { SendTransactionParameters } from '../../actions/wallet/sendTransaction.js'\nimport { maxUint256 } from '../../constants/number.js'\nimport {\n  InvalidAddressError,\n  type InvalidAddressErrorType,\n} from '../../errors/address.js'\nimport {\n  FeeCapTooHighError,\n  type FeeCapTooHighErrorType,\n  TipAboveFeeCapError,\n  type TipAboveFeeCapErrorType,\n} from '../../errors/node.js'\nimport {\n  FeeConflictError,\n  type FeeConflictErrorType,\n} from '../../errors/transaction.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { ExactPartial } from '../../types/utils.js'\nimport { isAddress } from '../address/isAddress.js'\n\nexport type AssertRequestParameters = ExactPartial<\n  SendTransactionParameters<Chain>\n>\n\nexport type AssertRequestErrorType =\n  | InvalidAddressErrorType\n  | FeeConflictErrorType\n  | FeeCapTooHighErrorType\n  | ParseAccountErrorType\n  | TipAboveFeeCapErrorType\n  | ErrorType\n\nexport function assertRequest(args: AssertRequestParameters) {\n  const {\n    account: account_,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    to,\n  } = args\n  const account = account_ ? parseAccount(account_) : undefined\n  if (account && !isAddress(account.address))\n    throw new InvalidAddressError({ address: account.address })\n  if (to && !isAddress(to)) throw new InvalidAddressError({ address: to })\n  if (\n    typeof gasPrice !== 'undefined' &&\n    (typeof maxFeePerGas !== 'undefined' ||\n      typeof maxPriorityFeePerGas !== 'undefined')\n  )\n    throw new FeeConflictError()\n\n  if (maxFeePerGas && maxFeePerGas > maxUint256)\n    throw new FeeCapTooHighError({ maxFeePerGas })\n  if (\n    maxPriorityFeePerGas &&\n    maxFeePerGas &&\n    maxPriorityFeePerGas > maxFeePerGas\n  )\n    throw new TipAboveFeeCapError({ maxFeePerGas, maxPriorityFeePerGas })\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAqCM,SAAU,cAAc,IAA6B;IACzD,MAAM,EACJ,SAAS,QAAQ,EACjB,QAAQ,EACR,YAAY,EACZ,oBAAoB,EACpB,EAAE,EACH,GAAG;IACJ,MAAM,UAAU,WAAW,CAAA,GAAA,6JAAA,CAAA,eAAY,AAAZ,EAAa,YAAY;IACpD,IAAI,WAAW,CAAC,CAAA,GAAA,yJAAA,CAAA,YAAS,AAAT,EAAU,QAAQ,OAAO,GACvC,MAAM,IAAI,6IAAA,CAAA,sBAAmB,CAAC;QAAE,SAAS,QAAQ,OAAO;IAAA;IAC1D,IAAI,MAAM,CAAC,CAAA,GAAA,yJAAA,CAAA,YAAS,AAAT,EAAU,KAAK,MAAM,IAAI,6IAAA,CAAA,sBAAmB,CAAC;QAAE,SAAS;IAAE;IACrE,IACE,OAAO,aAAa,eACpB,CAAC,OAAO,iBAAiB,eACvB,OAAO,yBAAyB,WAAW,GAE7C,MAAM,IAAI,iJAAA,CAAA,mBAAgB;IAE5B,IAAI,gBAAgB,eAAe,+IAAA,CAAA,aAAU,EAC3C,MAAM,IAAI,0IAAA,CAAA,qBAAkB,CAAC;QAAE;IAAY;IAC7C,IACE,wBACA,gBACA,uBAAuB,cAEvB,MAAM,IAAI,0IAAA,CAAA,sBAAmB,CAAC;QAAE;QAAc;IAAoB;AACtE"}},
    {"offset": {"line": 6340, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6345, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/actions/public/call.ts"],"sourcesContent":["import { type Address, parseAbi } from 'abitype'\n\nimport type { Account } from '../../accounts/types.js'\nimport {\n  type ParseAccountErrorType,\n  parseAccount,\n} from '../../accounts/utils/parseAccount.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport { multicall3Abi } from '../../constants/abis.js'\nimport { aggregate3Signature } from '../../constants/contract.js'\nimport {\n  deploylessCallViaBytecodeBytecode,\n  deploylessCallViaFactoryBytecode,\n} from '../../constants/contracts.js'\nimport { BaseError } from '../../errors/base.js'\nimport {\n  ChainDoesNotSupportContract,\n  ClientChainNotConfiguredError,\n} from '../../errors/chain.js'\nimport {\n  CounterfactualDeploymentFailedError,\n  RawContractError,\n  type RawContractErrorType,\n} from '../../errors/contract.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { RpcTransactionRequest } from '../../types/rpc.js'\nimport type { StateOverride } from '../../types/stateOverride.js'\nimport type { TransactionRequest } from '../../types/transaction.js'\nimport type { ExactPartial, UnionOmit } from '../../types/utils.js'\nimport {\n  type DecodeFunctionResultErrorType,\n  decodeFunctionResult,\n} from '../../utils/abi/decodeFunctionResult.js'\nimport {\n  type EncodeDeployDataErrorType,\n  encodeDeployData,\n} from '../../utils/abi/encodeDeployData.js'\nimport {\n  type EncodeFunctionDataErrorType,\n  encodeFunctionData,\n} from '../../utils/abi/encodeFunctionData.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type GetChainContractAddressErrorType,\n  getChainContractAddress,\n} from '../../utils/chain/getChainContractAddress.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\nimport {\n  type GetCallErrorReturnType,\n  getCallError,\n} from '../../utils/errors/getCallError.js'\nimport { extract } from '../../utils/formatters/extract.js'\nimport {\n  type FormatTransactionRequestErrorType,\n  type FormattedTransactionRequest,\n  formatTransactionRequest,\n} from '../../utils/formatters/transactionRequest.js'\nimport {\n  type CreateBatchSchedulerErrorType,\n  createBatchScheduler,\n} from '../../utils/promise/createBatchScheduler.js'\nimport {\n  type SerializeStateOverrideErrorType,\n  serializeStateOverride,\n} from '../../utils/stateOverride.js'\nimport { assertRequest } from '../../utils/transaction/assertRequest.js'\nimport type {\n  AssertRequestErrorType,\n  AssertRequestParameters,\n} from '../../utils/transaction/assertRequest.js'\n\nexport type CallParameters<\n  chain extends Chain | undefined = Chain | undefined,\n> = UnionOmit<FormattedCall<chain>, 'from'> & {\n  /** Account attached to the call (msg.sender). */\n  account?: Account | Address | undefined\n  /** Whether or not to enable multicall batching on this call. */\n  batch?: boolean | undefined\n  /** Bytecode to perform the call on. */\n  code?: Hex | undefined\n  /** Contract deployment factory address (ie. Create2 factory, Smart Account factory, etc). */\n  factory?: Address | undefined\n  /** Calldata to execute on the factory to deploy the contract. */\n  factoryData?: Hex | undefined\n  /** State overrides for the call. */\n  stateOverride?: StateOverride | undefined\n} & (\n    | {\n        /** The balance of the account at a block number. */\n        blockNumber?: bigint | undefined\n        blockTag?: undefined\n      }\n    | {\n        blockNumber?: undefined\n        /**\n         * The balance of the account at a block tag.\n         * @default 'latest'\n         */\n        blockTag?: BlockTag | undefined\n      }\n  )\ntype FormattedCall<chain extends Chain | undefined = Chain | undefined> =\n  FormattedTransactionRequest<chain>\n\nexport type CallReturnType = { data: Hex | undefined }\n\nexport type CallErrorType = GetCallErrorReturnType<\n  | ParseAccountErrorType\n  | SerializeStateOverrideErrorType\n  | AssertRequestErrorType\n  | NumberToHexErrorType\n  | FormatTransactionRequestErrorType\n  | ScheduleMulticallErrorType\n  | RequestErrorType\n  | ToDeploylessCallViaBytecodeDataErrorType\n  | ToDeploylessCallViaFactoryDataErrorType\n>\n\n/**\n * Executes a new message call immediately without submitting a transaction to the network.\n *\n * - Docs: https://viem.sh/docs/actions/public/call\n * - JSON-RPC Methods: [`eth_call`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_call)\n *\n * @param client - Client to use\n * @param parameters - {@link CallParameters}\n * @returns The call data. {@link CallReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { call } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const data = await call(client, {\n *   account: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',\n *   data: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n * })\n */\nexport async function call<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n  args: CallParameters<chain>,\n): Promise<CallReturnType> {\n  const {\n    account: account_ = client.account,\n    batch = Boolean(client.batch?.multicall),\n    blockNumber,\n    blockTag = 'latest',\n    accessList,\n    blobs,\n    code,\n    data: data_,\n    factory,\n    factoryData,\n    gas,\n    gasPrice,\n    maxFeePerBlobGas,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    nonce,\n    to,\n    value,\n    stateOverride,\n    ...rest\n  } = args\n  const account = account_ ? parseAccount(account_) : undefined\n\n  if (code && (factory || factoryData))\n    throw new BaseError(\n      'Cannot provide both `code` & `factory`/`factoryData` as parameters.',\n    )\n  if (code && to)\n    throw new BaseError('Cannot provide both `code` & `to` as parameters.')\n\n  // Check if the call is deployless via bytecode.\n  const deploylessCallViaBytecode = code && data_\n  // Check if the call is deployless via a factory.\n  const deploylessCallViaFactory = factory && factoryData && to && data_\n  const deploylessCall = deploylessCallViaBytecode || deploylessCallViaFactory\n\n  const data = (() => {\n    if (deploylessCallViaBytecode)\n      return toDeploylessCallViaBytecodeData({\n        code,\n        data: data_,\n      })\n    if (deploylessCallViaFactory)\n      return toDeploylessCallViaFactoryData({\n        data: data_,\n        factory,\n        factoryData,\n        to,\n      })\n    return data_\n  })()\n\n  try {\n    assertRequest(args as AssertRequestParameters)\n\n    const blockNumberHex = blockNumber ? numberToHex(blockNumber) : undefined\n    const block = blockNumberHex || blockTag\n\n    const rpcStateOverride = serializeStateOverride(stateOverride)\n\n    const chainFormat = client.chain?.formatters?.transactionRequest?.format\n    const format = chainFormat || formatTransactionRequest\n\n    const request = format({\n      // Pick out extra data that might exist on the chain's transaction request type.\n      ...extract(rest, { format: chainFormat }),\n      from: account?.address,\n      accessList,\n      blobs,\n      data,\n      gas,\n      gasPrice,\n      maxFeePerBlobGas,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      to: deploylessCall ? undefined : to,\n      value,\n    } as TransactionRequest) as TransactionRequest\n\n    if (batch && shouldPerformMulticall({ request }) && !rpcStateOverride) {\n      try {\n        return await scheduleMulticall(client, {\n          ...request,\n          blockNumber,\n          blockTag,\n        } as unknown as ScheduleMulticallParameters<chain>)\n      } catch (err) {\n        if (\n          !(err instanceof ClientChainNotConfiguredError) &&\n          !(err instanceof ChainDoesNotSupportContract)\n        )\n          throw err\n      }\n    }\n\n    const response = await client.request({\n      method: 'eth_call',\n      params: rpcStateOverride\n        ? [\n            request as ExactPartial<RpcTransactionRequest>,\n            block,\n            rpcStateOverride,\n          ]\n        : [request as ExactPartial<RpcTransactionRequest>, block],\n    })\n    if (response === '0x') return { data: undefined }\n    return { data: response }\n  } catch (err) {\n    const data = getRevertErrorData(err)\n\n    // Check for CCIP-Read offchain lookup signature.\n    const { offchainLookup, offchainLookupSignature } = await import(\n      '../../utils/ccip.js'\n    )\n    if (\n      client.ccipRead !== false &&\n      data?.slice(0, 10) === offchainLookupSignature &&\n      to\n    )\n      return { data: await offchainLookup(client, { data, to }) }\n\n    // Check for counterfactual deployment error.\n    if (deploylessCall && data?.slice(0, 10) === '0x101bb98d')\n      throw new CounterfactualDeploymentFailedError({ factory })\n\n    throw getCallError(err as ErrorType, {\n      ...args,\n      account,\n      chain: client.chain,\n    })\n  }\n}\n\n// We only want to perform a scheduled multicall if:\n// - The request has calldata,\n// - The request has a target address,\n// - The target address is not already the aggregate3 signature,\n// - The request has no other properties (`nonce`, `gas`, etc cannot be sent with a multicall).\nfunction shouldPerformMulticall({ request }: { request: TransactionRequest }) {\n  const { data, to, ...request_ } = request\n  if (!data) return false\n  if (data.startsWith(aggregate3Signature)) return false\n  if (!to) return false\n  if (\n    Object.values(request_).filter((x) => typeof x !== 'undefined').length > 0\n  )\n    return false\n  return true\n}\n\ntype ScheduleMulticallParameters<chain extends Chain | undefined> = Pick<\n  CallParameters<chain>,\n  'blockNumber' | 'blockTag'\n> & {\n  data: Hex\n  multicallAddress?: Address | undefined\n  to: Address\n}\n\ntype ScheduleMulticallErrorType =\n  | GetChainContractAddressErrorType\n  | NumberToHexErrorType\n  | CreateBatchSchedulerErrorType\n  | EncodeFunctionDataErrorType\n  | DecodeFunctionResultErrorType\n  | RawContractErrorType\n  | ErrorType\n\nasync function scheduleMulticall<chain extends Chain | undefined>(\n  client: Client<Transport>,\n  args: ScheduleMulticallParameters<chain>,\n) {\n  const { batchSize = 1024, wait = 0 } =\n    typeof client.batch?.multicall === 'object' ? client.batch.multicall : {}\n  const {\n    blockNumber,\n    blockTag = 'latest',\n    data,\n    multicallAddress: multicallAddress_,\n    to,\n  } = args\n\n  let multicallAddress = multicallAddress_\n  if (!multicallAddress) {\n    if (!client.chain) throw new ClientChainNotConfiguredError()\n\n    multicallAddress = getChainContractAddress({\n      blockNumber,\n      chain: client.chain,\n      contract: 'multicall3',\n    })\n  }\n\n  const blockNumberHex = blockNumber ? numberToHex(blockNumber) : undefined\n  const block = blockNumberHex || blockTag\n\n  const { schedule } = createBatchScheduler({\n    id: `${client.uid}.${block}`,\n    wait,\n    shouldSplitBatch(args) {\n      const size = args.reduce((size, { data }) => size + (data.length - 2), 0)\n      return size > batchSize * 2\n    },\n    fn: async (\n      requests: {\n        data: Hex\n        to: Address\n      }[],\n    ) => {\n      const calls = requests.map((request) => ({\n        allowFailure: true,\n        callData: request.data,\n        target: request.to,\n      }))\n\n      const calldata = encodeFunctionData({\n        abi: multicall3Abi,\n        args: [calls],\n        functionName: 'aggregate3',\n      })\n\n      const data = await client.request({\n        method: 'eth_call',\n        params: [\n          {\n            data: calldata,\n            to: multicallAddress,\n          },\n          block,\n        ],\n      })\n\n      return decodeFunctionResult({\n        abi: multicall3Abi,\n        args: [calls],\n        functionName: 'aggregate3',\n        data: data || '0x',\n      })\n    },\n  })\n\n  const [{ returnData, success }] = await schedule({ data, to })\n\n  if (!success) throw new RawContractError({ data: returnData })\n  if (returnData === '0x') return { data: undefined }\n  return { data: returnData }\n}\n\ntype ToDeploylessCallViaBytecodeDataErrorType =\n  | EncodeDeployDataErrorType\n  | ErrorType\n\nfunction toDeploylessCallViaBytecodeData(parameters: {\n  code: Hex\n  data: Hex\n}) {\n  const { code, data } = parameters\n  return encodeDeployData({\n    abi: parseAbi(['constructor(bytes, bytes)']),\n    bytecode: deploylessCallViaBytecodeBytecode,\n    args: [code, data],\n  })\n}\n\ntype ToDeploylessCallViaFactoryDataErrorType =\n  | EncodeDeployDataErrorType\n  | ErrorType\n\nfunction toDeploylessCallViaFactoryData(parameters: {\n  data: Hex\n  factory: Address\n  factoryData: Hex\n  to: Address\n}) {\n  const { data, factory, factoryData, to } = parameters\n  return encodeDeployData({\n    abi: parseAbi(['constructor(address, bytes, address, bytes)']),\n    bytecode: deploylessCallViaFactoryBytecode,\n    args: [to, data, factory, factoryData],\n  })\n}\n\n/** @internal */\nexport type GetRevertErrorDataErrorType = ErrorType\n\n/** @internal */\nexport function getRevertErrorData(err: unknown) {\n  if (!(err instanceof BaseError)) return undefined\n  const error = err.walk() as RawContractError\n  return typeof error?.data === 'object' ? error.data?.data : error.data\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 6601, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6606, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/actions/public/readContract.ts"],"sourcesContent":["import type { Abi } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { BaseError } from '../../errors/base.js'\nimport type { Chain } from '../../types/chain.js'\nimport type {\n  ContractFunctionArgs,\n  ContractFunctionName,\n  ContractFunctionParameters,\n  ContractFunctionReturnType,\n} from '../../types/contract.js'\nimport type { UnionEvaluate } from '../../types/utils.js'\nimport {\n  type DecodeFunctionResultErrorType,\n  decodeFunctionResult,\n} from '../../utils/abi/decodeFunctionResult.js'\nimport {\n  type EncodeFunctionDataErrorType,\n  type EncodeFunctionDataParameters,\n  encodeFunctionData,\n} from '../../utils/abi/encodeFunctionData.js'\nimport {\n  type GetContractErrorReturnType,\n  getContractError,\n} from '../../utils/errors/getContractError.js'\nimport { getAction } from '../../utils/getAction.js'\n\nimport { type CallErrorType, type CallParameters, call } from './call.js'\n\nexport type ReadContractParameters<\n  abi extends Abi | readonly unknown[] = Abi,\n  functionName extends ContractFunctionName<\n    abi,\n    'pure' | 'view'\n  > = ContractFunctionName<abi, 'pure' | 'view'>,\n  args extends ContractFunctionArgs<\n    abi,\n    'pure' | 'view',\n    functionName\n  > = ContractFunctionArgs<abi, 'pure' | 'view', functionName>,\n> = UnionEvaluate<\n  Pick<\n    CallParameters,\n    | 'account'\n    | 'blockNumber'\n    | 'blockTag'\n    | 'factory'\n    | 'factoryData'\n    | 'stateOverride'\n  >\n> &\n  ContractFunctionParameters<abi, 'pure' | 'view', functionName, args, boolean>\n\nexport type ReadContractReturnType<\n  abi extends Abi | readonly unknown[] = Abi,\n  functionName extends ContractFunctionName<\n    abi,\n    'pure' | 'view'\n  > = ContractFunctionName<abi, 'pure' | 'view'>,\n  args extends ContractFunctionArgs<\n    abi,\n    'pure' | 'view',\n    functionName\n  > = ContractFunctionArgs<abi, 'pure' | 'view', functionName>,\n> = ContractFunctionReturnType<abi, 'pure' | 'view', functionName, args>\n\nexport type ReadContractErrorType = GetContractErrorReturnType<\n  CallErrorType | EncodeFunctionDataErrorType | DecodeFunctionResultErrorType\n>\n\n/**\n * Calls a read-only function on a contract, and returns the response.\n *\n * - Docs: https://viem.sh/docs/contract/readContract\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/contracts/reading-contracts\n *\n * A \"read-only\" function (constant function) on a Solidity contract is denoted by a `view` or `pure` keyword. They can only read the state of the contract, and cannot make any changes to it. Since read-only methods do not change the state of the contract, they do not require any gas to be executed, and can be called by any user without the need to pay for gas.\n *\n * Internally, uses a [Public Client](https://viem.sh/docs/clients/public) to call the [`call` action](https://viem.sh/docs/actions/public/call) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData).\n *\n * @param client - Client to use\n * @param parameters - {@link ReadContractParameters}\n * @returns The response from the contract. Type is inferred. {@link ReadContractReturnType}\n *\n * @example\n * import { createPublicClient, http, parseAbi } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { readContract } from 'viem/contract'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const result = await readContract(client, {\n *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *   abi: parseAbi(['function balanceOf(address) view returns (uint256)']),\n *   functionName: 'balanceOf',\n *   args: ['0xA0Cf798816D4b9b9866b5330EEa46a18382f251e'],\n * })\n * // 424122n\n */\nexport async function readContract<\n  chain extends Chain | undefined,\n  const abi extends Abi | readonly unknown[],\n  functionName extends ContractFunctionName<abi, 'pure' | 'view'>,\n  const args extends ContractFunctionArgs<abi, 'pure' | 'view', functionName>,\n>(\n  client: Client<Transport, chain>,\n  parameters: ReadContractParameters<abi, functionName, args>,\n): Promise<ReadContractReturnType<abi, functionName, args>> {\n  const { abi, address, args, functionName, ...rest } =\n    parameters as ReadContractParameters\n  const calldata = encodeFunctionData({\n    abi,\n    args,\n    functionName,\n  } as EncodeFunctionDataParameters)\n  try {\n    const { data } = await getAction(\n      client,\n      call,\n      'call',\n    )({\n      ...(rest as CallParameters),\n      data: calldata,\n      to: address!,\n    })\n    return decodeFunctionResult({\n      abi,\n      args,\n      functionName,\n      data: data || '0x',\n    }) as ReadContractReturnType<abi, functionName>\n  } catch (error) {\n    throw getContractError(error as BaseError, {\n      abi,\n      address,\n      args,\n      docsPath: '/docs/contract/readContract',\n      functionName,\n    })\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;AAsGO,eAAe,aAMpB,MAAgC,EAChC,UAA2D;IAE3D,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE,YAAY,EAAE,GAAG,MAAM,GACjD;IACF,MAAM,WAAW,CAAA,GAAA,8JAAA,CAAA,qBAAkB,AAAlB,EAAmB;QAClC;QACA;QACA;;IAEF,IAAI;QACF,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,CAAA,GAAA,8IAAA,CAAA,YAAS,AAAT,EACrB,QACA,qJAAA,CAAA,OAAI,EACJ,QACA;YACA,GAAI,IAAuB;YAC3B,MAAM;YACN,IAAI;;QAEN,OAAO,CAAA,GAAA,gKAAA,CAAA,uBAAoB,AAApB,EAAqB;YAC1B;YACA;YACA;YACA,MAAM,QAAQ;;IAElB,EAAE,OAAO,OAAO;QACd,MAAM,CAAA,GAAA,+JAAA,CAAA,mBAAgB,AAAhB,EAAiB,OAAoB;YACzC;YACA;YACA;YACA,UAAU;YACV;;IAEJ;AACF"}},
    {"offset": {"line": 6649, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6654, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/errors/ens.ts"],"sourcesContent":["import { BaseError } from './base.js'\n\nexport type EnsAvatarInvalidMetadataErrorType =\n  EnsAvatarInvalidMetadataError & {\n    name: 'EnsAvatarInvalidMetadataError'\n  }\nexport class EnsAvatarInvalidMetadataError extends BaseError {\n  constructor({ data }: { data: any }) {\n    super(\n      'Unable to extract image from metadata. The metadata may be malformed or invalid.',\n      {\n        metaMessages: [\n          '- Metadata must be a JSON object with at least an `image`, `image_url` or `image_data` property.',\n          '',\n          `Provided data: ${JSON.stringify(data)}`,\n        ],\n        name: 'EnsAvatarInvalidMetadataError',\n      },\n    )\n  }\n}\n\nexport type EnsAvatarInvalidNftUriErrorType = EnsAvatarInvalidNftUriError & {\n  name: 'EnsAvatarInvalidNftUriError'\n}\nexport class EnsAvatarInvalidNftUriError extends BaseError {\n  constructor({ reason }: { reason: string }) {\n    super(`ENS NFT avatar URI is invalid. ${reason}`, {\n      name: 'EnsAvatarInvalidNftUriError',\n    })\n  }\n}\n\nexport type EnsAvatarUriResolutionErrorType = EnsAvatarUriResolutionError & {\n  name: 'EnsAvatarUriResolutionError'\n}\nexport class EnsAvatarUriResolutionError extends BaseError {\n  constructor({ uri }: { uri: string }) {\n    super(\n      `Unable to resolve ENS avatar URI \"${uri}\". The URI may be malformed, invalid, or does not respond with a valid image.`,\n      { name: 'EnsAvatarUriResolutionError' },\n    )\n  }\n}\n\nexport type EnsAvatarUnsupportedNamespaceErrorType =\n  EnsAvatarUnsupportedNamespaceError & {\n    name: 'EnsAvatarUnsupportedNamespaceError'\n  }\nexport class EnsAvatarUnsupportedNamespaceError extends BaseError {\n  constructor({ namespace }: { namespace: string }) {\n    super(\n      `ENS NFT avatar namespace \"${namespace}\" is not supported. Must be \"erc721\" or \"erc1155\".`,\n      { name: 'EnsAvatarUnsupportedNamespaceError' },\n    )\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;AAMM,MAAO,sCAAsC,0IAAA,CAAA,YAAS;IAC1D,YAAY,EAAE,IAAI,EAAiB,CAAA;QACjC,KAAK,CACH,oFACA;YACE,cAAc;gBACZ;gBACA;gBACA,CAAA,eAAA,EAAkB,KAAK,SAAS,CAAC,MAAK,CAAE;aACzC;YACD,MAAM;;IAGZ;;AAMI,MAAO,oCAAoC,0IAAA,CAAA,YAAS;IACxD,YAAY,EAAE,MAAM,EAAsB,CAAA;QACxC,KAAK,CAAC,CAAA,+BAAA,EAAkC,OAAM,CAAE,EAAE;YAChD,MAAM;;IAEV;;AAMI,MAAO,oCAAoC,0IAAA,CAAA,YAAS;IACxD,YAAY,EAAE,GAAG,EAAmB,CAAA;QAClC,KAAK,CACH,CAAA,kCAAA,EAAqC,IAAG,6EAAA,CAA+E,EACvH;YAAE,MAAM;QAA6B;IAEzC;;AAOI,MAAO,2CAA2C,0IAAA,CAAA,YAAS;IAC/D,YAAY,EAAE,SAAS,EAAyB,CAAA;QAC9C,KAAK,CACH,CAAA,0BAAA,EAA6B,UAAS,kDAAA,CAAoD,EAC1F;YAAE,MAAM;QAAoC;IAEhD"}},
    {"offset": {"line": 6696, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6701, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/ens/avatar/utils.ts"],"sourcesContent":["import type { Address } from 'abitype'\n\nimport {\n  type ReadContractErrorType,\n  readContract,\n} from '../../../actions/public/readContract.js'\nimport type { Client } from '../../../clients/createClient.js'\nimport type { Transport } from '../../../clients/transports/createTransport.js'\nimport {\n  EnsAvatarInvalidMetadataError,\n  type EnsAvatarInvalidMetadataErrorType,\n  EnsAvatarInvalidNftUriError,\n  type EnsAvatarInvalidNftUriErrorType,\n  EnsAvatarUnsupportedNamespaceError,\n  type EnsAvatarUnsupportedNamespaceErrorType,\n  EnsAvatarUriResolutionError,\n  type EnsAvatarUriResolutionErrorType,\n} from '../../../errors/ens.js'\nimport type { ErrorType } from '../../../errors/utils.js'\nimport type { Chain } from '../../../types/chain.js'\nimport type { AssetGatewayUrls } from '../../../types/ens.js'\n\ntype UriItem = {\n  uri: string\n  isOnChain: boolean\n  isEncoded: boolean\n}\n\nconst networkRegex =\n  /(?<protocol>https?:\\/\\/[^\\/]*|ipfs:\\/|ipns:\\/|ar:\\/)?(?<root>\\/)?(?<subpath>ipfs\\/|ipns\\/)?(?<target>[\\w\\-.]+)(?<subtarget>\\/.*)?/\nconst ipfsHashRegex =\n  /^(Qm[1-9A-HJ-NP-Za-km-z]{44,}|b[A-Za-z2-7]{58,}|B[A-Z2-7]{58,}|z[1-9A-HJ-NP-Za-km-z]{48,}|F[0-9A-F]{50,})(\\/(?<target>[\\w\\-.]+))?(?<subtarget>\\/.*)?$/\nconst base64Regex = /^data:([a-zA-Z\\-/+]*);base64,([^\"].*)/\nconst dataURIRegex = /^data:([a-zA-Z\\-/+]*)?(;[a-zA-Z0-9].*?)?(,)/\n\ntype IsImageUriErrorType = ErrorType\n\n/** @internal */\nexport async function isImageUri(uri: string) {\n  try {\n    const res = await fetch(uri, { method: 'HEAD' })\n    // retrieve content type header to check if content is image\n    if (res.status === 200) {\n      const contentType = res.headers.get('content-type')\n      return contentType?.startsWith('image/')\n    }\n    return false\n  } catch (error: any) {\n    // if error is not cors related then fail\n    if (typeof error === 'object' && typeof error.response !== 'undefined') {\n      return false\n    }\n    // fail in NodeJS, since the error is not cors but any other network issue\n    // biome-ignore lint/suspicious/noPrototypeBuiltins:\n    if (!globalThis.hasOwnProperty('Image')) return false\n    // in case of cors, use image api to validate if given url is an actual image\n    return new Promise((resolve) => {\n      const img = new Image()\n      img.onload = () => {\n        resolve(true)\n      }\n      img.onerror = () => {\n        resolve(false)\n      }\n      img.src = uri\n    })\n  }\n}\n\ntype GetGatewayErrorType = ErrorType\n\n/** @internal */\nexport function getGateway(custom: string | undefined, defaultGateway: string) {\n  if (!custom) return defaultGateway\n  if (custom.endsWith('/')) return custom.slice(0, -1)\n  return custom\n}\n\nexport type ResolveAvatarUriErrorType =\n  | GetGatewayErrorType\n  | EnsAvatarUriResolutionErrorType\n  | ErrorType\n\nexport function resolveAvatarUri({\n  uri,\n  gatewayUrls,\n}: {\n  uri: string\n  gatewayUrls?: AssetGatewayUrls | undefined\n}): UriItem {\n  const isEncoded = base64Regex.test(uri)\n  if (isEncoded) return { uri, isOnChain: true, isEncoded }\n\n  const ipfsGateway = getGateway(gatewayUrls?.ipfs, 'https://ipfs.io')\n  const arweaveGateway = getGateway(gatewayUrls?.arweave, 'https://arweave.net')\n\n  const networkRegexMatch = uri.match(networkRegex)\n  const {\n    protocol,\n    subpath,\n    target,\n    subtarget = '',\n  } = networkRegexMatch?.groups || {}\n\n  const isIPNS = protocol === 'ipns:/' || subpath === 'ipns/'\n  const isIPFS =\n    protocol === 'ipfs:/' || subpath === 'ipfs/' || ipfsHashRegex.test(uri)\n\n  if (uri.startsWith('http') && !isIPNS && !isIPFS) {\n    let replacedUri = uri\n    if (gatewayUrls?.arweave)\n      replacedUri = uri.replace(/https:\\/\\/arweave.net/g, gatewayUrls?.arweave)\n    return { uri: replacedUri, isOnChain: false, isEncoded: false }\n  }\n\n  if ((isIPNS || isIPFS) && target) {\n    return {\n      uri: `${ipfsGateway}/${isIPNS ? 'ipns' : 'ipfs'}/${target}${subtarget}`,\n      isOnChain: false,\n      isEncoded: false,\n    }\n  }\n\n  if (protocol === 'ar:/' && target) {\n    return {\n      uri: `${arweaveGateway}/${target}${subtarget || ''}`,\n      isOnChain: false,\n      isEncoded: false,\n    }\n  }\n\n  let parsedUri = uri.replace(dataURIRegex, '')\n  if (parsedUri.startsWith('<svg')) {\n    // if svg, base64 encode\n    parsedUri = `data:image/svg+xml;base64,${btoa(parsedUri)}`\n  }\n\n  if (parsedUri.startsWith('data:') || parsedUri.startsWith('{')) {\n    return {\n      uri: parsedUri,\n      isOnChain: true,\n      isEncoded: false,\n    }\n  }\n\n  throw new EnsAvatarUriResolutionError({ uri })\n}\n\nexport type GetJsonImageErrorType =\n  | EnsAvatarInvalidMetadataErrorType\n  | ErrorType\n\nexport function getJsonImage(data: any) {\n  // validation check for json data, must include one of theses properties\n  if (\n    typeof data !== 'object' ||\n    (!('image' in data) && !('image_url' in data) && !('image_data' in data))\n  ) {\n    throw new EnsAvatarInvalidMetadataError({ data })\n  }\n\n  return data.image || data.image_url || data.image_data\n}\n\nexport type GetMetadataAvatarUriErrorType =\n  | EnsAvatarUriResolutionErrorType\n  | ParseAvatarUriErrorType\n  | GetJsonImageErrorType\n  | ErrorType\n\nexport async function getMetadataAvatarUri({\n  gatewayUrls,\n  uri,\n}: {\n  gatewayUrls?: AssetGatewayUrls | undefined\n  uri: string\n}): Promise<string> {\n  try {\n    const res = await fetch(uri).then((res) => res.json())\n    const image = await parseAvatarUri({\n      gatewayUrls,\n      uri: getJsonImage(res),\n    })\n    return image\n  } catch {\n    throw new EnsAvatarUriResolutionError({ uri })\n  }\n}\n\nexport type ParseAvatarUriErrorType =\n  | ResolveAvatarUriErrorType\n  | IsImageUriErrorType\n  | EnsAvatarUriResolutionErrorType\n  | ErrorType\n\nexport async function parseAvatarUri({\n  gatewayUrls,\n  uri,\n}: {\n  gatewayUrls?: AssetGatewayUrls | undefined\n  uri: string\n}): Promise<string> {\n  const { uri: resolvedURI, isOnChain } = resolveAvatarUri({ uri, gatewayUrls })\n  if (isOnChain) return resolvedURI\n\n  // check if resolvedURI is an image, if it is return the url\n  const isImage = await isImageUri(resolvedURI)\n  if (isImage) return resolvedURI\n\n  throw new EnsAvatarUriResolutionError({ uri })\n}\n\ntype ParsedNft = {\n  chainID: number\n  namespace: string\n  contractAddress: Address\n  tokenID: string\n}\n\nexport type ParseNftUriErrorType = EnsAvatarInvalidNftUriErrorType | ErrorType\n\nexport function parseNftUri(uri_: string): ParsedNft {\n  let uri = uri_\n  // parse valid nft spec (CAIP-22/CAIP-29)\n  // @see: https://github.com/ChainAgnostic/CAIPs/tree/master/CAIPs\n  if (uri.startsWith('did:nft:')) {\n    // convert DID to CAIP\n    uri = uri.replace('did:nft:', '').replace(/_/g, '/')\n  }\n\n  const [reference, asset_namespace, tokenID] = uri.split('/')\n  const [eip_namespace, chainID] = reference.split(':')\n  const [erc_namespace, contractAddress] = asset_namespace.split(':')\n\n  if (!eip_namespace || eip_namespace.toLowerCase() !== 'eip155')\n    throw new EnsAvatarInvalidNftUriError({ reason: 'Only EIP-155 supported' })\n  if (!chainID)\n    throw new EnsAvatarInvalidNftUriError({ reason: 'Chain ID not found' })\n  if (!contractAddress)\n    throw new EnsAvatarInvalidNftUriError({\n      reason: 'Contract address not found',\n    })\n  if (!tokenID)\n    throw new EnsAvatarInvalidNftUriError({ reason: 'Token ID not found' })\n  if (!erc_namespace)\n    throw new EnsAvatarInvalidNftUriError({ reason: 'ERC namespace not found' })\n\n  return {\n    chainID: Number.parseInt(chainID),\n    namespace: erc_namespace.toLowerCase(),\n    contractAddress: contractAddress as Address,\n    tokenID,\n  }\n}\n\nexport type GetNftTokenUriErrorType =\n  | ReadContractErrorType\n  | EnsAvatarUnsupportedNamespaceErrorType\n  | ErrorType\n\nexport async function getNftTokenUri<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n  { nft }: { nft: ParsedNft },\n) {\n  if (nft.namespace === 'erc721') {\n    return readContract(client, {\n      address: nft.contractAddress,\n      abi: [\n        {\n          name: 'tokenURI',\n          type: 'function',\n          stateMutability: 'view',\n          inputs: [{ name: 'tokenId', type: 'uint256' }],\n          outputs: [{ name: '', type: 'string' }],\n        },\n      ],\n      functionName: 'tokenURI',\n      args: [BigInt(nft.tokenID)],\n    })\n  }\n  if (nft.namespace === 'erc1155') {\n    return readContract(client, {\n      address: nft.contractAddress,\n      abi: [\n        {\n          name: 'uri',\n          type: 'function',\n          stateMutability: 'view',\n          inputs: [{ name: '_id', type: 'uint256' }],\n          outputs: [{ name: '', type: 'string' }],\n        },\n      ],\n      functionName: 'uri',\n      args: [BigInt(nft.tokenID)],\n    })\n  }\n  throw new EnsAvatarUnsupportedNamespaceError({ namespace: nft.namespace })\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 6939, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6944, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/ens/avatar/parseAvatarRecord.ts"],"sourcesContent":["import type { Client } from '../../../clients/createClient.js'\nimport type { Transport } from '../../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../../errors/utils.js'\nimport type { Chain } from '../../../types/chain.js'\nimport type { AssetGatewayUrls } from '../../../types/ens.js'\n\nimport {\n  type GetJsonImageErrorType,\n  type GetMetadataAvatarUriErrorType,\n  type GetNftTokenUriErrorType,\n  type ParseAvatarUriErrorType,\n  type ParseNftUriErrorType,\n  type ResolveAvatarUriErrorType,\n  getJsonImage,\n  getMetadataAvatarUri,\n  getNftTokenUri,\n  parseAvatarUri,\n  parseNftUri,\n  resolveAvatarUri,\n} from './utils.js'\n\nexport type ParseAvatarRecordErrorType =\n  | ParseNftAvatarUriErrorType\n  | ParseAvatarUriErrorType\n  | ErrorType\n\n/*\n * @description Parses an ENS avatar record.\n *\n * @example\n * parseAvatarRecord('eip155:1/erc1155:0xb32979486938aa9694bfc898f35dbed459f44424/10063')\n * 'https://ipfs.io/ipfs/QmSP4nq9fnN9dAiCj42ug9Wa79rqmQerZXZch82VqpiH7U/image.gif'\n *\n * @see https://docs.ens.domains/web/avatars\n *\n */\nexport async function parseAvatarRecord<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n  {\n    gatewayUrls,\n    record,\n  }: {\n    gatewayUrls?: AssetGatewayUrls | undefined\n    record: string\n  },\n): Promise<string> {\n  if (/eip155:/i.test(record))\n    return parseNftAvatarUri(client, { gatewayUrls, record })\n  return parseAvatarUri({ uri: record, gatewayUrls })\n}\n\ntype ParseNftAvatarUriErrorType =\n  | ParseNftUriErrorType\n  | GetNftTokenUriErrorType\n  | ResolveAvatarUriErrorType\n  | ParseAvatarUriErrorType\n  | GetJsonImageErrorType\n  | GetMetadataAvatarUriErrorType\n  | ErrorType\n\nasync function parseNftAvatarUri<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n  {\n    gatewayUrls,\n    record,\n  }: {\n    gatewayUrls?: AssetGatewayUrls | undefined\n    record: string\n  },\n): Promise<string> {\n  // parse NFT URI into properties\n  const nft = parseNftUri(record)\n  // fetch tokenURI from the NFT contract\n  const nftUri = await getNftTokenUri(client, { nft })\n  // resolve the URI from the fetched tokenURI\n  const {\n    uri: resolvedNftUri,\n    isOnChain,\n    isEncoded,\n  } = resolveAvatarUri({ uri: nftUri, gatewayUrls })\n\n  // if the resolved URI is on chain, return the data\n  if (\n    isOnChain &&\n    (resolvedNftUri.includes('data:application/json;base64,') ||\n      resolvedNftUri.startsWith('{'))\n  ) {\n    const encodedJson = isEncoded\n      ? // if it is encoded, decode it\n        atob(resolvedNftUri.replace('data:application/json;base64,', ''))\n      : // if it isn't encoded assume it is a JSON string, but it could be anything (it will error if it is)\n        resolvedNftUri\n\n    const decoded = JSON.parse(encodedJson)\n    return parseAvatarUri({ uri: getJsonImage(decoded), gatewayUrls })\n  }\n\n  let uriTokenId = nft.tokenID\n  if (nft.namespace === 'erc1155')\n    uriTokenId = uriTokenId.replace('0x', '').padStart(64, '0')\n\n  return getMetadataAvatarUri({\n    gatewayUrls,\n    uri: resolvedNftUri.replace(/(?:0x)?{id}/, uriTokenId),\n  })\n}\n"],"names":[],"mappings":";;;;;;AAoCO,eAAe,kBACpB,MAAgC,EAChC,EACE,WAAW,EACX,MAAM,EAIP;IAED,IAAI,WAAW,IAAI,CAAC,SAClB,OAAO,kBAAkB,QAAQ;QAAE;QAAa;IAAM;IACxD,OAAO,CAAA,GAAA,2JAAA,CAAA,iBAAc,AAAd,EAAe;QAAE,KAAK;QAAQ;IAAW;AAClD;AAWA,eAAe,kBACb,MAAgC,EAChC,EACE,WAAW,EACX,MAAM,EAIP;IAED,gCAAgC;IAChC,MAAM,MAAM,CAAA,GAAA,2JAAA,CAAA,cAAW,AAAX,EAAY;IACxB,uCAAuC;IACvC,MAAM,SAAS,MAAM,CAAA,GAAA,2JAAA,CAAA,iBAAc,AAAd,EAAe,QAAQ;QAAE;IAAG;IACjD,4CAA4C;IAC5C,MAAM,EACJ,KAAK,cAAc,EACnB,SAAS,EACT,SAAS,EACV,GAAG,CAAA,GAAA,2JAAA,CAAA,mBAAgB,AAAhB,EAAiB;QAAE,KAAK;QAAQ;IAAW;IAE/C,mDAAmD;IACnD,IACE,aACA,CAAC,eAAe,QAAQ,CAAC,oCACvB,eAAe,UAAU,CAAC,IAAI,GAChC;QACA,MAAM,cAAc,YAEhB,KAAK,eAAe,OAAO,CAAC,iCAAiC,OAE7D;QAEJ,MAAM,UAAU,KAAK,KAAK,CAAC;QAC3B,OAAO,CAAA,GAAA,2JAAA,CAAA,iBAAc,AAAd,EAAe;YAAE,KAAK,CAAA,GAAA,2JAAA,CAAA,eAAY,AAAZ,EAAa;YAAU;QAAW;IACjE;IAEA,IAAI,aAAa,IAAI,OAAO;IAC5B,IAAI,IAAI,SAAS,KAAK,WACpB,aAAa,WAAW,OAAO,CAAC,MAAM,IAAI,QAAQ,CAAC,IAAI;IAEzD,OAAO,CAAA,GAAA,2JAAA,CAAA,uBAAoB,AAApB,EAAqB;QAC1B;QACA,KAAK,eAAe,OAAO,CAAC,eAAe;;AAE/C"}},
    {"offset": {"line": 6988, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6993, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/ens/errors.ts"],"sourcesContent":["import { panicReasons } from '../../constants/solidity.js'\nimport { BaseError } from '../../errors/base.js'\nimport { ContractFunctionRevertedError } from '../../errors/contract.js'\nimport type { ErrorType } from '../../errors/utils.js'\n\n/** @internal */\nexport type IsNullUniversalResolverErrorErrorType = ErrorType\n\n/*\n * @description Checks if error is a valid null result UniversalResolver error\n */\nexport function isNullUniversalResolverError(\n  err: unknown,\n  callType: 'resolve' | 'reverse',\n): boolean {\n  if (!(err instanceof BaseError)) return false\n  const cause = err.walk((e) => e instanceof ContractFunctionRevertedError)\n  if (!(cause instanceof ContractFunctionRevertedError)) return false\n  if (cause.data?.errorName === 'ResolverNotFound') return true\n  if (cause.data?.errorName === 'ResolverWildcardNotSupported') return true\n  if (cause.data?.errorName === 'ResolverNotContract') return true\n  if (cause.data?.errorName === 'ResolverError') return true\n  if (cause.data?.errorName === 'HttpError') return true\n  // Backwards compatibility for older UniversalResolver contracts\n  if (\n    cause.reason?.includes(\n      'Wildcard on non-extended resolvers is not supported',\n    )\n  )\n    return true\n  // No primary name set for address.\n  if (callType === 'reverse' && cause.reason === panicReasons[50]) return true\n  return false\n}\n"],"names":[],"mappings":";;;;;;;;;;AAWM,SAAU,6BACd,GAAY,EACZ,QAA+B;IAE/B,IAAI,CAAC,CAAC,eAAe,0IAAA,CAAA,YAAS,GAAG,OAAO;IACxC,MAAM,QAAQ,IAAI,IAAI,CAAC,CAAC,IAAM,aAAa,8IAAA,CAAA,gCAA6B;IACxE,IAAI,CAAC,CAAC,iBAAiB,8IAAA,CAAA,gCAA6B,GAAG,OAAO;IAC9D,IAAI,MAAM,IAAI,EAAE,cAAc,oBAAoB,OAAO;IACzD,IAAI,MAAM,IAAI,EAAE,cAAc,gCAAgC,OAAO;IACrE,IAAI,MAAM,IAAI,EAAE,cAAc,uBAAuB,OAAO;IAC5D,IAAI,MAAM,IAAI,EAAE,cAAc,iBAAiB,OAAO;IACtD,IAAI,MAAM,IAAI,EAAE,cAAc,aAAa,OAAO;IAClD,gEAAgE;IAChE,IACE,MAAM,MAAM,EAAE,SACZ,wDAGF,OAAO;IACT,mCAAmC;IACnC,IAAI,aAAa,aAAa,MAAM,MAAM,KAAK,iJAAA,CAAA,eAAY,CAAC,GAAG,EAAE,OAAO;IACxE,OAAO;AACT"}},
    {"offset": {"line": 7018, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7023, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/ens/encodedLabelToLabelhash.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\nimport type { Hex } from '../../types/misc.js'\nimport { type IsHexErrorType, isHex } from '../data/isHex.js'\n\nexport type EncodedLabelToLabelhashErrorType = IsHexErrorType | ErrorType\n\nexport function encodedLabelToLabelhash(label: string): Hex | null {\n  if (label.length !== 66) return null\n  if (label.indexOf('[') !== 0) return null\n  if (label.indexOf(']') !== 65) return null\n  const hash = `0x${label.slice(1, 65)}`\n  if (!isHex(hash)) return null\n  return hash\n}\n"],"names":[],"mappings":";;;;;;AAMM,SAAU,wBAAwB,KAAa;IACnD,IAAI,MAAM,MAAM,KAAK,IAAI,OAAO;IAChC,IAAI,MAAM,OAAO,CAAC,SAAS,GAAG,OAAO;IACrC,IAAI,MAAM,OAAO,CAAC,SAAS,IAAI,OAAO;IACtC,MAAM,OAAO,CAAA,EAAA,EAAK,MAAM,KAAK,CAAC,GAAG,IAAG,CAAE;IACtC,IAAI,CAAC,CAAA,GAAA,kJAAA,CAAA,QAAK,AAAL,EAAM,OAAO,OAAO;IACzB,OAAO;AACT"}},
    {"offset": {"line": 7037, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7042, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/ens/namehash.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\nimport { type ConcatErrorType, concat } from '../data/concat.js'\nimport {\n  type StringToBytesErrorType,\n  type ToBytesErrorType,\n  stringToBytes,\n  toBytes,\n} from '../encoding/toBytes.js'\nimport { type BytesToHexErrorType, bytesToHex } from '../encoding/toHex.js'\nimport { type Keccak256ErrorType, keccak256 } from '../hash/keccak256.js'\nimport {\n  type EncodedLabelToLabelhashErrorType,\n  encodedLabelToLabelhash,\n} from './encodedLabelToLabelhash.js'\n\nexport type NamehashErrorType =\n  | BytesToHexErrorType\n  | EncodedLabelToLabelhashErrorType\n  | ToBytesErrorType\n  | Keccak256ErrorType\n  | StringToBytesErrorType\n  | ConcatErrorType\n  | ErrorType\n\n/**\n * @description Hashes ENS name\n *\n * - Since ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS names](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `namehash`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize) function for this.\n *\n * @example\n * namehash('wevm.eth')\n * '0xf246651c1b9a6b141d19c2604e9a58f567973833990f830d882534a747801359'\n *\n * @link https://eips.ethereum.org/EIPS/eip-137\n */\nexport function namehash(name: string) {\n  let result = new Uint8Array(32).fill(0)\n  if (!name) return bytesToHex(result)\n\n  const labels = name.split('.')\n  // Iterate in reverse order building up hash\n  for (let i = labels.length - 1; i >= 0; i -= 1) {\n    const hashFromEncodedLabel = encodedLabelToLabelhash(labels[i])\n    const hashed = hashFromEncodedLabel\n      ? toBytes(hashFromEncodedLabel)\n      : keccak256(stringToBytes(labels[i]), 'bytes')\n    result = keccak256(concat([result, hashed]), 'bytes')\n  }\n\n  return bytesToHex(result)\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;AAmCM,SAAU,SAAS,IAAY;IACnC,IAAI,SAAS,IAAI,WAAW,IAAI,IAAI,CAAC;IACrC,IAAI,CAAC,MAAM,OAAO,CAAA,GAAA,sJAAA,CAAA,aAAU,AAAV,EAAW;IAE7B,MAAM,SAAS,KAAK,KAAK,CAAC;IAC1B,4CAA4C;IAC5C,IAAK,IAAI,IAAI,OAAO,MAAM,GAAG,GAAG,KAAK,GAAG,KAAK,EAAG;QAC9C,MAAM,uBAAuB,CAAA,GAAA,mKAAA,CAAA,0BAAuB,AAAvB,EAAwB,MAAM,CAAC,EAAE;QAC9D,MAAM,SAAS,uBACX,CAAA,GAAA,wJAAA,CAAA,UAAO,AAAP,EAAQ,wBACR,CAAA,GAAA,sJAAA,CAAA,YAAS,AAAT,EAAU,CAAA,GAAA,wJAAA,CAAA,gBAAa,AAAb,EAAc,MAAM,CAAC,EAAE,GAAG;QACxC,SAAS,CAAA,GAAA,sJAAA,CAAA,YAAS,AAAT,EAAU,CAAA,GAAA,mJAAA,CAAA,SAAM,AAAN,EAAO;YAAC;YAAQ;SAAO,GAAG;IAC/C;IAEA,OAAO,CAAA,GAAA,sJAAA,CAAA,aAAU,AAAV,EAAW;AACpB"}},
    {"offset": {"line": 7071, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7076, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/ens/encodeLabelhash.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\nimport type { Hex } from '../../types/misc.js'\n\nexport type EncodeLabelhashErrorType = ErrorType\n\nexport function encodeLabelhash(hash: Hex): `[${string}]` {\n  return `[${hash.slice(2)}]`\n}\n"],"names":[],"mappings":";;;AAKM,SAAU,gBAAgB,IAAS;IACvC,OAAO,CAAA,CAAA,EAAI,KAAK,KAAK,CAAC,GAAE,CAAA,CAAG;AAC7B"}},
    {"offset": {"line": 7082, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7087, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/ens/labelhash.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\nimport {\n  type StringToBytesErrorType,\n  stringToBytes,\n} from '../encoding/toBytes.js'\nimport { type BytesToHexErrorType, bytesToHex } from '../encoding/toHex.js'\nimport { type Keccak256ErrorType, keccak256 } from '../hash/keccak256.js'\nimport {\n  type EncodedLabelToLabelhashErrorType,\n  encodedLabelToLabelhash,\n} from './encodedLabelToLabelhash.js'\n\nexport type LabelhashErrorType =\n  | BytesToHexErrorType\n  | EncodedLabelToLabelhashErrorType\n  | Keccak256ErrorType\n  | StringToBytesErrorType\n  | ErrorType\n\n/**\n * @description Hashes ENS label\n *\n * - Since ENS labels prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS labels](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `labelhash`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize) function for this.\n *\n * @example\n * labelhash('eth')\n * '0x4f5b812789fc606be1b3b16908db13fc7a9adf7ca72641f84d75b47069d3d7f0'\n */\nexport function labelhash(label: string) {\n  const result = new Uint8Array(32).fill(0)\n  if (!label) return bytesToHex(result)\n  return encodedLabelToLabelhash(label) || keccak256(stringToBytes(label))\n}\n"],"names":[],"mappings":";;;;;;;;;;;;AA4BM,SAAU,UAAU,KAAa;IACrC,MAAM,SAAS,IAAI,WAAW,IAAI,IAAI,CAAC;IACvC,IAAI,CAAC,OAAO,OAAO,CAAA,GAAA,sJAAA,CAAA,aAAU,AAAV,EAAW;IAC9B,OAAO,CAAA,GAAA,mKAAA,CAAA,0BAAuB,AAAvB,EAAwB,UAAU,CAAA,GAAA,sJAAA,CAAA,YAAS,AAAT,EAAU,CAAA,GAAA,wJAAA,CAAA,gBAAa,AAAb,EAAc;AACnE"}},
    {"offset": {"line": 7104, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7109, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/ens/packetToBytes.ts"],"sourcesContent":["// Adapted from https://github.com/mafintosh/dns-packet\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray } from '../../types/misc.js'\nimport {\n  type StringToBytesErrorType,\n  stringToBytes,\n} from '../encoding/toBytes.js'\nimport {\n  type EncodeLabelhashErrorType,\n  encodeLabelhash,\n} from './encodeLabelhash.js'\nimport { type LabelhashErrorType, labelhash } from './labelhash.js'\n\nexport type PacketToBytesErrorType =\n  | EncodeLabelhashErrorType\n  | LabelhashErrorType\n  | StringToBytesErrorType\n  | ErrorType\n\n/*\n * @description Encodes a DNS packet into a ByteArray containing a UDP payload.\n *\n * @example\n * packetToBytes('awkweb.eth')\n * '0x0661776b7765620365746800'\n *\n * @see https://docs.ens.domains/resolution/names#dns\n *\n */\nexport function packetToBytes(packet: string): ByteArray {\n  // strip leading and trailing `.`\n  const value = packet.replace(/^\\.|\\.$/gm, '')\n  if (value.length === 0) return new Uint8Array(1)\n\n  const bytes = new Uint8Array(stringToBytes(value).byteLength + 2)\n\n  let offset = 0\n  const list = value.split('.')\n  for (let i = 0; i < list.length; i++) {\n    let encoded = stringToBytes(list[i])\n    // if the length is > 255, make the encoded label value a labelhash\n    // this is compatible with the universal resolver\n    if (encoded.byteLength > 255)\n      encoded = stringToBytes(encodeLabelhash(labelhash(list[i])))\n    bytes[offset] = encoded.length\n    bytes.set(encoded, offset + 1)\n    offset += encoded.length + 1\n  }\n\n  if (bytes.byteLength !== offset + 1) return bytes.slice(0, offset + 1)\n\n  return bytes\n}\n"],"names":[],"mappings":";;;;;;;;;;AA6BM,SAAU,cAAc,MAAc;IAC1C,iCAAiC;IACjC,MAAM,QAAQ,OAAO,OAAO,CAAC,aAAa;IAC1C,IAAI,MAAM,MAAM,KAAK,GAAG,OAAO,IAAI,WAAW;IAE9C,MAAM,QAAQ,IAAI,WAAW,CAAA,GAAA,wJAAA,CAAA,gBAAa,AAAb,EAAc,OAAO,UAAU,GAAG;IAE/D,IAAI,SAAS;IACb,MAAM,OAAO,MAAM,KAAK,CAAC;IACzB,IAAK,IAAI,IAAI,GAAG,IAAI,KAAK,MAAM,EAAE,IAAK;QACpC,IAAI,UAAU,CAAA,GAAA,wJAAA,CAAA,gBAAa,AAAb,EAAc,IAAI,CAAC,EAAE;QACnC,mEAAmE;QACnE,iDAAiD;QACjD,IAAI,QAAQ,UAAU,GAAG,KACvB,UAAU,CAAA,GAAA,wJAAA,CAAA,gBAAa,AAAb,EAAc,CAAA,GAAA,2JAAA,CAAA,kBAAe,AAAf,EAAgB,CAAA,GAAA,qJAAA,CAAA,YAAS,AAAT,EAAU,IAAI,CAAC,EAAE;QAC3D,KAAK,CAAC,OAAO,GAAG,QAAQ,MAAM;QAC9B,MAAM,GAAG,CAAC,SAAS,SAAS;QAC5B,UAAU,QAAQ,MAAM,GAAG;IAC7B;IAEA,IAAI,MAAM,UAAU,KAAK,SAAS,GAAG,OAAO,MAAM,KAAK,CAAC,GAAG,SAAS;IAEpE,OAAO;AACT"}},
    {"offset": {"line": 7138, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7143, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/actions/ens/getEnsText.ts"],"sourcesContent":["import type { Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport {\n  textResolverAbi,\n  universalResolverResolveAbi,\n} from '../../constants/abis.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Prettify } from '../../types/utils.js'\nimport {\n  type DecodeFunctionResultErrorType,\n  decodeFunctionResult,\n} from '../../utils/abi/decodeFunctionResult.js'\nimport {\n  type EncodeFunctionDataErrorType,\n  encodeFunctionData,\n} from '../../utils/abi/encodeFunctionData.js'\nimport {\n  type GetChainContractAddressErrorType,\n  getChainContractAddress,\n} from '../../utils/chain/getChainContractAddress.js'\nimport { type ToHexErrorType, toHex } from '../../utils/encoding/toHex.js'\nimport { isNullUniversalResolverError } from '../../utils/ens/errors.js'\nimport { type NamehashErrorType, namehash } from '../../utils/ens/namehash.js'\nimport {\n  type PacketToBytesErrorType,\n  packetToBytes,\n} from '../../utils/ens/packetToBytes.js'\nimport { getAction } from '../../utils/getAction.js'\nimport {\n  type ReadContractErrorType,\n  type ReadContractParameters,\n  readContract,\n} from '../public/readContract.js'\n\nexport type GetEnsTextParameters = Prettify<\n  Pick<ReadContractParameters, 'blockNumber' | 'blockTag'> & {\n    /** ENS name to get Text for. */\n    name: string\n    /** Universal Resolver gateway URLs to use for resolving CCIP-read requests. */\n    gatewayUrls?: string[] | undefined\n    /** Text record to retrieve. */\n    key: string\n    /** Whether or not to throw errors propagated from the ENS Universal Resolver Contract. */\n    strict?: boolean | undefined\n    /** Address of ENS Universal Resolver Contract. */\n    universalResolverAddress?: Address | undefined\n  }\n>\n\nexport type GetEnsTextReturnType = string | null\n\nexport type GetEnsTextErrorType =\n  | GetChainContractAddressErrorType\n  | ReadContractErrorType\n  | ToHexErrorType\n  | PacketToBytesErrorType\n  | EncodeFunctionDataErrorType\n  | NamehashErrorType\n  | DecodeFunctionResultErrorType\n\n/**\n * Gets a text record for specified ENS name.\n *\n * - Docs: https://viem.sh/docs/ens/actions/getEnsResolver\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/ens\n *\n * Calls `resolve(bytes, bytes)` on ENS Universal Resolver Contract.\n *\n * Since ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS names](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `getEnsAddress`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize) function for this.\n *\n * @param client - Client to use\n * @param parameters - {@link GetEnsTextParameters}\n * @returns Address for ENS resolver. {@link GetEnsTextReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getEnsText, normalize } from 'viem/ens'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const twitterRecord = await getEnsText(client, {\n *   name: normalize('wevm.eth'),\n *   key: 'com.twitter',\n * })\n * // 'wevm_dev'\n */\nexport async function getEnsText<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n  {\n    blockNumber,\n    blockTag,\n    name,\n    key,\n    gatewayUrls,\n    strict,\n    universalResolverAddress: universalResolverAddress_,\n  }: GetEnsTextParameters,\n): Promise<GetEnsTextReturnType> {\n  let universalResolverAddress = universalResolverAddress_\n  if (!universalResolverAddress) {\n    if (!client.chain)\n      throw new Error(\n        'client chain not configured. universalResolverAddress is required.',\n      )\n\n    universalResolverAddress = getChainContractAddress({\n      blockNumber,\n      chain: client.chain,\n      contract: 'ensUniversalResolver',\n    })\n  }\n\n  try {\n    const readContractParameters = {\n      address: universalResolverAddress,\n      abi: universalResolverResolveAbi,\n      functionName: 'resolve',\n      args: [\n        toHex(packetToBytes(name)),\n        encodeFunctionData({\n          abi: textResolverAbi,\n          functionName: 'text',\n          args: [namehash(name), key],\n        }),\n      ],\n      blockNumber,\n      blockTag,\n    } as const\n\n    const readContractAction = getAction(client, readContract, 'readContract')\n\n    const res = gatewayUrls\n      ? await readContractAction({\n          ...readContractParameters,\n          args: [...readContractParameters.args, gatewayUrls],\n        })\n      : await readContractAction(readContractParameters)\n\n    if (res[0] === '0x') return null\n\n    const record = decodeFunctionResult({\n      abi: textResolverAbi,\n      functionName: 'text',\n      data: res[0],\n    })\n\n    return record === '' ? null : record\n  } catch (err) {\n    if (strict) throw err\n    if (isNullUniversalResolverError(err, 'resolve')) return null\n    throw err\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AA2FO,eAAe,WACpB,MAAgC,EAChC,EACE,WAAW,EACX,QAAQ,EACR,IAAI,EACJ,GAAG,EACH,WAAW,EACX,MAAM,EACN,0BAA0B,yBAAyB,EAC9B;IAEvB,IAAI,2BAA2B;IAC/B,IAAI,CAAC,0BAA0B;QAC7B,IAAI,CAAC,OAAO,KAAK,EACf,MAAM,IAAI,MACR;QAGJ,2BAA2B,CAAA,GAAA,qKAAA,CAAA,0BAAuB,AAAvB,EAAwB;YACjD;YACA,OAAO,OAAO,KAAK;YACnB,UAAU;;IAEd;IAEA,IAAI;QACF,MAAM,yBAAyB;YAC7B,SAAS;YACT,KAAK,6IAAA,CAAA,8BAA2B;YAChC,cAAc;YACd,MAAM;gBACJ,CAAA,GAAA,sJAAA,CAAA,QAAK,AAAL,EAAM,CAAA,GAAA,yJAAA,CAAA,gBAAa,AAAb,EAAc;gBACpB,CAAA,GAAA,8JAAA,CAAA,qBAAkB,AAAlB,EAAmB;oBACjB,KAAK,6IAAA,CAAA,kBAAe;oBACpB,cAAc;oBACd,MAAM;wBAAC,CAAA,GAAA,oJAAA,CAAA,WAAQ,AAAR,EAAS;wBAAO;qBAAI;;aAE9B;YACD;YACA;;QAGF,MAAM,qBAAqB,CAAA,GAAA,8IAAA,CAAA,YAAS,AAAT,EAAU,QAAQ,6JAAA,CAAA,eAAY,EAAE;QAE3D,MAAM,MAAM,cACR,MAAM,mBAAmB;YACvB,GAAG,sBAAsB;YACzB,MAAM;mBAAI,uBAAuB,IAAI;gBAAE;aAAY;aAErD,MAAM,mBAAmB;QAE7B,IAAI,GAAG,CAAC,EAAE,KAAK,MAAM,OAAO;QAE5B,MAAM,SAAS,CAAA,GAAA,gKAAA,CAAA,uBAAoB,AAApB,EAAqB;YAClC,KAAK,6IAAA,CAAA,kBAAe;YACpB,cAAc;YACd,MAAM,GAAG,CAAC,EAAE;;QAGd,OAAO,WAAW,KAAK,OAAO;IAChC,EAAE,OAAO,KAAK;QACZ,IAAI,QAAQ,MAAM;QAClB,IAAI,CAAA,GAAA,kJAAA,CAAA,+BAA4B,AAA5B,EAA6B,KAAK,YAAY,OAAO;QACzD,MAAM;IACR;AACF"}},
    {"offset": {"line": 7217, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7222, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/actions/ens/getEnsAvatar.ts"],"sourcesContent":["import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { AssetGatewayUrls } from '../../types/ens.js'\nimport type { Prettify } from '../../types/utils.js'\nimport {\n  type ParseAvatarRecordErrorType,\n  parseAvatarRecord,\n} from '../../utils/ens/avatar/parseAvatarRecord.js'\nimport { getAction } from '../../utils/getAction.js'\n\nimport {\n  type GetEnsTextErrorType,\n  type GetEnsTextParameters,\n  getEnsText,\n} from './getEnsText.js'\n\nexport type GetEnsAvatarParameters = Prettify<\n  Omit<GetEnsTextParameters, 'key'> & {\n    /** Gateway urls to resolve IPFS and/or Arweave assets. */\n    assetGatewayUrls?: AssetGatewayUrls | undefined\n  }\n>\n\nexport type GetEnsAvatarReturnType = string | null\n\nexport type GetEnsAvatarErrorType =\n  | GetEnsTextErrorType\n  | ParseAvatarRecordErrorType\n  | ErrorType\n\n/**\n * Gets the avatar of an ENS name.\n *\n * - Docs: https://viem.sh/docs/ens/actions/getEnsAvatar\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/ens\n *\n * Calls [`getEnsText`](https://viem.sh/docs/ens/actions/getEnsText) with `key` set to `'avatar'`.\n *\n * Since ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS names](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `getEnsAddress`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize) function for this.\n *\n * @param client - Client to use\n * @param parameters - {@link GetEnsAvatarParameters}\n * @returns Avatar URI or `null` if not found. {@link GetEnsAvatarReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getEnsAvatar, normalize } from 'viem/ens'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const ensAvatar = await getEnsAvatar(client, {\n *   name: normalize('wevm.eth'),\n * })\n * // 'https://ipfs.io/ipfs/Qma8mnp6xV3J2cRNf3mTth5C8nV11CAnceVinc3y8jSbio'\n */\nexport async function getEnsAvatar<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n  {\n    blockNumber,\n    blockTag,\n    assetGatewayUrls,\n    name,\n    gatewayUrls,\n    strict,\n    universalResolverAddress,\n  }: GetEnsAvatarParameters,\n): Promise<GetEnsAvatarReturnType> {\n  const record = await getAction(\n    client,\n    getEnsText,\n    'getEnsText',\n  )({\n    blockNumber,\n    blockTag,\n    key: 'avatar',\n    name,\n    universalResolverAddress,\n    gatewayUrls,\n    strict,\n  })\n  if (!record) return null\n  try {\n    return await parseAvatarRecord(client, {\n      record,\n      gatewayUrls: assetGatewayUrls,\n    })\n  } catch {\n    return null\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;;AA4DO,eAAe,aACpB,MAAgC,EAChC,EACE,WAAW,EACX,QAAQ,EACR,gBAAgB,EAChB,IAAI,EACJ,WAAW,EACX,MAAM,EACN,wBAAwB,EACD;IAEzB,MAAM,SAAS,MAAM,CAAA,GAAA,8IAAA,CAAA,YAAS,AAAT,EACnB,QACA,wJAAA,CAAA,aAAU,EACV,cACA;QACA;QACA;QACA,KAAK;QACL;QACA;QACA;QACA;;IAEF,IAAI,CAAC,QAAQ,OAAO;IACpB,IAAI;QACF,OAAO,MAAM,CAAA,GAAA,uKAAA,CAAA,oBAAiB,AAAjB,EAAkB,QAAQ;YACrC;YACA,aAAa;;IAEjB,EAAE,OAAM;QACN,OAAO;IACT;AACF"}},
    {"offset": {"line": 7252, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7257, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/actions/ens/getEnsName.ts"],"sourcesContent":["import type { Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport { universalResolverReverseAbi } from '../../constants/abis.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Prettify } from '../../types/utils.js'\nimport {\n  type GetChainContractAddressErrorType,\n  getChainContractAddress,\n} from '../../utils/chain/getChainContractAddress.js'\nimport { type ToHexErrorType, toHex } from '../../utils/encoding/toHex.js'\nimport { isNullUniversalResolverError } from '../../utils/ens/errors.js'\nimport {\n  type PacketToBytesErrorType,\n  packetToBytes,\n} from '../../utils/ens/packetToBytes.js'\nimport { getAction } from '../../utils/getAction.js'\nimport {\n  type ReadContractErrorType,\n  type ReadContractParameters,\n  readContract,\n} from '../public/readContract.js'\n\nexport type GetEnsNameParameters = Prettify<\n  Pick<ReadContractParameters, 'blockNumber' | 'blockTag'> & {\n    /** Address to get ENS name for. */\n    address: Address\n    /** Universal Resolver gateway URLs to use for resolving CCIP-read requests. */\n    gatewayUrls?: string[] | undefined\n    /** Whether or not to throw errors propagated from the ENS Universal Resolver Contract. */\n    strict?: boolean | undefined\n    /** Address of ENS Universal Resolver Contract. */\n    universalResolverAddress?: Address | undefined\n  }\n>\n\nexport type GetEnsNameReturnType = string | null\n\nexport type GetEnsNameErrorType =\n  | GetChainContractAddressErrorType\n  | ReadContractErrorType\n  | ToHexErrorType\n  | PacketToBytesErrorType\n  | ErrorType\n\n/**\n * Gets primary name for specified address.\n *\n * - Docs: https://viem.sh/docs/ens/actions/getEnsName\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/ens\n *\n * Calls `reverse(bytes)` on ENS Universal Resolver Contract to \"reverse resolve\" the address to the primary ENS name.\n *\n * @param client - Client to use\n * @param parameters - {@link GetEnsNameParameters}\n * @returns Name or `null` if not found. {@link GetEnsNameReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getEnsName } from 'viem/ens'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const ensName = await getEnsName(client, {\n *   address: '0xd2135CfB216b74109775236E36d4b433F1DF507B',\n * })\n * // 'wevm.eth'\n */\nexport async function getEnsName<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n  {\n    address,\n    blockNumber,\n    blockTag,\n    gatewayUrls,\n    strict,\n    universalResolverAddress: universalResolverAddress_,\n  }: GetEnsNameParameters,\n): Promise<GetEnsNameReturnType> {\n  let universalResolverAddress = universalResolverAddress_\n  if (!universalResolverAddress) {\n    if (!client.chain)\n      throw new Error(\n        'client chain not configured. universalResolverAddress is required.',\n      )\n\n    universalResolverAddress = getChainContractAddress({\n      blockNumber,\n      chain: client.chain,\n      contract: 'ensUniversalResolver',\n    })\n  }\n\n  const reverseNode = `${address.toLowerCase().substring(2)}.addr.reverse`\n  try {\n    const readContractParameters = {\n      address: universalResolverAddress,\n      abi: universalResolverReverseAbi,\n      functionName: 'reverse',\n      args: [toHex(packetToBytes(reverseNode))],\n      blockNumber,\n      blockTag,\n    } as const\n\n    const readContractAction = getAction(client, readContract, 'readContract')\n\n    const [name, resolvedAddress] = gatewayUrls\n      ? await readContractAction({\n          ...readContractParameters,\n          args: [...readContractParameters.args, gatewayUrls],\n        })\n      : await readContractAction(readContractParameters)\n\n    if (address.toLowerCase() !== resolvedAddress.toLowerCase()) return null\n    return name\n  } catch (err) {\n    if (strict) throw err\n    if (isNullUniversalResolverError(err, 'reverse')) return null\n    throw err\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAyEO,eAAe,WACpB,MAAgC,EAChC,EACE,OAAO,EACP,WAAW,EACX,QAAQ,EACR,WAAW,EACX,MAAM,EACN,0BAA0B,yBAAyB,EAC9B;IAEvB,IAAI,2BAA2B;IAC/B,IAAI,CAAC,0BAA0B;QAC7B,IAAI,CAAC,OAAO,KAAK,EACf,MAAM,IAAI,MACR;QAGJ,2BAA2B,CAAA,GAAA,qKAAA,CAAA,0BAAuB,AAAvB,EAAwB;YACjD;YACA,OAAO,OAAO,KAAK;YACnB,UAAU;;IAEd;IAEA,MAAM,cAAc,CAAA,EAAG,QAAQ,WAAW,GAAG,SAAS,CAAC,GAAE,aAAA,CAAe;IACxE,IAAI;QACF,MAAM,yBAAyB;YAC7B,SAAS;YACT,KAAK,6IAAA,CAAA,8BAA2B;YAChC,cAAc;YACd,MAAM;gBAAC,CAAA,GAAA,sJAAA,CAAA,QAAK,AAAL,EAAM,CAAA,GAAA,yJAAA,CAAA,gBAAa,AAAb,EAAc;aAAc;YACzC;YACA;;QAGF,MAAM,qBAAqB,CAAA,GAAA,8IAAA,CAAA,YAAS,AAAT,EAAU,QAAQ,6JAAA,CAAA,eAAY,EAAE;QAE3D,MAAM,CAAC,MAAM,gBAAgB,GAAG,cAC5B,MAAM,mBAAmB;YACvB,GAAG,sBAAsB;YACzB,MAAM;mBAAI,uBAAuB,IAAI;gBAAE;aAAY;aAErD,MAAM,mBAAmB;QAE7B,IAAI,QAAQ,WAAW,OAAO,gBAAgB,WAAW,IAAI,OAAO;QACpE,OAAO;IACT,EAAE,OAAO,KAAK;QACZ,IAAI,QAAQ,MAAM;QAClB,IAAI,CAAA,GAAA,kJAAA,CAAA,+BAA4B,AAA5B,EAA6B,KAAK,YAAY,OAAO;QACzD,MAAM;IACR;AACF"}},
    {"offset": {"line": 7313, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7318, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/actions/public/getBalance.ts"],"sourcesContent":["import type { Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\n\nexport type GetBalanceParameters = {\n  /** The address of the account. */\n  address: Address\n} & (\n  | {\n      /** The balance of the account at a block number. */\n      blockNumber?: bigint | undefined\n      blockTag?: undefined\n    }\n  | {\n      blockNumber?: undefined\n      /** The balance of the account at a block tag. */\n      blockTag?: BlockTag | undefined\n    }\n)\n\nexport type GetBalanceReturnType = bigint\n\nexport type GetBalanceErrorType =\n  | NumberToHexErrorType\n  | RequestErrorType\n  | ErrorType\n\n/**\n * Returns the balance of an address in wei.\n *\n * - Docs: https://viem.sh/docs/actions/public/getBalance\n * - JSON-RPC Methods: [`eth_getBalance`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getbalance)\n *\n * You can convert the balance to ether units with [`formatEther`](https://viem.sh/docs/utilities/formatEther).\n *\n * ```ts\n * const balance = await getBalance(client, {\n *   address: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n *   blockTag: 'safe'\n * })\n * const balanceAsEther = formatEther(balance)\n * // \"6.942\"\n * ```\n *\n * @param client - Client to use\n * @param parameters - {@link GetBalanceParameters}\n * @returns The balance of the address in wei. {@link GetBalanceReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getBalance } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const balance = await getBalance(client, {\n *   address: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n * })\n * // 10000000000000000000000n (wei)\n */\nexport async function getBalance<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n  { address, blockNumber, blockTag = 'latest' }: GetBalanceParameters,\n): Promise<GetBalanceReturnType> {\n  const blockNumberHex = blockNumber ? numberToHex(blockNumber) : undefined\n\n  const balance = await client.request({\n    method: 'eth_getBalance',\n    params: [address, blockNumberHex || blockTag],\n  })\n  return BigInt(balance)\n}\n"],"names":[],"mappings":";;;;;;AAuEO,eAAe,WACpB,MAAgC,EAChC,EAAE,OAAO,EAAE,WAAW,EAAE,WAAW,QAAQ,EAAwB;IAEnE,MAAM,iBAAiB,cAAc,CAAA,GAAA,sJAAA,CAAA,cAAW,AAAX,EAAY,eAAe;IAEhE,MAAM,UAAU,MAAM,OAAO,OAAO,CAAC;QACnC,QAAQ;QACR,QAAQ;YAAC;YAAS,kBAAkB;SAAS;;IAE/C,OAAO,OAAO;AAChB"}},
    {"offset": {"line": 7335, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7340, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/actions/public/multicall.ts"],"sourcesContent":["import type { AbiStateMutability, Address, Narrow } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport { multicall3Abi } from '../../constants/abis.js'\nimport { AbiDecodingZeroDataError } from '../../errors/abi.js'\nimport { BaseError } from '../../errors/base.js'\nimport { RawContractError } from '../../errors/contract.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { ContractFunctionParameters } from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport type {\n  MulticallContracts,\n  MulticallResults,\n} from '../../types/multicall.js'\nimport {\n  type DecodeFunctionResultErrorType,\n  decodeFunctionResult,\n} from '../../utils/abi/decodeFunctionResult.js'\nimport {\n  type EncodeFunctionDataErrorType,\n  encodeFunctionData,\n} from '../../utils/abi/encodeFunctionData.js'\nimport {\n  type GetChainContractAddressErrorType,\n  getChainContractAddress,\n} from '../../utils/chain/getChainContractAddress.js'\nimport {\n  type GetContractErrorReturnType,\n  getContractError,\n} from '../../utils/errors/getContractError.js'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport { getAction } from '../../utils/getAction.js'\nimport type { CallParameters } from './call.js'\nimport { type ReadContractErrorType, readContract } from './readContract.js'\n\nexport type MulticallParameters<\n  contracts extends readonly unknown[] = readonly ContractFunctionParameters[],\n  allowFailure extends boolean = true,\n  options extends {\n    optional?: boolean\n    properties?: Record<string, any>\n  } = {},\n> = Pick<CallParameters, 'blockNumber' | 'blockTag' | 'stateOverride'> & {\n  allowFailure?: allowFailure | boolean | undefined\n  batchSize?: number | undefined\n  contracts: MulticallContracts<\n    Narrow<contracts>,\n    { mutability: AbiStateMutability } & options\n  >\n  multicallAddress?: Address | undefined\n}\n\nexport type MulticallReturnType<\n  contracts extends readonly unknown[] = readonly ContractFunctionParameters[],\n  allowFailure extends boolean = true,\n  options extends {\n    error?: Error\n  } = { error: Error },\n> = MulticallResults<\n  Narrow<contracts>,\n  allowFailure,\n  { mutability: AbiStateMutability } & options\n>\n\nexport type MulticallErrorType =\n  | GetChainContractAddressErrorType\n  | ReadContractErrorType\n  | GetContractErrorReturnType<\n      EncodeFunctionDataErrorType | DecodeFunctionResultErrorType\n    >\n  | ErrorType\n\n/**\n * Similar to [`readContract`](https://viem.sh/docs/contract/readContract), but batches up multiple functions on a contract in a single RPC call via the [`multicall3` contract](https://github.com/mds1/multicall).\n *\n * - Docs: https://viem.sh/docs/contract/multicall\n *\n * @param client - Client to use\n * @param parameters - {@link MulticallParameters}\n * @returns An array of results with accompanying status. {@link MulticallReturnType}\n *\n * @example\n * import { createPublicClient, http, parseAbi } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { multicall } from 'viem/contract'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const abi = parseAbi([\n *   'function balanceOf(address) view returns (uint256)',\n *   'function totalSupply() view returns (uint256)',\n * ])\n * const results = await multicall(client, {\n *   contracts: [\n *     {\n *       address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *       abi,\n *       functionName: 'balanceOf',\n *       args: ['0xA0Cf798816D4b9b9866b5330EEa46a18382f251e'],\n *     },\n *     {\n *       address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *       abi,\n *       functionName: 'totalSupply',\n *     },\n *   ],\n * })\n * // [{ result: 424122n, status: 'success' }, { result: 1000000n, status: 'success' }]\n */\nexport async function multicall<\n  const contracts extends readonly unknown[],\n  chain extends Chain | undefined,\n  allowFailure extends boolean = true,\n>(\n  client: Client<Transport, chain>,\n  parameters: MulticallParameters<contracts, allowFailure>,\n): Promise<MulticallReturnType<contracts, allowFailure>> {\n  const {\n    allowFailure = true,\n    batchSize: batchSize_,\n    blockNumber,\n    blockTag,\n    multicallAddress: multicallAddress_,\n    stateOverride,\n  } = parameters\n  const contracts = parameters.contracts as ContractFunctionParameters[]\n\n  const batchSize =\n    batchSize_ ??\n    ((typeof client.batch?.multicall === 'object' &&\n      client.batch.multicall.batchSize) ||\n      1_024)\n\n  let multicallAddress = multicallAddress_\n  if (!multicallAddress) {\n    if (!client.chain)\n      throw new Error(\n        'client chain not configured. multicallAddress is required.',\n      )\n\n    multicallAddress = getChainContractAddress({\n      blockNumber,\n      chain: client.chain,\n      contract: 'multicall3',\n    })\n  }\n\n  type Aggregate3Calls = {\n    allowFailure: boolean\n    callData: Hex\n    target: Address\n  }[]\n\n  const chunkedCalls: Aggregate3Calls[] = [[]]\n  let currentChunk = 0\n  let currentChunkSize = 0\n  for (let i = 0; i < contracts.length; i++) {\n    const { abi, address, args, functionName } = contracts[i]\n    try {\n      const callData = encodeFunctionData({ abi, args, functionName })\n\n      currentChunkSize += (callData.length - 2) / 2\n      // Check to see if we need to create a new chunk.\n      if (\n        // Check if batching is enabled.\n        batchSize > 0 &&\n        // Check if the current size of the batch exceeds the size limit.\n        currentChunkSize > batchSize &&\n        // Check if the current chunk is not already empty.\n        chunkedCalls[currentChunk].length > 0\n      ) {\n        currentChunk++\n        currentChunkSize = (callData.length - 2) / 2\n        chunkedCalls[currentChunk] = []\n      }\n\n      chunkedCalls[currentChunk] = [\n        ...chunkedCalls[currentChunk],\n        {\n          allowFailure: true,\n          callData,\n          target: address,\n        },\n      ]\n    } catch (err) {\n      const error = getContractError(err as BaseError, {\n        abi,\n        address,\n        args,\n        docsPath: '/docs/contract/multicall',\n        functionName,\n      })\n      if (!allowFailure) throw error\n      chunkedCalls[currentChunk] = [\n        ...chunkedCalls[currentChunk],\n        {\n          allowFailure: true,\n          callData: '0x' as Hex,\n          target: address,\n        },\n      ]\n    }\n  }\n\n  const aggregate3Results = await Promise.allSettled(\n    chunkedCalls.map((calls) =>\n      getAction(\n        client,\n        readContract,\n        'readContract',\n      )({\n        abi: multicall3Abi,\n        address: multicallAddress!,\n        args: [calls],\n        blockNumber,\n        blockTag,\n        functionName: 'aggregate3',\n        stateOverride,\n      }),\n    ),\n  )\n\n  const results = []\n  for (let i = 0; i < aggregate3Results.length; i++) {\n    const result = aggregate3Results[i]\n\n    // If an error occurred in a `readContract` invocation (ie. network error),\n    // then append the failure reason to each contract result.\n    if (result.status === 'rejected') {\n      if (!allowFailure) throw result.reason\n      for (let j = 0; j < chunkedCalls[i].length; j++) {\n        results.push({\n          status: 'failure',\n          error: result.reason,\n          result: undefined,\n        })\n      }\n      continue\n    }\n\n    // If the `readContract` call was successful, then decode the results.\n    const aggregate3Result = result.value\n    for (let j = 0; j < aggregate3Result.length; j++) {\n      // Extract the response from `readContract`\n      const { returnData, success } = aggregate3Result[j]\n\n      // Extract the request call data from the original call.\n      const { callData } = chunkedCalls[i][j]\n\n      // Extract the contract config for this call from the `contracts` argument\n      // for decoding.\n      const { abi, address, functionName, args } = contracts[\n        results.length\n      ] as ContractFunctionParameters\n\n      try {\n        if (callData === '0x') throw new AbiDecodingZeroDataError()\n        if (!success) throw new RawContractError({ data: returnData })\n        const result = decodeFunctionResult({\n          abi,\n          args,\n          data: returnData,\n          functionName,\n        })\n        results.push(allowFailure ? { result, status: 'success' } : result)\n      } catch (err) {\n        const error = getContractError(err as BaseError, {\n          abi,\n          address,\n          args,\n          docsPath: '/docs/contract/multicall',\n          functionName,\n        })\n        if (!allowFailure) throw error\n        results.push({ error, result: undefined, status: 'failure' })\n      }\n    }\n  }\n\n  if (results.length !== contracts.length)\n    throw new BaseError('multicall results mismatch')\n  return results as MulticallReturnType<contracts, allowFailure>\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 7499, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7504, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/actions/ens/getEnsAddress.ts"],"sourcesContent":["import type { Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport {\n  addressResolverAbi,\n  universalResolverResolveAbi,\n} from '../../constants/abis.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Prettify } from '../../types/utils.js'\nimport {\n  type DecodeFunctionResultErrorType,\n  decodeFunctionResult,\n} from '../../utils/abi/decodeFunctionResult.js'\nimport {\n  type EncodeFunctionDataErrorType,\n  encodeFunctionData,\n} from '../../utils/abi/encodeFunctionData.js'\nimport {\n  type GetChainContractAddressErrorType,\n  getChainContractAddress,\n} from '../../utils/chain/getChainContractAddress.js'\nimport { type TrimErrorType, trim } from '../../utils/data/trim.js'\nimport { type ToHexErrorType, toHex } from '../../utils/encoding/toHex.js'\nimport { isNullUniversalResolverError } from '../../utils/ens/errors.js'\nimport { type NamehashErrorType, namehash } from '../../utils/ens/namehash.js'\nimport {\n  type PacketToBytesErrorType,\n  packetToBytes,\n} from '../../utils/ens/packetToBytes.js'\nimport { getAction } from '../../utils/getAction.js'\nimport {\n  type ReadContractParameters,\n  readContract,\n} from '../public/readContract.js'\n\nexport type GetEnsAddressParameters = Prettify<\n  Pick<ReadContractParameters, 'blockNumber' | 'blockTag'> & {\n    /** ENSIP-9 compliant coinType used to resolve addresses for other chains */\n    coinType?: number | undefined\n    /** Universal Resolver gateway URLs to use for resolving CCIP-read requests. */\n    gatewayUrls?: string[] | undefined\n    /** Name to get the address for. */\n    name: string\n    /** Whether or not to throw errors propagated from the ENS Universal Resolver Contract. */\n    strict?: boolean | undefined\n    /** Address of ENS Universal Resolver Contract. */\n    universalResolverAddress?: Address | undefined\n  }\n>\n\nexport type GetEnsAddressReturnType = Address | null\n\nexport type GetEnsAddressErrorType =\n  | GetChainContractAddressErrorType\n  | EncodeFunctionDataErrorType\n  | NamehashErrorType\n  | ToHexErrorType\n  | PacketToBytesErrorType\n  | DecodeFunctionResultErrorType\n  | TrimErrorType\n  | ErrorType\n\n/**\n * Gets address for ENS name.\n *\n * - Docs: https://viem.sh/docs/ens/actions/getEnsAddress\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/ens\n *\n * Calls `resolve(bytes, bytes)` on ENS Universal Resolver Contract.\n *\n * Since ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS names](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `getEnsAddress`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize) function for this.\n *\n * @param client - Client to use\n * @param parameters - {@link GetEnsAddressParameters}\n * @returns Address for ENS name or `null` if not found. {@link GetEnsAddressReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getEnsAddress, normalize } from 'viem/ens'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const ensAddress = await getEnsAddress(client, {\n *   name: normalize('wevm.eth'),\n * })\n * // '0xd2135CfB216b74109775236E36d4b433F1DF507B'\n */\nexport async function getEnsAddress<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n  {\n    blockNumber,\n    blockTag,\n    coinType,\n    name,\n    gatewayUrls,\n    strict,\n    universalResolverAddress: universalResolverAddress_,\n  }: GetEnsAddressParameters,\n): Promise<GetEnsAddressReturnType> {\n  let universalResolverAddress = universalResolverAddress_\n  if (!universalResolverAddress) {\n    if (!client.chain)\n      throw new Error(\n        'client chain not configured. universalResolverAddress is required.',\n      )\n\n    universalResolverAddress = getChainContractAddress({\n      blockNumber,\n      chain: client.chain,\n      contract: 'ensUniversalResolver',\n    })\n  }\n\n  try {\n    const functionData = encodeFunctionData({\n      abi: addressResolverAbi,\n      functionName: 'addr',\n      ...(coinType != null\n        ? { args: [namehash(name), BigInt(coinType)] }\n        : { args: [namehash(name)] }),\n    })\n\n    const readContractParameters = {\n      address: universalResolverAddress,\n      abi: universalResolverResolveAbi,\n      functionName: 'resolve',\n      args: [toHex(packetToBytes(name)), functionData],\n      blockNumber,\n      blockTag,\n    } as const\n\n    const readContractAction = getAction(client, readContract, 'readContract')\n\n    const res = gatewayUrls\n      ? await readContractAction({\n          ...readContractParameters,\n          args: [...readContractParameters.args, gatewayUrls],\n        })\n      : await readContractAction(readContractParameters)\n\n    if (res[0] === '0x') return null\n\n    const address = decodeFunctionResult({\n      abi: addressResolverAbi,\n      args: coinType != null ? [namehash(name), BigInt(coinType)] : undefined,\n      functionName: 'addr',\n      data: res[0],\n    })\n\n    if (address === '0x') return null\n    if (trim(address) === '0x00') return null\n    return address\n  } catch (err) {\n    if (strict) throw err\n    if (isNullUniversalResolverError(err, 'resolve')) return null\n    throw err\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA4FO,eAAe,cACpB,MAAgC,EAChC,EACE,WAAW,EACX,QAAQ,EACR,QAAQ,EACR,IAAI,EACJ,WAAW,EACX,MAAM,EACN,0BAA0B,yBAAyB,EAC3B;IAE1B,IAAI,2BAA2B;IAC/B,IAAI,CAAC,0BAA0B;QAC7B,IAAI,CAAC,OAAO,KAAK,EACf,MAAM,IAAI,MACR;QAGJ,2BAA2B,CAAA,GAAA,qKAAA,CAAA,0BAAuB,AAAvB,EAAwB;YACjD;YACA,OAAO,OAAO,KAAK;YACnB,UAAU;;IAEd;IAEA,IAAI;QACF,MAAM,eAAe,CAAA,GAAA,8JAAA,CAAA,qBAAkB,AAAlB,EAAmB;YACtC,KAAK,6IAAA,CAAA,qBAAkB;YACvB,cAAc;YACd,GAAI,YAAY,OACZ;gBAAE,MAAM;oBAAC,CAAA,GAAA,oJAAA,CAAA,WAAQ,AAAR,EAAS;oBAAO,OAAO;iBAAU;YAAA,IAC1C;gBAAE,MAAM;oBAAC,CAAA,GAAA,oJAAA,CAAA,WAAQ,AAAR,EAAS;iBAAM;YAAA,CAAE;;QAGhC,MAAM,yBAAyB;YAC7B,SAAS;YACT,KAAK,6IAAA,CAAA,8BAA2B;YAChC,cAAc;YACd,MAAM;gBAAC,CAAA,GAAA,sJAAA,CAAA,QAAK,AAAL,EAAM,CAAA,GAAA,yJAAA,CAAA,gBAAa,AAAb,EAAc;gBAAQ;aAAa;YAChD;YACA;;QAGF,MAAM,qBAAqB,CAAA,GAAA,8IAAA,CAAA,YAAS,AAAT,EAAU,QAAQ,6JAAA,CAAA,eAAY,EAAE;QAE3D,MAAM,MAAM,cACR,MAAM,mBAAmB;YACvB,GAAG,sBAAsB;YACzB,MAAM;mBAAI,uBAAuB,IAAI;gBAAE;aAAY;aAErD,MAAM,mBAAmB;QAE7B,IAAI,GAAG,CAAC,EAAE,KAAK,MAAM,OAAO;QAE5B,MAAM,UAAU,CAAA,GAAA,gKAAA,CAAA,uBAAoB,AAApB,EAAqB;YACnC,KAAK,6IAAA,CAAA,qBAAkB;YACvB,MAAM,YAAY,OAAO;gBAAC,CAAA,GAAA,oJAAA,CAAA,WAAQ,AAAR,EAAS;gBAAO,OAAO;aAAU,GAAG;YAC9D,cAAc;YACd,MAAM,GAAG,CAAC,EAAE;;QAGd,IAAI,YAAY,MAAM,OAAO;QAC7B,IAAI,CAAA,GAAA,iJAAA,CAAA,OAAI,AAAJ,EAAK,aAAa,QAAQ,OAAO;QACrC,OAAO;IACT,EAAE,OAAO,KAAK;QACZ,IAAI,QAAQ,MAAM;QAClB,IAAI,CAAA,GAAA,kJAAA,CAAA,+BAA4B,AAA5B,EAA6B,KAAK,YAAY,OAAO;QACzD,MAAM;IACR;AACF"}},
    {"offset": {"line": 7593, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7598, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/actions/ens/getEnsResolver.ts"],"sourcesContent":["import type { Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Prettify } from '../../types/utils.js'\nimport {\n  type GetChainContractAddressErrorType,\n  getChainContractAddress,\n} from '../../utils/chain/getChainContractAddress.js'\nimport { type ToHexErrorType, toHex } from '../../utils/encoding/toHex.js'\nimport {\n  type PacketToBytesErrorType,\n  packetToBytes,\n} from '../../utils/ens/packetToBytes.js'\nimport { getAction } from '../../utils/getAction.js'\nimport {\n  type ReadContractParameters,\n  readContract,\n} from '../public/readContract.js'\n\nexport type GetEnsResolverParameters = Prettify<\n  Pick<ReadContractParameters, 'blockNumber' | 'blockTag'> & {\n    /** Name to get the address for. */\n    name: string\n    /** Address of ENS Universal Resolver Contract. */\n    universalResolverAddress?: Address | undefined\n  }\n>\n\nexport type GetEnsResolverReturnType = Address\n\nexport type GetEnsResolverErrorType =\n  | GetChainContractAddressErrorType\n  | ToHexErrorType\n  | PacketToBytesErrorType\n  | ErrorType\n\n/**\n * Gets resolver for ENS name.\n *\n * - Docs: https://viem.sh/docs/ens/actions/getEnsResolver\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/ens\n *\n * Calls `findResolver(bytes)` on ENS Universal Resolver Contract to retrieve the resolver of an ENS name.\n *\n * Since ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS names](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `getEnsAddress`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize) function for this.\n *\n * @param client - Client to use\n * @param parameters - {@link GetEnsResolverParameters}\n * @returns Address for ENS resolver. {@link GetEnsResolverReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getEnsResolver, normalize } from 'viem/ens'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const resolverAddress = await getEnsResolver(client, {\n *   name: normalize('wevm.eth'),\n * })\n * // '0x4976fb03C32e5B8cfe2b6cCB31c09Ba78EBaBa41'\n */\nexport async function getEnsResolver<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n  {\n    blockNumber,\n    blockTag,\n    name,\n    universalResolverAddress: universalResolverAddress_,\n  }: GetEnsResolverParameters,\n) {\n  let universalResolverAddress = universalResolverAddress_\n  if (!universalResolverAddress) {\n    if (!client.chain)\n      throw new Error(\n        'client chain not configured. universalResolverAddress is required.',\n      )\n\n    universalResolverAddress = getChainContractAddress({\n      blockNumber,\n      chain: client.chain,\n      contract: 'ensUniversalResolver',\n    })\n  }\n\n  const [resolverAddress] = await getAction(\n    client,\n    readContract,\n    'readContract',\n  )({\n    address: universalResolverAddress,\n    abi: [\n      {\n        inputs: [{ type: 'bytes' }],\n        name: 'findResolver',\n        outputs: [{ type: 'address' }, { type: 'bytes32' }],\n        stateMutability: 'view',\n        type: 'function',\n      },\n    ],\n    functionName: 'findResolver',\n    args: [toHex(packetToBytes(name))],\n    blockNumber,\n    blockTag,\n  })\n  return resolverAddress\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;AAmEO,eAAe,eACpB,MAAgC,EAChC,EACE,WAAW,EACX,QAAQ,EACR,IAAI,EACJ,0BAA0B,yBAAyB,EAC1B;IAE3B,IAAI,2BAA2B;IAC/B,IAAI,CAAC,0BAA0B;QAC7B,IAAI,CAAC,OAAO,KAAK,EACf,MAAM,IAAI,MACR;QAGJ,2BAA2B,CAAA,GAAA,qKAAA,CAAA,0BAAuB,AAAvB,EAAwB;YACjD;YACA,OAAO,OAAO,KAAK;YACnB,UAAU;;IAEd;IAEA,MAAM,CAAC,gBAAgB,GAAG,MAAM,CAAA,GAAA,8IAAA,CAAA,YAAS,AAAT,EAC9B,QACA,6JAAA,CAAA,eAAY,EACZ,gBACA;QACA,SAAS;QACT,KAAK;YACH;gBACE,QAAQ;oBAAC;wBAAE,MAAM;oBAAO;iBAAG;gBAC3B,MAAM;gBACN,SAAS;oBAAC;wBAAE,MAAM;oBAAS;oBAAI;wBAAE,MAAM;oBAAS;iBAAG;gBACnD,iBAAiB;gBACjB,MAAM;;SAET;QACD,cAAc;QACd,MAAM;YAAC,CAAA,GAAA,sJAAA,CAAA,QAAK,AAAL,EAAM,CAAA,GAAA,yJAAA,CAAA,gBAAa,AAAb,EAAc;SAAO;QAClC;QACA;;IAEF,OAAO;AACT"}},
    {"offset": {"line": 7653, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7658, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/filters/createFilterRequestScope.ts"],"sourcesContent":["import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { OnResponseFn } from '../../clients/transports/fallback.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { PublicRpcSchema } from '../../types/eip1193.js'\nimport type { EIP1193RequestFn } from '../../types/eip1193.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { Filter } from '../../types/utils.js'\n\ntype CreateFilterRequestScopeParameters = {\n  method:\n    | 'eth_newFilter'\n    | 'eth_newPendingTransactionFilter'\n    | 'eth_newBlockFilter'\n}\n\ntype FilterRpcSchema = Filter<\n  PublicRpcSchema,\n  { Method: 'eth_getFilterLogs' | 'eth_getFilterChanges' }\n>\n\ntype CreateFilterRequestScopeReturnType = (\n  id: Hex,\n) => EIP1193RequestFn<FilterRpcSchema>\n\n/**\n * Scopes `request` to the filter ID. If the client is a fallback, it will\n * listen for responses and scope the child transport `request` function\n * to the successful filter ID.\n */\nexport function createFilterRequestScope<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n  { method }: CreateFilterRequestScopeParameters,\n): CreateFilterRequestScopeReturnType {\n  const requestMap: Record<Hex, EIP1193RequestFn> = {}\n\n  if (client.transport.type === 'fallback')\n    client.transport.onResponse?.(\n      ({\n        method: method_,\n        response: id,\n        status,\n        transport,\n      }: Parameters<OnResponseFn>[0]) => {\n        if (status === 'success' && method === method_)\n          requestMap[id as Hex] = transport.request\n      },\n    )\n\n  return ((id) =>\n    requestMap[id] || client.request) as CreateFilterRequestScopeReturnType\n}\n"],"names":[],"mappings":"AAyBA;;;;;;;AAKM,SAAU,yBACd,MAAgC,EAChC,EAAE,MAAM,EAAsC;IAE9C,MAAM,aAA4C,CAAA;IAElD,IAAI,OAAO,SAAS,CAAC,IAAI,KAAK,YAC5B,OAAO,SAAS,CAAC,UAAU,GACzB,CAAC,EACC,QAAQ,OAAO,EACf,UAAU,EAAE,EACZ,MAAM,EACN,SAAS,EACmB;QAC5B,IAAI,WAAW,aAAa,WAAW,SACrC,UAAU,CAAC,GAAU,GAAG,UAAU,OAAO;IAC7C;IAGJ,OAAQ,CAAC,KACP,UAAU,CAAC,GAAG,IAAI,OAAO,OAAO;AACpC"}},
    {"offset": {"line": 7672, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7677, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/actions/public/createBlockFilter.ts"],"sourcesContent":["import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Filter } from '../../types/filter.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport { createFilterRequestScope } from '../../utils/filters/createFilterRequestScope.js'\n\nexport type CreateBlockFilterReturnType = Filter<'block'>\n\nexport type CreateBlockFilterErrorType = RequestErrorType | ErrorType\n\n/**\n * Creates a [`Filter`](https://viem.sh/docs/glossary/types#filter) to listen for new block hashes that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges).\n *\n * - Docs: https://viem.sh/docs/actions/public/createBlockFilter\n * - JSON-RPC Methods: [`eth_newBlockFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newBlockFilter)\n *\n * @param client - Client to use\n * @returns [`Filter`](https://viem.sh/docs/glossary/types#filter). {@link CreateBlockFilterReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createBlockFilter } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const filter = await createBlockFilter(client)\n * // { id: \"0x345a6572337856574a76364e457a4366\", type: 'block' }\n */\nexport async function createBlockFilter<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n): Promise<CreateBlockFilterReturnType> {\n  const getRequest = createFilterRequestScope(client, {\n    method: 'eth_newBlockFilter',\n  })\n  const id = await client.request({\n    method: 'eth_newBlockFilter',\n  })\n  return { id, request: getRequest(id), type: 'block' }\n}\n"],"names":[],"mappings":";;;;;;AAiCO,eAAe,kBACpB,MAAgC;IAEhC,MAAM,aAAa,CAAA,GAAA,wKAAA,CAAA,2BAAwB,AAAxB,EAAyB,QAAQ;QAClD,QAAQ;;IAEV,MAAM,KAAK,MAAM,OAAO,OAAO,CAAC;QAC9B,QAAQ;;IAEV,OAAO;QAAE;QAAI,SAAS,WAAW;QAAK,MAAM;IAAO;AACrD"}},
    {"offset": {"line": 7696, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7701, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/errors/log.ts"],"sourcesContent":["import { BaseError } from './base.js'\n\nexport type FilterTypeNotSupportedErrorType = FilterTypeNotSupportedError & {\n  name: 'FilterTypeNotSupportedError'\n}\nexport class FilterTypeNotSupportedError extends BaseError {\n  constructor(type: string) {\n    super(`Filter type \"${type}\" is not supported.`, {\n      name: 'FilterTypeNotSupportedError',\n    })\n  }\n}\n"],"names":[],"mappings":";;;;;;AAKM,MAAO,oCAAoC,0IAAA,CAAA,YAAS;IACxD,YAAY,IAAY,CAAA;QACtB,KAAK,CAAC,CAAA,aAAA,EAAgB,KAAI,mBAAA,CAAqB,EAAE;YAC/C,MAAM;;IAEV"}},
    {"offset": {"line": 7714, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7719, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/abi/encodeEventTopics.ts"],"sourcesContent":["import type {\n  Abi,\n  AbiParameter,\n  AbiParameterToPrimitiveType,\n  ExtractAbiEvents,\n} from 'abitype'\n\nimport {\n  AbiEventNotFoundError,\n  type AbiEventNotFoundErrorType,\n} from '../../errors/abi.js'\nimport {\n  FilterTypeNotSupportedError,\n  type FilterTypeNotSupportedErrorType,\n} from '../../errors/log.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type {\n  ContractEventArgs,\n  ContractEventName,\n  EventDefinition,\n} from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { IsNarrowable, UnionEvaluate } from '../../types/utils.js'\nimport { type ToBytesErrorType, toBytes } from '../encoding/toBytes.js'\nimport { type Keccak256ErrorType, keccak256 } from '../hash/keccak256.js'\nimport {\n  type ToEventSelectorErrorType,\n  toEventSelector,\n} from '../hash/toEventSelector.js'\nimport {\n  type EncodeAbiParametersErrorType,\n  encodeAbiParameters,\n} from './encodeAbiParameters.js'\nimport { type FormatAbiItemErrorType, formatAbiItem } from './formatAbiItem.js'\nimport { type GetAbiItemErrorType, getAbiItem } from './getAbiItem.js'\n\nconst docsPath = '/docs/contract/encodeEventTopics'\n\nexport type EncodeEventTopicsParameters<\n  abi extends Abi | readonly unknown[] = Abi,\n  eventName extends ContractEventName<abi> | undefined = ContractEventName<abi>,\n  ///\n  hasEvents = abi extends Abi\n    ? Abi extends abi\n      ? true\n      : [ExtractAbiEvents<abi>] extends [never]\n        ? false\n        : true\n    : true,\n  allArgs = ContractEventArgs<\n    abi,\n    eventName extends ContractEventName<abi>\n      ? eventName\n      : ContractEventName<abi>\n  >,\n  allErrorNames = ContractEventName<abi>,\n> = {\n  abi: abi\n  args?: allArgs | undefined\n} & UnionEvaluate<\n  IsNarrowable<abi, Abi> extends true\n    ? abi['length'] extends 1\n      ? { eventName?: eventName | allErrorNames | undefined }\n      : { eventName: eventName | allErrorNames }\n    : { eventName?: eventName | allErrorNames | undefined }\n> &\n  (hasEvents extends true ? unknown : never)\n\nexport type EncodeEventTopicsReturnType = [Hex, ...(Hex | Hex[] | null)[]]\n\nexport type EncodeEventTopicsErrorType =\n  | AbiEventNotFoundErrorType\n  | EncodeArgErrorType\n  | FormatAbiItemErrorType\n  | GetAbiItemErrorType\n  | ToEventSelectorErrorType\n  | ErrorType\n\nexport function encodeEventTopics<\n  const abi extends Abi | readonly unknown[],\n  eventName extends ContractEventName<abi> | undefined = undefined,\n>(\n  parameters: EncodeEventTopicsParameters<abi, eventName>,\n): EncodeEventTopicsReturnType {\n  const { abi, eventName, args } = parameters as EncodeEventTopicsParameters\n\n  let abiItem = abi[0]\n  if (eventName) {\n    const item = getAbiItem({ abi, name: eventName })\n    if (!item) throw new AbiEventNotFoundError(eventName, { docsPath })\n    abiItem = item\n  }\n\n  if (abiItem.type !== 'event')\n    throw new AbiEventNotFoundError(undefined, { docsPath })\n\n  const definition = formatAbiItem(abiItem)\n  const signature = toEventSelector(definition as EventDefinition)\n\n  let topics: (Hex | Hex[] | null)[] = []\n  if (args && 'inputs' in abiItem) {\n    const indexedInputs = abiItem.inputs?.filter(\n      (param) => 'indexed' in param && param.indexed,\n    )\n    const args_ = Array.isArray(args)\n      ? args\n      : Object.values(args).length > 0\n        ? (indexedInputs?.map((x: any) => (args as any)[x.name]) ?? [])\n        : []\n\n    if (args_.length > 0) {\n      topics =\n        indexedInputs?.map((param, i) => {\n          if (Array.isArray(args_[i]))\n            return args_[i].map((_: any, j: number) =>\n              encodeArg({ param, value: args_[i][j] }),\n            )\n          return args_[i] ? encodeArg({ param, value: args_[i] }) : null\n        }) ?? []\n    }\n  }\n  return [signature, ...topics]\n}\n\nexport type EncodeArgErrorType =\n  | Keccak256ErrorType\n  | ToBytesErrorType\n  | EncodeAbiParametersErrorType\n  | FilterTypeNotSupportedErrorType\n  | ErrorType\n\nfunction encodeArg({\n  param,\n  value,\n}: { param: AbiParameter; value: AbiParameterToPrimitiveType<AbiParameter> }) {\n  if (param.type === 'string' || param.type === 'bytes')\n    return keccak256(toBytes(value as string))\n  if (param.type === 'tuple' || param.type.match(/^(.*)\\[(\\d+)?\\]$/))\n    throw new FilterTypeNotSupportedError(param.type)\n  return encodeAbiParameters([param], [value])\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAoCA,MAAM,WAAW;AA0CX,SAAU,kBAId,UAAuD;IAEvD,MAAM,EAAE,GAAG,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG;IAEjC,IAAI,UAAU,GAAG,CAAC,EAAE;IACpB,IAAI,WAAW;QACb,MAAM,OAAO,CAAA,GAAA,sJAAA,CAAA,aAAU,AAAV,EAAW;YAAE;YAAK,MAAM;QAAS;QAC9C,IAAI,CAAC,MAAM,MAAM,IAAI,yIAAA,CAAA,wBAAqB,CAAC,WAAW;YAAE;QAAQ;QAChE,UAAU;IACZ;IAEA,IAAI,QAAQ,IAAI,KAAK,SACnB,MAAM,IAAI,yIAAA,CAAA,wBAAqB,CAAC,WAAW;QAAE;IAAQ;IAEvD,MAAM,aAAa,CAAA,GAAA,yJAAA,CAAA,gBAAa,AAAb,EAAc;IACjC,MAAM,YAAY,CAAA,GAAA,4JAAA,CAAA,kBAAe,AAAf,EAAgB;IAElC,IAAI,SAAiC,EAAE;IACvC,IAAI,QAAQ,YAAY,SAAS;QAC/B,MAAM,gBAAgB,QAAQ,MAAM,EAAE,OACpC,CAAC,QAAU,aAAa,SAAS,MAAM,OAAO;QAEhD,MAAM,QAAQ,MAAM,OAAO,CAAC,QACxB,OACA,OAAO,MAAM,CAAC,MAAM,MAAM,GAAG,IAC1B,eAAe,IAAI,CAAC,IAAY,IAAY,CAAC,EAAE,IAAI,CAAC,KAAK,EAAE,GAC5D,EAAE;QAER,IAAI,MAAM,MAAM,GAAG,GAAG;YACpB,SACE,eAAe,IAAI,CAAC,OAAO;gBACzB,IAAI,MAAM,OAAO,CAAC,KAAK,CAAC,EAAE,GACxB,OAAO,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,GAAQ,IAC3B,UAAU;wBAAE;wBAAO,OAAO,KAAK,CAAC,EAAE,CAAC,EAAE;oBAAA;gBAEzC,OAAO,KAAK,CAAC,EAAE,GAAG,UAAU;oBAAE;oBAAO,OAAO,KAAK,CAAC,EAAE;gBAAA,KAAM;YAC5D,MAAM,EAAE;QACZ;IACF;IACA,OAAO;QAAC;WAAc;KAAO;AAC/B;AASA,SAAS,UAAU,EACjB,KAAK,EACL,KAAK,EACqE;IAC1E,IAAI,MAAM,IAAI,KAAK,YAAY,MAAM,IAAI,KAAK,SAC5C,OAAO,CAAA,GAAA,sJAAA,CAAA,YAAS,AAAT,EAAU,CAAA,GAAA,wJAAA,CAAA,UAAO,AAAP,EAAQ;IAC3B,IAAI,MAAM,IAAI,KAAK,WAAW,MAAM,IAAI,CAAC,KAAK,CAAC,qBAC7C,MAAM,IAAI,yIAAA,CAAA,8BAA2B,CAAC,MAAM,IAAI;IAClD,OAAO,CAAA,GAAA,+JAAA,CAAA,sBAAmB,AAAnB,EAAoB;QAAC;KAAM,EAAE;QAAC;KAAM;AAC7C"}},
    {"offset": {"line": 7789, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7794, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/actions/public/createContractEventFilter.ts"],"sourcesContent":["import type { Abi, Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockNumber, BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type {\n  ContractEventName,\n  MaybeExtractEventArgsFromAbi,\n} from '../../types/contract.js'\nimport type { Filter } from '../../types/filter.js'\nimport type { Hex } from '../../types/misc.js'\nimport {\n  type EncodeEventTopicsErrorType,\n  type EncodeEventTopicsParameters,\n  encodeEventTopics,\n} from '../../utils/abi/encodeEventTopics.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\nimport { createFilterRequestScope } from '../../utils/filters/createFilterRequestScope.js'\n\nexport type CreateContractEventFilterParameters<\n  abi extends Abi | readonly unknown[] = Abi,\n  eventName extends ContractEventName<abi> | undefined = undefined,\n  args extends\n    | MaybeExtractEventArgsFromAbi<abi, eventName>\n    | undefined = undefined,\n  strict extends boolean | undefined = undefined,\n  fromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  toBlock extends BlockNumber | BlockTag | undefined = undefined,\n> = {\n  address?: Address | Address[] | undefined\n  abi: abi\n  eventName?: eventName | ContractEventName<abi> | undefined\n  fromBlock?: fromBlock | BlockNumber | BlockTag | undefined\n  /**\n   * Whether or not the logs must match the indexed/non-indexed arguments in the event ABI item.\n   * @default false\n   */\n  strict?: strict | boolean | undefined\n  toBlock?: toBlock | BlockNumber | BlockTag | undefined\n} & (undefined extends eventName\n  ? {\n      args?: undefined\n    }\n  : MaybeExtractEventArgsFromAbi<abi, eventName> extends infer eventFilterArgs\n    ? {\n        args?:\n          | eventFilterArgs\n          | (args extends eventFilterArgs ? args : never)\n          | undefined\n      }\n    : {\n        args?: undefined\n      })\n\nexport type CreateContractEventFilterReturnType<\n  abi extends Abi | readonly unknown[] = Abi,\n  eventName extends ContractEventName<abi> | undefined = undefined,\n  args extends\n    | MaybeExtractEventArgsFromAbi<abi, eventName>\n    | undefined = undefined,\n  strict extends boolean | undefined = undefined,\n  fromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  toBlock extends BlockNumber | BlockTag | undefined = undefined,\n> = Filter<'event', abi, eventName, args, strict, fromBlock, toBlock>\n\nexport type CreateContractEventFilterErrorType =\n  | EncodeEventTopicsErrorType\n  | RequestErrorType\n  | NumberToHexErrorType\n  | ErrorType\n\n/**\n * Creates a Filter to retrieve event logs that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges) or [`getFilterLogs`](https://viem.sh/docs/actions/public/getFilterLogs).\n *\n * - Docs: https://viem.sh/docs/contract/createContractEventFilter\n *\n * @param client - Client to use\n * @param parameters - {@link CreateContractEventFilterParameters}\n * @returns [`Filter`](https://viem.sh/docs/glossary/types#filter). {@link CreateContractEventFilterReturnType}\n *\n * @example\n * import { createPublicClient, http, parseAbi } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createContractEventFilter } from 'viem/contract'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const filter = await createContractEventFilter(client, {\n *   abi: parseAbi(['event Transfer(address indexed, address indexed, uint256)']),\n * })\n */\nexport async function createContractEventFilter<\n  chain extends Chain | undefined,\n  const abi extends Abi | readonly unknown[],\n  eventName extends ContractEventName<abi> | undefined,\n  args extends MaybeExtractEventArgsFromAbi<abi, eventName> | undefined,\n  strict extends boolean | undefined = undefined,\n  fromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  toBlock extends BlockNumber | BlockTag | undefined = undefined,\n>(\n  client: Client<Transport, chain>,\n  parameters: CreateContractEventFilterParameters<\n    abi,\n    eventName,\n    args,\n    strict,\n    fromBlock,\n    toBlock\n  >,\n): Promise<\n  CreateContractEventFilterReturnType<\n    abi,\n    eventName,\n    args,\n    strict,\n    fromBlock,\n    toBlock\n  >\n> {\n  const { address, abi, args, eventName, fromBlock, strict, toBlock } =\n    parameters as CreateContractEventFilterParameters\n\n  const getRequest = createFilterRequestScope(client, {\n    method: 'eth_newFilter',\n  })\n\n  const topics = eventName\n    ? encodeEventTopics({\n        abi,\n        args,\n        eventName,\n      } as unknown as EncodeEventTopicsParameters)\n    : undefined\n  const id: Hex = await client.request({\n    method: 'eth_newFilter',\n    params: [\n      {\n        address,\n        fromBlock:\n          typeof fromBlock === 'bigint' ? numberToHex(fromBlock) : fromBlock,\n        toBlock: typeof toBlock === 'bigint' ? numberToHex(toBlock) : toBlock,\n        topics,\n      },\n    ],\n  })\n\n  return {\n    abi,\n    args,\n    eventName,\n    id,\n    request: getRequest(id),\n    strict: Boolean(strict),\n    type: 'event',\n  } as unknown as CreateContractEventFilterReturnType<\n    abi,\n    eventName,\n    args,\n    strict,\n    fromBlock,\n    toBlock\n  >\n}\n"],"names":[],"mappings":";;;;;;;;;;AAmGO,eAAe,0BASpB,MAAgC,EAChC,UAOC;IAWD,MAAM,EAAE,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,EAAE,OAAO,EAAE,GACjE;IAEF,MAAM,aAAa,CAAA,GAAA,wKAAA,CAAA,2BAAwB,AAAxB,EAAyB,QAAQ;QAClD,QAAQ;;IAGV,MAAM,SAAS,YACX,CAAA,GAAA,6JAAA,CAAA,oBAAiB,AAAjB,EAAkB;QAChB;QACA;QACA;SAEF;IACJ,MAAM,KAAU,MAAM,OAAO,OAAO,CAAC;QACnC,QAAQ;QACR,QAAQ;YACN;gBACE;gBACA,WACE,OAAO,cAAc,WAAW,CAAA,GAAA,sJAAA,CAAA,cAAW,AAAX,EAAY,aAAa;gBAC3D,SAAS,OAAO,YAAY,WAAW,CAAA,GAAA,sJAAA,CAAA,cAAW,AAAX,EAAY,WAAW;gBAC9D;;SAEH;;IAGH,OAAO;QACL;QACA;QACA;QACA;QACA,SAAS,WAAW;QACpB,QAAQ,QAAQ;QAChB,MAAM;;AASV"}},
    {"offset": {"line": 7835, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7840, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/actions/public/createEventFilter.ts"],"sourcesContent":["import type { AbiEvent, Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockNumber, BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type {\n  MaybeAbiEventName,\n  MaybeExtractEventArgsFromAbi,\n} from '../../types/contract.js'\nimport type { Filter } from '../../types/filter.js'\nimport type { Hex, LogTopic } from '../../types/misc.js'\nimport type { Prettify } from '../../types/utils.js'\nimport {\n  type EncodeEventTopicsErrorType,\n  type EncodeEventTopicsParameters,\n  encodeEventTopics,\n} from '../../utils/abi/encodeEventTopics.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\nimport { createFilterRequestScope } from '../../utils/filters/createFilterRequestScope.js'\n\nexport type CreateEventFilterParameters<\n  abiEvent extends AbiEvent | undefined = undefined,\n  abiEvents extends\n    | readonly AbiEvent[]\n    | readonly unknown[]\n    | undefined = abiEvent extends AbiEvent ? [abiEvent] : undefined,\n  strict extends boolean | undefined = undefined,\n  fromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  toBlock extends BlockNumber | BlockTag | undefined = undefined,\n  //\n  _eventName extends string | undefined = MaybeAbiEventName<abiEvent>,\n  _args extends\n    | MaybeExtractEventArgsFromAbi<abiEvents, _eventName>\n    | undefined = undefined,\n> = {\n  address?: Address | Address[] | undefined\n  fromBlock?: fromBlock | BlockNumber | BlockTag | undefined\n  toBlock?: toBlock | BlockNumber | BlockTag | undefined\n} & (MaybeExtractEventArgsFromAbi<\n  abiEvents,\n  _eventName\n> extends infer eventFilterArgs\n  ?\n      | {\n          args:\n            | eventFilterArgs\n            | (_args extends eventFilterArgs ? _args : never)\n          event: abiEvent\n          events?: undefined\n          /**\n           * Whether or not the logs must match the indexed/non-indexed arguments on `event`.\n           * @default false\n           */\n          strict?: strict | undefined\n        }\n      | {\n          args?: undefined\n          event?: abiEvent | undefined\n          events?: undefined\n          /**\n           * Whether or not the logs must match the indexed/non-indexed arguments on `event`.\n           * @default false\n           */\n          strict?: strict | undefined\n        }\n      | {\n          args?: undefined\n          event?: undefined\n          events: abiEvents | undefined\n          /**\n           * Whether or not the logs must match the indexed/non-indexed arguments on `event`.\n           * @default false\n           */\n          strict?: strict | undefined\n        }\n      | {\n          args?: undefined\n          event?: undefined\n          events?: undefined\n          strict?: undefined\n        }\n  : {\n      args?: undefined\n      event?: undefined\n      events?: undefined\n      strict?: undefined\n    })\n\nexport type CreateEventFilterReturnType<\n  abiEvent extends AbiEvent | undefined = undefined,\n  abiEvents extends\n    | readonly AbiEvent[]\n    | readonly unknown[]\n    | undefined = abiEvent extends AbiEvent ? [abiEvent] : undefined,\n  strict extends boolean | undefined = undefined,\n  fromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  toBlock extends BlockNumber | BlockTag | undefined = undefined,\n  _eventName extends string | undefined = MaybeAbiEventName<abiEvent>,\n  _args extends\n    | MaybeExtractEventArgsFromAbi<abiEvents, _eventName>\n    | undefined = undefined,\n> = Prettify<\n  Filter<'event', abiEvents, _eventName, _args, strict, fromBlock, toBlock>\n>\n\nexport type CreateEventFilterErrorType =\n  | EncodeEventTopicsErrorType\n  | RequestErrorType\n  | NumberToHexErrorType\n  | ErrorType\n\n/**\n * Creates a [`Filter`](https://viem.sh/docs/glossary/types#filter) to listen for new events that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges).\n *\n * - Docs: https://viem.sh/docs/actions/public/createEventFilter\n * - JSON-RPC Methods: [`eth_newFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newfilter)\n *\n * @param client - Client to use\n * @param parameters - {@link CreateEventFilterParameters}\n * @returns [`Filter`](https://viem.sh/docs/glossary/types#filter). {@link CreateEventFilterReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createEventFilter } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const filter = await createEventFilter(client, {\n *   address: '0xfba3912ca04dd458c843e2ee08967fc04f3579c2',\n * })\n */\nexport async function createEventFilter<\n  chain extends Chain | undefined,\n  const abiEvent extends AbiEvent | undefined = undefined,\n  const abiEvents extends\n    | readonly AbiEvent[]\n    | readonly unknown[]\n    | undefined = abiEvent extends AbiEvent ? [abiEvent] : undefined,\n  strict extends boolean | undefined = undefined,\n  fromBlock extends BlockNumber<bigint> | BlockTag | undefined = undefined,\n  toBlock extends BlockNumber<bigint> | BlockTag | undefined = undefined,\n  _eventName extends string | undefined = MaybeAbiEventName<abiEvent>,\n  _args extends\n    | MaybeExtractEventArgsFromAbi<abiEvents, _eventName>\n    | undefined = undefined,\n>(\n  client: Client<Transport, chain>,\n  {\n    address,\n    args,\n    event,\n    events: events_,\n    fromBlock,\n    strict,\n    toBlock,\n  }: CreateEventFilterParameters<\n    abiEvent,\n    abiEvents,\n    strict,\n    fromBlock,\n    toBlock,\n    _eventName,\n    _args\n  > = {} as any,\n): Promise<\n  CreateEventFilterReturnType<\n    abiEvent,\n    abiEvents,\n    strict,\n    fromBlock,\n    toBlock,\n    _eventName,\n    _args\n  >\n> {\n  const events = events_ ?? (event ? [event] : undefined)\n\n  const getRequest = createFilterRequestScope(client, {\n    method: 'eth_newFilter',\n  })\n\n  let topics: LogTopic[] = []\n  if (events) {\n    const encoded = (events as AbiEvent[]).flatMap((event) =>\n      encodeEventTopics({\n        abi: [event],\n        eventName: (event as AbiEvent).name,\n        args,\n      } as EncodeEventTopicsParameters),\n    )\n    // TODO: Clean up type casting\n    topics = [encoded as LogTopic]\n    if (event) topics = topics[0] as LogTopic[]\n  }\n\n  const id: Hex = await client.request({\n    method: 'eth_newFilter',\n    params: [\n      {\n        address,\n        fromBlock:\n          typeof fromBlock === 'bigint' ? numberToHex(fromBlock) : fromBlock,\n        toBlock: typeof toBlock === 'bigint' ? numberToHex(toBlock) : toBlock,\n        ...(topics.length ? { topics } : {}),\n      },\n    ],\n  })\n\n  return {\n    abi: events,\n    args,\n    eventName: event ? (event as AbiEvent).name : undefined,\n    fromBlock,\n    id,\n    request: getRequest(id),\n    strict: Boolean(strict),\n    toBlock,\n    type: 'event',\n  } as unknown as CreateEventFilterReturnType<\n    abiEvent,\n    abiEvents,\n    strict,\n    fromBlock,\n    toBlock,\n    _eventName,\n    _args\n  >\n}\n"],"names":[],"mappings":";;;;;;;;;;AA4IO,eAAe,kBAepB,MAAgC,EAChC,EACE,OAAO,EACP,IAAI,EACJ,KAAK,EACL,QAAQ,OAAO,EACf,SAAS,EACT,MAAM,EACN,OAAO,EAAA,GASL,CAAA,CAAS;IAYb,MAAM,SAAS,WAAW,CAAC,QAAQ;QAAC;KAAM,GAAG,SAAS;IAEtD,MAAM,aAAa,CAAA,GAAA,wKAAA,CAAA,2BAAwB,AAAxB,EAAyB,QAAQ;QAClD,QAAQ;;IAGV,IAAI,SAAqB,EAAE;IAC3B,IAAI,QAAQ;QACV,MAAM,UAAW,OAAsB,OAAO,CAAC,CAAC,QAC9C,CAAA,GAAA,6JAAA,CAAA,oBAAiB,AAAjB,EAAkB;gBAChB,KAAK;oBAAC;iBAAM;gBACZ,WAAY,MAAmB,IAAI;gBACnC;;QAGJ,8BAA8B;QAC9B,SAAS;YAAC;SAAoB;QAC9B,IAAI,OAAO,SAAS,MAAM,CAAC,EAAgB;IAC7C;IAEA,MAAM,KAAU,MAAM,OAAO,OAAO,CAAC;QACnC,QAAQ;QACR,QAAQ;YACN;gBACE;gBACA,WACE,OAAO,cAAc,WAAW,CAAA,GAAA,sJAAA,CAAA,cAAW,AAAX,EAAY,aAAa;gBAC3D,SAAS,OAAO,YAAY,WAAW,CAAA,GAAA,sJAAA,CAAA,cAAW,AAAX,EAAY,WAAW;gBAC9D,GAAI,OAAO,MAAM,GAAG;oBAAE;gBAAM,IAAK,CAAA,CAAE;;SAEtC;;IAGH,OAAO;QACL,KAAK;QACL;QACA,WAAW,QAAS,MAAmB,IAAI,GAAG;QAC9C;QACA;QACA,SAAS,WAAW;QACpB,QAAQ,QAAQ;QAChB;QACA,MAAM;;AAUV"}},
    {"offset": {"line": 7897, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7902, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/actions/public/createPendingTransactionFilter.ts"],"sourcesContent":["import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Filter } from '../../types/filter.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport { createFilterRequestScope } from '../../utils/filters/createFilterRequestScope.js'\n\nexport type CreatePendingTransactionFilterReturnType = Filter<'transaction'>\n\nexport type CreatePendingTransactionFilterErrorType =\n  | RequestErrorType\n  | ErrorType\n\n/**\n * Creates a Filter to listen for new pending transaction hashes that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges).\n *\n * - Docs: https://viem.sh/docs/actions/public/createPendingTransactionFilter\n * - JSON-RPC Methods: [`eth_newPendingTransactionFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newpendingtransactionfilter)\n *\n * @param client - Client to use\n * @returns [`Filter`](https://viem.sh/docs/glossary/types#filter). {@link CreateBlockFilterReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createPendingTransactionFilter } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const filter = await createPendingTransactionFilter(client)\n * // { id: \"0x345a6572337856574a76364e457a4366\", type: 'transaction' }\n */\nexport async function createPendingTransactionFilter<\n  transport extends Transport,\n  chain extends Chain | undefined,\n>(\n  client: Client<transport, chain>,\n): Promise<CreatePendingTransactionFilterReturnType> {\n  const getRequest = createFilterRequestScope(client, {\n    method: 'eth_newPendingTransactionFilter',\n  })\n  const id = await client.request({\n    method: 'eth_newPendingTransactionFilter',\n  })\n  return { id, request: getRequest(id), type: 'transaction' }\n}\n"],"names":[],"mappings":";;;;;;AAmCO,eAAe,+BAIpB,MAAgC;IAEhC,MAAM,aAAa,CAAA,GAAA,wKAAA,CAAA,2BAAwB,AAAxB,EAAyB,QAAQ;QAClD,QAAQ;;IAEV,MAAM,KAAK,MAAM,OAAO,OAAO,CAAC;QAC9B,QAAQ;;IAEV,OAAO;QAAE;QAAI,SAAS,WAAW;QAAK,MAAM;IAAa;AAC3D"}},
    {"offset": {"line": 7921, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7926, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/accounts/utils/publicKeyToAddress.ts"],"sourcesContent":["import type { Address } from 'abitype'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Hex } from '../../types/misc.js'\nimport {\n  type ChecksumAddressErrorType,\n  checksumAddress,\n} from '../../utils/address/getAddress.js'\nimport {\n  type Keccak256ErrorType,\n  keccak256,\n} from '../../utils/hash/keccak256.js'\n\nexport type PublicKeyToAddressErrorType =\n  | ChecksumAddressErrorType\n  | Keccak256ErrorType\n  | ErrorType\n\n/**\n * @description Converts an ECDSA public key to an address.\n *\n * @param publicKey The public key to convert.\n *\n * @returns The address.\n */\nexport function publicKeyToAddress(publicKey: Hex): Address {\n  const address = keccak256(`0x${publicKey.substring(4)}`).substring(26)\n  return checksumAddress(`0x${address}`) as Address\n}\n"],"names":[],"mappings":";;;;;;;;AAyBM,SAAU,mBAAmB,SAAc;IAC/C,MAAM,UAAU,CAAA,GAAA,sJAAA,CAAA,YAAS,AAAT,EAAU,CAAA,EAAA,EAAK,UAAU,SAAS,CAAC,GAAE,CAAE,EAAE,SAAS,CAAC;IACnE,OAAO,CAAA,GAAA,0JAAA,CAAA,kBAAe,AAAf,EAAgB,CAAA,EAAA,EAAK,QAAO,CAAE;AACvC"}},
    {"offset": {"line": 7938, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7943, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/signature/recoverPublicKey.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex, Signature } from '../../types/misc.js'\nimport { type IsHexErrorType, isHex } from '../data/isHex.js'\nimport {\n  type HexToNumberErrorType,\n  hexToBigInt,\n  hexToNumber,\n} from '../encoding/fromHex.js'\nimport { toHex } from '../encoding/toHex.js'\n\nexport type RecoverPublicKeyParameters = {\n  hash: Hex | ByteArray\n  signature: Hex | ByteArray | Signature\n}\n\nexport type RecoverPublicKeyReturnType = Hex\n\nexport type RecoverPublicKeyErrorType =\n  | HexToNumberErrorType\n  | IsHexErrorType\n  | ErrorType\n\nexport async function recoverPublicKey({\n  hash,\n  signature,\n}: RecoverPublicKeyParameters): Promise<RecoverPublicKeyReturnType> {\n  const hashHex = isHex(hash) ? hash : toHex(hash)\n\n  const { secp256k1 } = await import('@noble/curves/secp256k1')\n  const signature_ = (() => {\n    // typeof signature: `Signature`\n    if (typeof signature === 'object' && 'r' in signature && 's' in signature) {\n      const { r, s, v, yParity } = signature\n      const yParityOrV = Number(yParity ?? v)!\n      const recoveryBit = toRecoveryBit(yParityOrV)\n      return new secp256k1.Signature(\n        hexToBigInt(r),\n        hexToBigInt(s),\n      ).addRecoveryBit(recoveryBit)\n    }\n\n    // typeof signature: `Hex | ByteArray`\n    const signatureHex = isHex(signature) ? signature : toHex(signature)\n    const yParityOrV = hexToNumber(`0x${signatureHex.slice(130)}`)\n    const recoveryBit = toRecoveryBit(yParityOrV)\n    return secp256k1.Signature.fromCompact(\n      signatureHex.substring(2, 130),\n    ).addRecoveryBit(recoveryBit)\n  })()\n\n  const publicKey = signature_\n    .recoverPublicKey(hashHex.substring(2))\n    .toHex(false)\n  return `0x${publicKey}`\n}\n\nfunction toRecoveryBit(yParityOrV: number) {\n  if (yParityOrV === 0 || yParityOrV === 1) return yParityOrV\n  if (yParityOrV === 27) return 0\n  if (yParityOrV === 28) return 1\n  throw new Error('Invalid yParityOrV value')\n}\n"],"names":[],"mappings":";;;;;;;;;;AAsBO,eAAe,iBAAiB,EACrC,IAAI,EACJ,SAAS,EACkB;IAC3B,MAAM,UAAU,CAAA,GAAA,kJAAA,CAAA,QAAK,AAAL,EAAM,QAAQ,OAAO,CAAA,GAAA,sJAAA,CAAA,QAAK,AAAL,EAAM;IAE3C,MAAM,EAAE,SAAS,EAAE,GAAG;IACtB,MAAM,aAAa,CAAC;QAClB,gCAAgC;QAChC,IAAI,OAAO,cAAc,YAAY,OAAO,aAAa,OAAO,WAAW;YACzE,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,EAAE,GAAG;YAC7B,MAAM,aAAa,OAAO,WAAW;YACrC,MAAM,cAAc,cAAc;YAClC,OAAO,IAAI,UAAU,SAAS,CAC5B,CAAA,GAAA,wJAAA,CAAA,cAAW,AAAX,EAAY,IACZ,CAAA,GAAA,wJAAA,CAAA,cAAW,AAAX,EAAY,IACZ,cAAc,CAAC;QACnB;QAEA,sCAAsC;QACtC,MAAM,eAAe,CAAA,GAAA,kJAAA,CAAA,QAAK,AAAL,EAAM,aAAa,YAAY,CAAA,GAAA,sJAAA,CAAA,QAAK,AAAL,EAAM;QAC1D,MAAM,aAAa,CAAA,GAAA,wJAAA,CAAA,cAAW,AAAX,EAAY,CAAA,EAAA,EAAK,aAAa,KAAK,CAAC,KAAI,CAAE;QAC7D,MAAM,cAAc,cAAc;QAClC,OAAO,UAAU,SAAS,CAAC,WAAW,CACpC,aAAa,SAAS,CAAC,GAAG,MAC1B,cAAc,CAAC;IACnB,CAAC;IAED,MAAM,YAAY,WACf,gBAAgB,CAAC,QAAQ,SAAS,CAAC,IACnC,KAAK,CAAC;IACT,OAAO,CAAA,EAAA,EAAK,UAAS,CAAE;AACzB;AAEA,SAAS,cAAc,UAAkB;IACvC,IAAI,eAAe,KAAK,eAAe,GAAG,OAAO;IACjD,IAAI,eAAe,IAAI,OAAO;IAC9B,IAAI,eAAe,IAAI,OAAO;IAC9B,MAAM,IAAI,MAAM;AAClB"}},
    {"offset": {"line": 7979, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7984, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/signature/recoverAddress.ts"],"sourcesContent":["import type { Address } from 'abitype'\n\nimport { publicKeyToAddress } from '../../accounts/utils/publicKeyToAddress.js'\nimport type { ByteArray, Hex, Signature } from '../../types/misc.js'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport { recoverPublicKey } from './recoverPublicKey.js'\n\nexport type RecoverAddressParameters = {\n  hash: Hex | ByteArray\n  signature: Hex | ByteArray | Signature\n}\n\nexport type RecoverAddressReturnType = Address\n\nexport type RecoverAddressErrorType = ErrorType\n\nexport async function recoverAddress({\n  hash,\n  signature,\n}: RecoverAddressParameters): Promise<RecoverAddressReturnType> {\n  return publicKeyToAddress(await recoverPublicKey({ hash: hash, signature }))\n}\n"],"names":[],"mappings":";;;;;;;;AAiBO,eAAe,eAAe,EACnC,IAAI,EACJ,SAAS,EACgB;IACzB,OAAO,CAAA,GAAA,mKAAA,CAAA,qBAAkB,AAAlB,EAAmB,MAAM,CAAA,GAAA,kKAAA,CAAA,mBAAgB,AAAhB,EAAiB;QAAE,MAAM;QAAM;IAAS;AAC1E"}},
    {"offset": {"line": 7998, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8003, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/encoding/toRlp.ts"],"sourcesContent":["import { BaseError } from '../../errors/base.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport {\n  type CreateCursorErrorType,\n  type Cursor,\n  createCursor,\n} from '../cursor.js'\n\nimport { type HexToBytesErrorType, hexToBytes } from './toBytes.js'\nimport { type BytesToHexErrorType, bytesToHex } from './toHex.js'\n\nexport type RecursiveArray<T> = T | readonly RecursiveArray<T>[]\n\ntype To = 'hex' | 'bytes'\n\ntype Encodable = {\n  length: number\n  encode(cursor: Cursor): void\n}\n\nexport type ToRlpReturnType<to extends To> =\n  | (to extends 'bytes' ? ByteArray : never)\n  | (to extends 'hex' ? Hex : never)\n\nexport type ToRlpErrorType =\n  | CreateCursorErrorType\n  | BytesToHexErrorType\n  | HexToBytesErrorType\n  | ErrorType\n\nexport function toRlp<to extends To = 'hex'>(\n  bytes: RecursiveArray<ByteArray> | RecursiveArray<Hex>,\n  to: to | To | undefined = 'hex',\n): ToRlpReturnType<to> {\n  const encodable = getEncodable(bytes)\n  const cursor = createCursor(new Uint8Array(encodable.length))\n  encodable.encode(cursor)\n\n  if (to === 'hex') return bytesToHex(cursor.bytes) as ToRlpReturnType<to>\n  return cursor.bytes as ToRlpReturnType<to>\n}\n\nexport type BytesToRlpErrorType = ToRlpErrorType | ErrorType\n\nexport function bytesToRlp<to extends To = 'bytes'>(\n  bytes: RecursiveArray<ByteArray>,\n  to: to | To | undefined = 'bytes',\n): ToRlpReturnType<to> {\n  return toRlp(bytes, to)\n}\n\nexport type HexToRlpErrorType = ToRlpErrorType | ErrorType\n\nexport function hexToRlp<to extends To = 'hex'>(\n  hex: RecursiveArray<Hex>,\n  to: to | To | undefined = 'hex',\n): ToRlpReturnType<to> {\n  return toRlp(hex, to)\n}\n\nfunction getEncodable(\n  bytes: RecursiveArray<ByteArray> | RecursiveArray<Hex>,\n): Encodable {\n  if (Array.isArray(bytes))\n    return getEncodableList(bytes.map((x) => getEncodable(x)))\n  return getEncodableBytes(bytes as any)\n}\n\nfunction getEncodableList(list: Encodable[]): Encodable {\n  const bodyLength = list.reduce((acc, x) => acc + x.length, 0)\n\n  const sizeOfBodyLength = getSizeOfLength(bodyLength)\n  const length = (() => {\n    if (bodyLength <= 55) return 1 + bodyLength\n    return 1 + sizeOfBodyLength + bodyLength\n  })()\n\n  return {\n    length,\n    encode(cursor: Cursor) {\n      if (bodyLength <= 55) {\n        cursor.pushByte(0xc0 + bodyLength)\n      } else {\n        cursor.pushByte(0xc0 + 55 + sizeOfBodyLength)\n        if (sizeOfBodyLength === 1) cursor.pushUint8(bodyLength)\n        else if (sizeOfBodyLength === 2) cursor.pushUint16(bodyLength)\n        else if (sizeOfBodyLength === 3) cursor.pushUint24(bodyLength)\n        else cursor.pushUint32(bodyLength)\n      }\n      for (const { encode } of list) {\n        encode(cursor)\n      }\n    },\n  }\n}\n\nfunction getEncodableBytes(bytesOrHex: ByteArray | Hex): Encodable {\n  const bytes =\n    typeof bytesOrHex === 'string' ? hexToBytes(bytesOrHex) : bytesOrHex\n\n  const sizeOfBytesLength = getSizeOfLength(bytes.length)\n  const length = (() => {\n    if (bytes.length === 1 && bytes[0] < 0x80) return 1\n    if (bytes.length <= 55) return 1 + bytes.length\n    return 1 + sizeOfBytesLength + bytes.length\n  })()\n\n  return {\n    length,\n    encode(cursor: Cursor) {\n      if (bytes.length === 1 && bytes[0] < 0x80) {\n        cursor.pushBytes(bytes)\n      } else if (bytes.length <= 55) {\n        cursor.pushByte(0x80 + bytes.length)\n        cursor.pushBytes(bytes)\n      } else {\n        cursor.pushByte(0x80 + 55 + sizeOfBytesLength)\n        if (sizeOfBytesLength === 1) cursor.pushUint8(bytes.length)\n        else if (sizeOfBytesLength === 2) cursor.pushUint16(bytes.length)\n        else if (sizeOfBytesLength === 3) cursor.pushUint24(bytes.length)\n        else cursor.pushUint32(bytes.length)\n        cursor.pushBytes(bytes)\n      }\n    },\n  }\n}\n\nfunction getSizeOfLength(length: number) {\n  if (length < 2 ** 8) return 1\n  if (length < 2 ** 16) return 2\n  if (length < 2 ** 24) return 3\n  if (length < 2 ** 32) return 4\n  throw new BaseError('Length is too large.')\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 8093, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8098, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/experimental/eip7702/utils/hashAuthorization.ts"],"sourcesContent":["import type { ErrorType } from '../../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../../types/misc.js'\nimport {\n  type ConcatHexErrorType,\n  concatHex,\n} from '../../../utils/data/concat.js'\nimport {\n  type HexToBytesErrorType,\n  hexToBytes,\n} from '../../../utils/encoding/toBytes.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../../utils/encoding/toHex.js'\nimport { type ToRlpErrorType, toRlp } from '../../../utils/encoding/toRlp.js'\nimport {\n  type Keccak256ErrorType,\n  keccak256,\n} from '../../../utils/hash/keccak256.js'\nimport type { Authorization } from '../types/authorization.js'\n\ntype To = 'hex' | 'bytes'\n\nexport type HashAuthorizationParameters<to extends To> = Authorization & {\n  /** Output format. @default \"hex\" */\n  to?: to | To | undefined\n}\n\nexport type HashAuthorizationReturnType<to extends To> =\n  | (to extends 'bytes' ? ByteArray : never)\n  | (to extends 'hex' ? Hex : never)\n\nexport type HashAuthorizationErrorType =\n  | Keccak256ErrorType\n  | ConcatHexErrorType\n  | ToRlpErrorType\n  | NumberToHexErrorType\n  | HexToBytesErrorType\n  | ErrorType\n\n/**\n * Computes an Authorization hash in [EIP-7702 format](https://eips.ethereum.org/EIPS/eip-7702): `keccak256('0x05' || rlp([chain_id, address, nonce]))`.\n */\nexport function hashAuthorization<to extends To = 'hex'>(\n  parameters: HashAuthorizationParameters<to>,\n): HashAuthorizationReturnType<to> {\n  const { chainId, contractAddress, nonce, to } = parameters\n  const hash = keccak256(\n    concatHex([\n      '0x05',\n      toRlp([\n        chainId ? numberToHex(chainId) : '0x',\n        contractAddress,\n        nonce ? numberToHex(nonce) : '0x',\n      ]),\n    ]),\n  )\n  if (to === 'bytes') return hexToBytes(hash) as HashAuthorizationReturnType<to>\n  return hash as HashAuthorizationReturnType<to>\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;AA2CM,SAAU,kBACd,UAA2C;IAE3C,MAAM,EAAE,OAAO,EAAE,eAAe,EAAE,KAAK,EAAE,EAAE,EAAE,GAAG;IAChD,MAAM,OAAO,CAAA,GAAA,sJAAA,CAAA,YAAS,AAAT,EACX,CAAA,GAAA,mJAAA,CAAA,YAAS,AAAT,EAAU;QACR;QACA,CAAA,GAAA,sJAAA,CAAA,QAAK,AAAL,EAAM;YACJ,UAAU,CAAA,GAAA,sJAAA,CAAA,cAAW,AAAX,EAAY,WAAW;YACjC;YACA,QAAQ,CAAA,GAAA,sJAAA,CAAA,cAAW,AAAX,EAAY,SAAS;SAC9B;KACF;IAEH,IAAI,OAAO,SAAS,OAAO,CAAA,GAAA,wJAAA,CAAA,aAAU,AAAV,EAAW;IACtC,OAAO;AACT"}},
    {"offset": {"line": 8125, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8130, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/experimental/eip7702/utils/recoverAuthorizationAddress.ts"],"sourcesContent":["import type { Address } from 'abitype'\n\nimport type { ErrorType } from '../../../errors/utils.js'\nimport type { ByteArray, Hex, Signature } from '../../../types/misc.js'\nimport type { OneOf } from '../../../types/utils.js'\nimport {\n  type RecoverAddressErrorType,\n  recoverAddress,\n} from '../../../utils/signature/recoverAddress.js'\nimport type {\n  Authorization,\n  SignedAuthorization,\n} from '../types/authorization.js'\nimport {\n  type HashAuthorizationErrorType,\n  hashAuthorization,\n} from './hashAuthorization.js'\n\nexport type RecoverAuthorizationAddressParameters<\n  authorization extends OneOf<Authorization | SignedAuthorization> = OneOf<\n    Authorization | SignedAuthorization\n  >,\n  //\n  _signature = Hex | ByteArray | OneOf<Signature | SignedAuthorization>,\n> = {\n  /**\n   * The Authorization object.\n   *\n   * - If an unsigned `authorization` is provided, the `signature` property is required.\n   * - If a signed `authorization` is provided, the `signature` property does not need to be provided.\n   */\n  authorization: authorization | OneOf<Authorization | SignedAuthorization>\n} & (authorization extends SignedAuthorization\n  ? {\n      /** Signature of the Authorization. Not required if the `authorization` is signed. */\n      signature?: _signature | undefined\n    }\n  : {\n      /** Signature of the Authorization. Not required if the `authorization` is signed. */\n      signature: _signature\n    })\n\nexport type RecoverAuthorizationAddressReturnType = Address\n\nexport type RecoverAuthorizationAddressErrorType =\n  | HashAuthorizationErrorType\n  | RecoverAddressErrorType\n  | ErrorType\n\nexport async function recoverAuthorizationAddress<\n  const authorization extends OneOf<Authorization | SignedAuthorization>,\n>(\n  parameters: RecoverAuthorizationAddressParameters<authorization>,\n): Promise<RecoverAuthorizationAddressReturnType> {\n  const { authorization, signature } = parameters\n\n  return recoverAddress({\n    hash: hashAuthorization(authorization as Authorization),\n    signature: (signature ?? authorization) as Signature,\n  })\n}\n"],"names":[],"mappings":";;;;;;;;AAiDO,eAAe,4BAGpB,UAAgE;IAEhE,MAAM,EAAE,aAAa,EAAE,SAAS,EAAE,GAAG;IAErC,OAAO,CAAA,GAAA,gKAAA,CAAA,iBAAc,AAAd,EAAe;QACpB,MAAM,CAAA,GAAA,iLAAA,CAAA,oBAAiB,AAAjB,EAAkB;QACxB,WAAY,aAAa;;AAE7B"}},
    {"offset": {"line": 8145, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8150, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/errors/estimateGas.ts"],"sourcesContent":["import type { Account } from '../accounts/types.js'\nimport type { EstimateGasParameters } from '../actions/public/estimateGas.js'\nimport type { Chain } from '../types/chain.js'\nimport { formatEther } from '../utils/unit/formatEther.js'\nimport { formatGwei } from '../utils/unit/formatGwei.js'\n\nimport { BaseError } from './base.js'\nimport { prettyPrint } from './transaction.js'\n\nexport type EstimateGasExecutionErrorType = EstimateGasExecutionError & {\n  name: 'EstimateGasExecutionError'\n}\nexport class EstimateGasExecutionError extends BaseError {\n  override cause: BaseError\n\n  constructor(\n    cause: BaseError,\n    {\n      account,\n      docsPath,\n      chain,\n      data,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      to,\n      value,\n    }: Omit<EstimateGasParameters<any>, 'account'> & {\n      account?: Account | undefined\n      chain?: Chain | undefined\n      docsPath?: string | undefined\n    },\n  ) {\n    const prettyArgs = prettyPrint({\n      from: account?.address,\n      to,\n      value:\n        typeof value !== 'undefined' &&\n        `${formatEther(value)} ${chain?.nativeCurrency?.symbol || 'ETH'}`,\n      data,\n      gas,\n      gasPrice:\n        typeof gasPrice !== 'undefined' && `${formatGwei(gasPrice)} gwei`,\n      maxFeePerGas:\n        typeof maxFeePerGas !== 'undefined' &&\n        `${formatGwei(maxFeePerGas)} gwei`,\n      maxPriorityFeePerGas:\n        typeof maxPriorityFeePerGas !== 'undefined' &&\n        `${formatGwei(maxPriorityFeePerGas)} gwei`,\n      nonce,\n    })\n\n    super(cause.shortMessage, {\n      cause,\n      docsPath,\n      metaMessages: [\n        ...(cause.metaMessages ? [...cause.metaMessages, ' '] : []),\n        'Estimate Gas Arguments:',\n        prettyArgs,\n      ].filter(Boolean) as string[],\n      name: 'EstimateGasExecutionError',\n    })\n    this.cause = cause\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;;;;AAYM,MAAO,kCAAkC,0IAAA,CAAA,YAAS;IAGtD,YACE,KAAgB,EAChB,EACE,OAAO,EACP,QAAQ,EACR,KAAK,EACL,IAAI,EACJ,GAAG,EACH,QAAQ,EACR,YAAY,EACZ,oBAAoB,EACpB,KAAK,EACL,EAAE,EACF,KAAK,EAKN,CAAA;QAED,MAAM,aAAa,CAAA,GAAA,iJAAA,CAAA,cAAW,AAAX,EAAY;YAC7B,MAAM,SAAS;YACf;YACA,OACE,OAAO,UAAU,eACjB,CAAA,EAAG,CAAA,GAAA,wJAAA,CAAA,cAAW,AAAX,EAAY,OAAM,CAAA,EAAI,OAAO,gBAAgB,UAAU,MAAK,CAAE;YACnE;YACA;YACA,UACE,OAAO,aAAa,eAAe,CAAA,EAAG,CAAA,GAAA,uJAAA,CAAA,aAAU,AAAV,EAAW,UAAS,KAAA,CAAO;YACnE,cACE,OAAO,iBAAiB,eACxB,CAAA,EAAG,CAAA,GAAA,uJAAA,CAAA,aAAU,AAAV,EAAW,cAAa,KAAA,CAAO;YACpC,sBACE,OAAO,yBAAyB,eAChC,CAAA,EAAG,CAAA,GAAA,uJAAA,CAAA,aAAU,AAAV,EAAW,sBAAqB,KAAA,CAAO;YAC5C;;QAGF,KAAK,CAAC,MAAM,YAAY,EAAE;YACxB;YACA;YACA,cAAc;mBACR,MAAM,YAAY,GAAG;uBAAI,MAAM,YAAY;oBAAE;iBAAI,GAAG,EAAE;gBAC1D;gBACA;aACD,CAAC,MAAM,CAAC;YACT,MAAM;;QAjDD,OAAA,cAAA,CAAA,IAAA,EAAA,SAAA;;;;;;QAmDP,IAAI,CAAC,KAAK,GAAG;IACf"}},
    {"offset": {"line": 8197, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8202, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/errors/getEstimateGasError.ts"],"sourcesContent":["import type { Account } from '../../accounts/types.js'\nimport type { EstimateGasParameters } from '../../actions/public/estimateGas.js'\nimport type { BaseError } from '../../errors/base.js'\nimport {\n  EstimateGasExecutionError,\n  type EstimateGasExecutionErrorType,\n} from '../../errors/estimateGas.js'\nimport { UnknownNodeError } from '../../errors/node.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\n\nimport {\n  type GetNodeErrorParameters,\n  type GetNodeErrorReturnType,\n  getNodeError,\n} from './getNodeError.js'\n\nexport type GetEstimateGasErrorReturnType<cause = ErrorType> = Omit<\n  EstimateGasExecutionErrorType,\n  'cause'\n> & { cause: cause | GetNodeErrorReturnType }\n\nexport function getEstimateGasError<err extends ErrorType<string>>(\n  err: err,\n  {\n    docsPath,\n    ...args\n  }: Omit<EstimateGasParameters, 'account'> & {\n    account?: Account | undefined\n    chain?: Chain | undefined\n    docsPath?: string | undefined\n  },\n): GetEstimateGasErrorReturnType<err> {\n  const cause = (() => {\n    const cause = getNodeError(\n      err as {} as BaseError,\n      args as GetNodeErrorParameters,\n    )\n    if (cause instanceof UnknownNodeError) return err as {} as BaseError\n    return cause\n  })()\n  return new EstimateGasExecutionError(cause, {\n    docsPath,\n    ...args,\n  }) as GetEstimateGasErrorReturnType<err>\n}\n"],"names":[],"mappings":";;;;;;;;;;AAsBM,SAAU,oBACd,GAAQ,EACR,EACE,QAAQ,EACR,GAAG,MAKJ;IAED,MAAM,QAAQ,CAAC;QACb,MAAM,QAAQ,CAAA,GAAA,2JAAA,CAAA,eAAY,AAAZ,EACZ,KACA;QAEF,IAAI,iBAAiB,0IAAA,CAAA,mBAAgB,EAAE,OAAO;QAC9C,OAAO;IACT,CAAC;IACD,OAAO,IAAI,iJAAA,CAAA,4BAAyB,CAAC,OAAO;QAC1C;QACA,GAAG,IAAI;;AAEX"}},
    {"offset": {"line": 8223, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8228, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/errors/fee.ts"],"sourcesContent":["import { formatGwei } from '../utils/unit/formatGwei.js'\nimport { BaseError } from './base.js'\n\nexport type BaseFeeScalarErrorType = BaseFeeScalarError & {\n  name: 'BaseFeeScalarError'\n}\nexport class BaseFeeScalarError extends BaseError {\n  constructor() {\n    super('`baseFeeMultiplier` must be greater than 1.', {\n      name: 'BaseFeeScalarError',\n    })\n  }\n}\n\nexport type Eip1559FeesNotSupportedErrorType = Eip1559FeesNotSupportedError & {\n  name: 'Eip1559FeesNotSupportedError'\n}\nexport class Eip1559FeesNotSupportedError extends BaseError {\n  constructor() {\n    super('Chain does not support EIP-1559 fees.', {\n      name: 'Eip1559FeesNotSupportedError',\n    })\n  }\n}\n\nexport type MaxFeePerGasTooLowErrorType = MaxFeePerGasTooLowError & {\n  name: 'MaxFeePerGasTooLowError'\n}\nexport class MaxFeePerGasTooLowError extends BaseError {\n  constructor({ maxPriorityFeePerGas }: { maxPriorityFeePerGas: bigint }) {\n    super(\n      `\\`maxFeePerGas\\` cannot be less than the \\`maxPriorityFeePerGas\\` (${formatGwei(\n        maxPriorityFeePerGas,\n      )} gwei).`,\n      { name: 'MaxFeePerGasTooLowError' },\n    )\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;;AAMM,MAAO,2BAA2B,0IAAA,CAAA,YAAS;IAC/C,aAAA;QACE,KAAK,CAAC,+CAA+C;YACnD,MAAM;;IAEV;;AAMI,MAAO,qCAAqC,0IAAA,CAAA,YAAS;IACzD,aAAA;QACE,KAAK,CAAC,yCAAyC;YAC7C,MAAM;;IAEV;;AAMI,MAAO,gCAAgC,0IAAA,CAAA,YAAS;IACpD,YAAY,EAAE,oBAAoB,EAAoC,CAAA;QACpE,KAAK,CACH,CAAA,mEAAA,EAAsE,CAAA,GAAA,uJAAA,CAAA,aAAU,AAAV,EACpE,sBACD,OAAA,CAAS,EACV;YAAE,MAAM;QAAyB;IAErC"}},
    {"offset": {"line": 8259, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8264, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/errors/block.ts"],"sourcesContent":["import type { Hash } from '../types/misc.js'\n\nimport { BaseError } from './base.js'\n\nexport type BlockNotFoundErrorType = BlockNotFoundError & {\n  name: 'BlockNotFoundError'\n}\nexport class BlockNotFoundError extends BaseError {\n  constructor({\n    blockHash,\n    blockNumber,\n  }: {\n    blockHash?: Hash | undefined\n    blockNumber?: bigint | undefined\n  }) {\n    let identifier = 'Block'\n    if (blockHash) identifier = `Block at hash \"${blockHash}\"`\n    if (blockNumber) identifier = `Block at number \"${blockNumber}\"`\n    super(`${identifier} could not be found.`, { name: 'BlockNotFoundError' })\n  }\n}\n"],"names":[],"mappings":";;;;;;AAOM,MAAO,2BAA2B,0IAAA,CAAA,YAAS;IAC/C,YAAY,EACV,SAAS,EACT,WAAW,EAIZ,CAAA;QACC,IAAI,aAAa;QACjB,IAAI,WAAW,aAAa,CAAA,eAAA,EAAkB,UAAS,CAAA,CAAG;QAC1D,IAAI,aAAa,aAAa,CAAA,iBAAA,EAAoB,YAAW,CAAA,CAAG;QAChE,KAAK,CAAC,CAAA,EAAG,WAAU,oBAAA,CAAsB,EAAE;YAAE,MAAM;QAAoB;IACzE"}},
    {"offset": {"line": 8280, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8285, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/formatters/transaction.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\nimport type { SignedAuthorizationList } from '../../experimental/eip7702/types/authorization.js'\nimport type { RpcAuthorizationList } from '../../experimental/eip7702/types/rpc.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type {\n  ExtractChainFormatterExclude,\n  ExtractChainFormatterReturnType,\n} from '../../types/chain.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { RpcTransaction } from '../../types/rpc.js'\nimport type { Transaction, TransactionType } from '../../types/transaction.js'\nimport type { ExactPartial, UnionLooseOmit } from '../../types/utils.js'\nimport { hexToNumber } from '../encoding/fromHex.js'\nimport { type DefineFormatterErrorType, defineFormatter } from './formatter.js'\n\ntype TransactionPendingDependencies =\n  | 'blockHash'\n  | 'blockNumber'\n  | 'transactionIndex'\n\nexport type FormattedTransaction<\n  chain extends Chain | undefined = undefined,\n  blockTag extends BlockTag = BlockTag,\n  _FormatterReturnType = ExtractChainFormatterReturnType<\n    chain,\n    'transaction',\n    Transaction\n  >,\n  _ExcludedPendingDependencies extends string = TransactionPendingDependencies &\n    ExtractChainFormatterExclude<chain, 'transaction'>,\n> = UnionLooseOmit<_FormatterReturnType, TransactionPendingDependencies> & {\n  [_K in _ExcludedPendingDependencies]: never\n} & Pick<\n    Transaction<bigint, number, blockTag extends 'pending' ? true : false>,\n    TransactionPendingDependencies\n  >\n\nexport const transactionType = {\n  '0x0': 'legacy',\n  '0x1': 'eip2930',\n  '0x2': 'eip1559',\n  '0x3': 'eip4844',\n  '0x4': 'eip7702',\n} as const satisfies Record<Hex, TransactionType>\n\nexport type FormatTransactionErrorType = ErrorType\n\nexport function formatTransaction(transaction: ExactPartial<RpcTransaction>) {\n  const transaction_ = {\n    ...transaction,\n    blockHash: transaction.blockHash ? transaction.blockHash : null,\n    blockNumber: transaction.blockNumber\n      ? BigInt(transaction.blockNumber)\n      : null,\n    chainId: transaction.chainId ? hexToNumber(transaction.chainId) : undefined,\n    gas: transaction.gas ? BigInt(transaction.gas) : undefined,\n    gasPrice: transaction.gasPrice ? BigInt(transaction.gasPrice) : undefined,\n    maxFeePerBlobGas: transaction.maxFeePerBlobGas\n      ? BigInt(transaction.maxFeePerBlobGas)\n      : undefined,\n    maxFeePerGas: transaction.maxFeePerGas\n      ? BigInt(transaction.maxFeePerGas)\n      : undefined,\n    maxPriorityFeePerGas: transaction.maxPriorityFeePerGas\n      ? BigInt(transaction.maxPriorityFeePerGas)\n      : undefined,\n    nonce: transaction.nonce ? hexToNumber(transaction.nonce) : undefined,\n    to: transaction.to ? transaction.to : null,\n    transactionIndex: transaction.transactionIndex\n      ? Number(transaction.transactionIndex)\n      : null,\n    type: transaction.type\n      ? (transactionType as any)[transaction.type]\n      : undefined,\n    typeHex: transaction.type ? transaction.type : undefined,\n    value: transaction.value ? BigInt(transaction.value) : undefined,\n    v: transaction.v ? BigInt(transaction.v) : undefined,\n  } as Transaction\n\n  if (transaction.authorizationList)\n    transaction_.authorizationList = formatAuthorizationList(\n      transaction.authorizationList,\n    )\n\n  transaction_.yParity = (() => {\n    // If `yParity` is provided, we will use it.\n    if (transaction.yParity) return Number(transaction.yParity)\n\n    // If no `yParity` provided, try derive from `v`.\n    if (typeof transaction_.v === 'bigint') {\n      if (transaction_.v === 0n || transaction_.v === 27n) return 0\n      if (transaction_.v === 1n || transaction_.v === 28n) return 1\n      if (transaction_.v >= 35n) return transaction_.v % 2n === 0n ? 1 : 0\n    }\n\n    return undefined\n  })()\n\n  if (transaction_.type === 'legacy') {\n    delete transaction_.accessList\n    delete transaction_.maxFeePerBlobGas\n    delete transaction_.maxFeePerGas\n    delete transaction_.maxPriorityFeePerGas\n    delete transaction_.yParity\n  }\n  if (transaction_.type === 'eip2930') {\n    delete transaction_.maxFeePerBlobGas\n    delete transaction_.maxFeePerGas\n    delete transaction_.maxPriorityFeePerGas\n  }\n  if (transaction_.type === 'eip1559') {\n    delete transaction_.maxFeePerBlobGas\n  }\n  return transaction_\n}\n\nexport type DefineTransactionErrorType = DefineFormatterErrorType | ErrorType\n\nexport const defineTransaction = /*#__PURE__*/ defineFormatter(\n  'transaction',\n  formatTransaction,\n)\n\n//////////////////////////////////////////////////////////////////////////////\n\nfunction formatAuthorizationList(\n  authorizationList: RpcAuthorizationList,\n): SignedAuthorizationList {\n  return authorizationList.map((authorization) => ({\n    contractAddress: (authorization as any).address,\n    chainId: Number(authorization.chainId),\n    nonce: Number(authorization.nonce),\n    r: authorization.r,\n    s: authorization.s,\n    yParity: Number(authorization.yParity),\n  })) as SignedAuthorizationList\n}\n"],"names":[],"mappings":";;;;;;;;;;AAsCO,MAAM,kBAAkB;IAC7B,OAAO;IACP,OAAO;IACP,OAAO;IACP,OAAO;IACP,OAAO;;AAKH,SAAU,kBAAkB,WAAyC;IACzE,MAAM,eAAe;QACnB,GAAG,WAAW;QACd,WAAW,YAAY,SAAS,GAAG,YAAY,SAAS,GAAG;QAC3D,aAAa,YAAY,WAAW,GAChC,OAAO,YAAY,WAAW,IAC9B;QACJ,SAAS,YAAY,OAAO,GAAG,CAAA,GAAA,wJAAA,CAAA,cAAW,AAAX,EAAY,YAAY,OAAO,IAAI;QAClE,KAAK,YAAY,GAAG,GAAG,OAAO,YAAY,GAAG,IAAI;QACjD,UAAU,YAAY,QAAQ,GAAG,OAAO,YAAY,QAAQ,IAAI;QAChE,kBAAkB,YAAY,gBAAgB,GAC1C,OAAO,YAAY,gBAAgB,IACnC;QACJ,cAAc,YAAY,YAAY,GAClC,OAAO,YAAY,YAAY,IAC/B;QACJ,sBAAsB,YAAY,oBAAoB,GAClD,OAAO,YAAY,oBAAoB,IACvC;QACJ,OAAO,YAAY,KAAK,GAAG,CAAA,GAAA,wJAAA,CAAA,cAAW,AAAX,EAAY,YAAY,KAAK,IAAI;QAC5D,IAAI,YAAY,EAAE,GAAG,YAAY,EAAE,GAAG;QACtC,kBAAkB,YAAY,gBAAgB,GAC1C,OAAO,YAAY,gBAAgB,IACnC;QACJ,MAAM,YAAY,IAAI,GACjB,eAAuB,CAAC,YAAY,IAAI,CAAC,GAC1C;QACJ,SAAS,YAAY,IAAI,GAAG,YAAY,IAAI,GAAG;QAC/C,OAAO,YAAY,KAAK,GAAG,OAAO,YAAY,KAAK,IAAI;QACvD,GAAG,YAAY,CAAC,GAAG,OAAO,YAAY,CAAC,IAAI;;IAG7C,IAAI,YAAY,iBAAiB,EAC/B,aAAa,iBAAiB,GAAG,wBAC/B,YAAY,iBAAiB;IAGjC,aAAa,OAAO,GAAG,CAAC;QACtB,4CAA4C;QAC5C,IAAI,YAAY,OAAO,EAAE,OAAO,OAAO,YAAY,OAAO;QAE1D,iDAAiD;QACjD,IAAI,OAAO,aAAa,CAAC,KAAK,UAAU;YACtC,IAAI,aAAa,CAAC,KAAK,EAAE,IAAI,aAAa,CAAC,KAAK,GAAG,EAAE,OAAO;YAC5D,IAAI,aAAa,CAAC,KAAK,EAAE,IAAI,aAAa,CAAC,KAAK,GAAG,EAAE,OAAO;YAC5D,IAAI,aAAa,CAAC,IAAI,GAAG,EAAE,OAAO,aAAa,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI;QACrE;QAEA,OAAO;IACT,CAAC;IAED,IAAI,aAAa,IAAI,KAAK,UAAU;QAClC,OAAO,aAAa,UAAU;QAC9B,OAAO,aAAa,gBAAgB;QACpC,OAAO,aAAa,YAAY;QAChC,OAAO,aAAa,oBAAoB;QACxC,OAAO,aAAa,OAAO;IAC7B;IACA,IAAI,aAAa,IAAI,KAAK,WAAW;QACnC,OAAO,aAAa,gBAAgB;QACpC,OAAO,aAAa,YAAY;QAChC,OAAO,aAAa,oBAAoB;IAC1C;IACA,IAAI,aAAa,IAAI,KAAK,WAAW;QACnC,OAAO,aAAa,gBAAgB;IACtC;IACA,OAAO;AACT;AAIO,MAAM,oBAAoB,WAAA,GAAc,CAAA,GAAA,4JAAA,CAAA,kBAAe,AAAf,EAC7C,eACA;AAGF,8EAA8E;AAE9E,SAAS,wBACP,iBAAuC;IAEvC,OAAO,kBAAkB,GAAG,CAAC,CAAC,gBAAkB,CAAC;YAC/C,iBAAkB,cAAsB,OAAO;YAC/C,SAAS,OAAO,cAAc,OAAO;YACrC,OAAO,OAAO,cAAc,KAAK;YACjC,GAAG,cAAc,CAAC;YAClB,GAAG,cAAc,CAAC;YAClB,SAAS,OAAO,cAAc,OAAO;SACtC;AACH"}},
    {"offset": {"line": 8362, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8367, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/formatters/block.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\nimport type { Block, BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type {\n  ExtractChainFormatterExclude,\n  ExtractChainFormatterReturnType,\n} from '../../types/chain.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { RpcBlock } from '../../types/rpc.js'\nimport type { ExactPartial, Prettify } from '../../types/utils.js'\n\nimport { type DefineFormatterErrorType, defineFormatter } from './formatter.js'\nimport { type FormattedTransaction, formatTransaction } from './transaction.js'\n\ntype BlockPendingDependencies = 'hash' | 'logsBloom' | 'nonce' | 'number'\n\nexport type FormattedBlock<\n  chain extends Chain | undefined = undefined,\n  includeTransactions extends boolean = boolean,\n  blockTag extends BlockTag = BlockTag,\n  _FormatterReturnType = ExtractChainFormatterReturnType<\n    chain,\n    'block',\n    Block<bigint, includeTransactions>\n  >,\n  _ExcludedPendingDependencies extends string = BlockPendingDependencies &\n    ExtractChainFormatterExclude<chain, 'block'>,\n  _Formatted = Omit<_FormatterReturnType, BlockPendingDependencies> & {\n    [_key in _ExcludedPendingDependencies]: never\n  } & Pick<\n      Block<bigint, includeTransactions, blockTag>,\n      BlockPendingDependencies\n    >,\n  _Transactions = includeTransactions extends true\n    ? Prettify<FormattedTransaction<chain, blockTag>>[]\n    : Hash[],\n> = Omit<_Formatted, 'transactions'> & {\n  transactions: _Transactions\n}\n\nexport type FormatBlockErrorType = ErrorType\n\nexport function formatBlock(block: ExactPartial<RpcBlock>) {\n  const transactions = block.transactions?.map((transaction) => {\n    if (typeof transaction === 'string') return transaction\n    return formatTransaction(transaction)\n  })\n  return {\n    ...block,\n    baseFeePerGas: block.baseFeePerGas ? BigInt(block.baseFeePerGas) : null,\n    blobGasUsed: block.blobGasUsed ? BigInt(block.blobGasUsed) : undefined,\n    difficulty: block.difficulty ? BigInt(block.difficulty) : undefined,\n    excessBlobGas: block.excessBlobGas\n      ? BigInt(block.excessBlobGas)\n      : undefined,\n    gasLimit: block.gasLimit ? BigInt(block.gasLimit) : undefined,\n    gasUsed: block.gasUsed ? BigInt(block.gasUsed) : undefined,\n    hash: block.hash ? block.hash : null,\n    logsBloom: block.logsBloom ? block.logsBloom : null,\n    nonce: block.nonce ? block.nonce : null,\n    number: block.number ? BigInt(block.number) : null,\n    size: block.size ? BigInt(block.size) : undefined,\n    timestamp: block.timestamp ? BigInt(block.timestamp) : undefined,\n    transactions,\n    totalDifficulty: block.totalDifficulty\n      ? BigInt(block.totalDifficulty)\n      : null,\n  } as Block\n}\n\nexport type DefineBlockErrorType = DefineFormatterErrorType | ErrorType\n\nexport const defineBlock = /*#__PURE__*/ defineFormatter('block', formatBlock)\n"],"names":[],"mappings":";;;;;;;;;AA0CM,SAAU,YAAY,KAA6B;IACvD,MAAM,eAAe,MAAM,YAAY,EAAE,IAAI,CAAC;QAC5C,IAAI,OAAO,gBAAgB,UAAU,OAAO;QAC5C,OAAO,CAAA,GAAA,8JAAA,CAAA,oBAAiB,AAAjB,EAAkB;IAC3B;IACA,OAAO;QACL,GAAG,KAAK;QACR,eAAe,MAAM,aAAa,GAAG,OAAO,MAAM,aAAa,IAAI;QACnE,aAAa,MAAM,WAAW,GAAG,OAAO,MAAM,WAAW,IAAI;QAC7D,YAAY,MAAM,UAAU,GAAG,OAAO,MAAM,UAAU,IAAI;QAC1D,eAAe,MAAM,aAAa,GAC9B,OAAO,MAAM,aAAa,IAC1B;QACJ,UAAU,MAAM,QAAQ,GAAG,OAAO,MAAM,QAAQ,IAAI;QACpD,SAAS,MAAM,OAAO,GAAG,OAAO,MAAM,OAAO,IAAI;QACjD,MAAM,MAAM,IAAI,GAAG,MAAM,IAAI,GAAG;QAChC,WAAW,MAAM,SAAS,GAAG,MAAM,SAAS,GAAG;QAC/C,OAAO,MAAM,KAAK,GAAG,MAAM,KAAK,GAAG;QACnC,QAAQ,MAAM,MAAM,GAAG,OAAO,MAAM,MAAM,IAAI;QAC9C,MAAM,MAAM,IAAI,GAAG,OAAO,MAAM,IAAI,IAAI;QACxC,WAAW,MAAM,SAAS,GAAG,OAAO,MAAM,SAAS,IAAI;QACvD;QACA,iBAAiB,MAAM,eAAe,GAClC,OAAO,MAAM,eAAe,IAC5B;;AAER;AAIO,MAAM,cAAc,WAAA,GAAc,CAAA,GAAA,4JAAA,CAAA,kBAAe,AAAf,EAAgB,SAAS"}},
    {"offset": {"line": 8400, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8405, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/actions/public/getBlock.ts"],"sourcesContent":["import type { Account } from '../../accounts/types.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport {\n  BlockNotFoundError,\n  type BlockNotFoundErrorType,\n} from '../../errors/block.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { RpcBlock } from '../../types/rpc.js'\nimport type { Prettify } from '../../types/utils.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\nimport {\n  type FormattedBlock,\n  formatBlock,\n} from '../../utils/formatters/block.js'\n\nexport type GetBlockParameters<\n  includeTransactions extends boolean = false,\n  blockTag extends BlockTag = 'latest',\n> = {\n  /** Whether or not to include transaction data in the response. */\n  includeTransactions?: includeTransactions | undefined\n} & (\n  | {\n      /** Hash of the block. */\n      blockHash?: Hash | undefined\n      blockNumber?: undefined\n      blockTag?: undefined\n    }\n  | {\n      blockHash?: undefined\n      /** The block number. */\n      blockNumber?: bigint | undefined\n      blockTag?: undefined\n    }\n  | {\n      blockHash?: undefined\n      blockNumber?: undefined\n      /**\n       * The block tag.\n       * @default 'latest'\n       */\n      blockTag?: blockTag | BlockTag | undefined\n    }\n)\n\nexport type GetBlockReturnType<\n  chain extends Chain | undefined = undefined,\n  includeTransactions extends boolean = false,\n  blockTag extends BlockTag = 'latest',\n> = Prettify<FormattedBlock<chain, includeTransactions, blockTag>>\n\nexport type GetBlockErrorType =\n  | BlockNotFoundErrorType\n  | NumberToHexErrorType\n  | RequestErrorType\n  | ErrorType\n\n/**\n * Returns information about a block at a block number, hash, or tag.\n *\n * - Docs: https://viem.sh/docs/actions/public/getBlock\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/blocks/fetching-blocks\n * - JSON-RPC Methods:\n *   - Calls [`eth_getBlockByNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblockbynumber) for `blockNumber` & `blockTag`.\n *   - Calls [`eth_getBlockByHash`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblockbyhash) for `blockHash`.\n *\n * @param client - Client to use\n * @param parameters - {@link GetBlockParameters}\n * @returns Information about the block. {@link GetBlockReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getBlock } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const block = await getBlock(client)\n */\nexport async function getBlock<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n  includeTransactions extends boolean = false,\n  blockTag extends BlockTag = 'latest',\n>(\n  client: Client<Transport, chain, account>,\n  {\n    blockHash,\n    blockNumber,\n    blockTag: blockTag_,\n    includeTransactions: includeTransactions_,\n  }: GetBlockParameters<includeTransactions, blockTag> = {},\n): Promise<GetBlockReturnType<chain, includeTransactions, blockTag>> {\n  const blockTag = blockTag_ ?? 'latest'\n  const includeTransactions = includeTransactions_ ?? false\n\n  const blockNumberHex =\n    blockNumber !== undefined ? numberToHex(blockNumber) : undefined\n\n  let block: RpcBlock | null = null\n  if (blockHash) {\n    block = await client.request(\n      {\n        method: 'eth_getBlockByHash',\n        params: [blockHash, includeTransactions],\n      },\n      { dedupe: true },\n    )\n  } else {\n    block = await client.request(\n      {\n        method: 'eth_getBlockByNumber',\n        params: [blockNumberHex || blockTag, includeTransactions],\n      },\n      { dedupe: Boolean(blockNumberHex) },\n    )\n  }\n\n  if (!block) throw new BlockNotFoundError({ blockHash, blockNumber })\n\n  const format = client.chain?.formatters?.block?.format || formatBlock\n  return format(block)\n}\n"],"names":[],"mappings":";;;;;;;;;;AAyFO,eAAe,SAMpB,MAAyC,EACzC,EACE,SAAS,EACT,WAAW,EACX,UAAU,SAAS,EACnB,qBAAqB,oBAAoB,EAAA,GACY,CAAA,CAAE;IAEzD,MAAM,WAAW,aAAa;IAC9B,MAAM,sBAAsB,wBAAwB;IAEpD,MAAM,iBACJ,gBAAgB,YAAY,CAAA,GAAA,sJAAA,CAAA,cAAW,AAAX,EAAY,eAAe;IAEzD,IAAI,QAAyB;IAC7B,IAAI,WAAW;QACb,QAAQ,MAAM,OAAO,OAAO,CAC1B;YACE,QAAQ;YACR,QAAQ;gBAAC;gBAAW;aAAoB;WAE1C;YAAE,QAAQ;QAAI;IAElB,OAAO;QACL,QAAQ,MAAM,OAAO,OAAO,CAC1B;YACE,QAAQ;YACR,QAAQ;gBAAC,kBAAkB;gBAAU;aAAoB;WAE3D;YAAE,QAAQ,QAAQ;QAAe;IAErC;IAEA,IAAI,CAAC,OAAO,MAAM,IAAI,2IAAA,CAAA,qBAAkB,CAAC;QAAE;QAAW;IAAW;IAEjE,MAAM,SAAS,OAAO,KAAK,EAAE,YAAY,OAAO,UAAU,wJAAA,CAAA,cAAW;IACrE,OAAO,OAAO;AAChB"}},
    {"offset": {"line": 8448, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8453, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/actions/public/getGasPrice.ts"],"sourcesContent":["import type { Account } from '../../accounts/types.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type GetGasPriceReturnType = bigint\n\nexport type GetGasPriceErrorType = RequestErrorType | ErrorType\n\n/**\n * Returns the current price of gas (in wei).\n *\n * - Docs: https://viem.sh/docs/actions/public/getGasPrice\n * - JSON-RPC Methods: [`eth_gasPrice`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_gasprice)\n *\n * @param client - Client to use\n * @returns The gas price (in wei). {@link GetGasPriceReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getGasPrice } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const gasPrice = await getGasPrice(client)\n */\nexport async function getGasPrice<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n>(client: Client<Transport, chain, account>): Promise<GetGasPriceReturnType> {\n  const gasPrice = await client.request({\n    method: 'eth_gasPrice',\n  })\n  return BigInt(gasPrice)\n}\n"],"names":[],"mappings":"AAWA;;;;;;;;;;;;;;;;;;;;;;AAoBO,eAAe,YAGpB,MAAyC;IACzC,MAAM,WAAW,MAAM,OAAO,OAAO,CAAC;QACpC,QAAQ;;IAEV,OAAO,OAAO;AAChB"}},
    {"offset": {"line": 8481, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8486, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/actions/public/estimateMaxPriorityFeePerGas.ts"],"sourcesContent":["import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport {\n  Eip1559FeesNotSupportedError,\n  type Eip1559FeesNotSupportedErrorType,\n} from '../../errors/fee.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Block } from '../../types/block.js'\nimport type { Chain, ChainFeesFnParameters } from '../../types/chain.js'\nimport type { GetChainParameter } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type HexToBigIntErrorType,\n  hexToBigInt,\n} from '../../utils/encoding/fromHex.js'\nimport { getAction } from '../../utils/getAction.js'\nimport type { PrepareTransactionRequestParameters } from '../wallet/prepareTransactionRequest.js'\nimport { type GetBlockErrorType, getBlock } from './getBlock.js'\nimport { type GetGasPriceErrorType, getGasPrice } from './getGasPrice.js'\n\nexport type EstimateMaxPriorityFeePerGasParameters<\n  chain extends Chain | undefined = Chain | undefined,\n  chainOverride extends Chain | undefined = Chain | undefined,\n> = GetChainParameter<chain, chainOverride>\n\nexport type EstimateMaxPriorityFeePerGasReturnType = bigint\n\nexport type EstimateMaxPriorityFeePerGasErrorType =\n  | GetBlockErrorType\n  | HexToBigIntErrorType\n  | RequestErrorType\n  | GetBlockErrorType\n  | GetGasPriceErrorType\n  | Eip1559FeesNotSupportedErrorType\n  | ErrorType\n\n/**\n * Returns an estimate for the max priority fee per gas (in wei) for a\n * transaction to be likely included in the next block.\n * Defaults to [`chain.fees.defaultPriorityFee`](/docs/clients/chains#fees-defaultpriorityfee) if set.\n *\n * - Docs: https://viem.sh/docs/actions/public/estimateMaxPriorityFeePerGas\n *\n * @param client - Client to use\n * @returns An estimate (in wei) for the max priority fee per gas. {@link EstimateMaxPriorityFeePerGasReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { estimateMaxPriorityFeePerGas } from 'viem/actions'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const maxPriorityFeePerGas = await estimateMaxPriorityFeePerGas(client)\n * // 10000000n\n */\nexport async function estimateMaxPriorityFeePerGas<\n  chain extends Chain | undefined,\n  chainOverride extends Chain | undefined,\n>(\n  client: Client<Transport, chain>,\n  args?:\n    | EstimateMaxPriorityFeePerGasParameters<chain, chainOverride>\n    | undefined,\n): Promise<EstimateMaxPriorityFeePerGasReturnType> {\n  return internal_estimateMaxPriorityFeePerGas(client, args as any)\n}\n\nexport async function internal_estimateMaxPriorityFeePerGas<\n  chain extends Chain | undefined,\n  chainOverride extends Chain | undefined,\n>(\n  client: Client<Transport, chain>,\n  args: EstimateMaxPriorityFeePerGasParameters<chain, chainOverride> & {\n    block?: Block | undefined\n    request?:\n      | PrepareTransactionRequestParameters<\n          chain,\n          Account | undefined,\n          chainOverride\n        >\n      | undefined\n  },\n): Promise<EstimateMaxPriorityFeePerGasReturnType> {\n  const { block: block_, chain = client.chain, request } = args || {}\n\n  try {\n    const maxPriorityFeePerGas =\n      chain?.fees?.maxPriorityFeePerGas ?? chain?.fees?.defaultPriorityFee\n\n    if (typeof maxPriorityFeePerGas === 'function') {\n      const block =\n        block_ || (await getAction(client, getBlock, 'getBlock')({}))\n      const maxPriorityFeePerGas_ = await maxPriorityFeePerGas({\n        block,\n        client,\n        request,\n      } as ChainFeesFnParameters)\n      if (maxPriorityFeePerGas_ === null) throw new Error()\n      return maxPriorityFeePerGas_\n    }\n\n    if (typeof maxPriorityFeePerGas !== 'undefined') return maxPriorityFeePerGas\n\n    const maxPriorityFeePerGasHex = await client.request({\n      method: 'eth_maxPriorityFeePerGas',\n    })\n    return hexToBigInt(maxPriorityFeePerGasHex)\n  } catch {\n    // If the RPC Provider does not support `eth_maxPriorityFeePerGas`\n    // fall back to calculating it manually via `gasPrice - baseFeePerGas`.\n    // See: https://github.com/ethereum/pm/issues/328#:~:text=eth_maxPriorityFeePerGas%20after%20London%20will%20effectively%20return%20eth_gasPrice%20%2D%20baseFee\n    const [block, gasPrice] = await Promise.all([\n      block_\n        ? Promise.resolve(block_)\n        : getAction(client, getBlock, 'getBlock')({}),\n      getAction(client, getGasPrice, 'getGasPrice')({}),\n    ])\n\n    if (typeof block.baseFeePerGas !== 'bigint')\n      throw new Eip1559FeesNotSupportedError()\n\n    const maxPriorityFeePerGas = gasPrice - block.baseFeePerGas\n\n    if (maxPriorityFeePerGas < 0n) return 0n\n    return maxPriorityFeePerGas\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;AA2DO,eAAe,6BAIpB,MAAgC,EAChC,IAEa;IAEb,OAAO,sCAAsC,QAAQ;AACvD;AAEO,eAAe,sCAIpB,MAAgC,EAChC,IASC;IAED,MAAM,EAAE,OAAO,MAAM,EAAE,QAAQ,OAAO,KAAK,EAAE,OAAO,EAAE,GAAG,QAAQ,CAAA;IAEjE,IAAI;QACF,MAAM,uBACJ,OAAO,MAAM,wBAAwB,OAAO,MAAM;QAEpD,IAAI,OAAO,yBAAyB,YAAY;YAC9C,MAAM,QACJ,UAAW,MAAM,CAAA,GAAA,8IAAA,CAAA,YAAS,AAAT,EAAU,QAAQ,yJAAA,CAAA,WAAQ,EAAE,YAAY,CAAA;YAC3D,MAAM,wBAAwB,MAAM,qBAAqB;gBACvD;gBACA;gBACA;;YAEF,IAAI,0BAA0B,MAAM,MAAM,IAAI;YAC9C,OAAO;QACT;QAEA,IAAI,OAAO,yBAAyB,aAAa,OAAO;QAExD,MAAM,0BAA0B,MAAM,OAAO,OAAO,CAAC;YACnD,QAAQ;;QAEV,OAAO,CAAA,GAAA,wJAAA,CAAA,cAAW,AAAX,EAAY;IACrB,EAAE,OAAM;QACN,kEAAkE;QAClE,uEAAuE;QACvE,gKAAgK;QAChK,MAAM,CAAC,OAAO,SAAS,GAAG,MAAM,QAAQ,GAAG,CAAC;YAC1C,SACI,QAAQ,OAAO,CAAC,UAChB,CAAA,GAAA,8IAAA,CAAA,YAAS,AAAT,EAAU,QAAQ,yJAAA,CAAA,WAAQ,EAAE,YAAY,CAAA;YAC5C,CAAA,GAAA,8IAAA,CAAA,YAAS,AAAT,EAAU,QAAQ,4JAAA,CAAA,cAAW,EAAE,eAAe,CAAA;SAC/C;QAED,IAAI,OAAO,MAAM,aAAa,KAAK,UACjC,MAAM,IAAI,yIAAA,CAAA,+BAA4B;QAExC,MAAM,uBAAuB,WAAW,MAAM,aAAa;QAE3D,IAAI,uBAAuB,EAAE,EAAE,OAAO,EAAE;QACxC,OAAO;IACT;AACF"}},
    {"offset": {"line": 8537, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8542, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/actions/public/estimateFeesPerGas.ts"],"sourcesContent":["import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport {\n  BaseFeeScalarError,\n  type BaseFeeScalarErrorType,\n  Eip1559FeesNotSupportedError,\n  type Eip1559FeesNotSupportedErrorType,\n} from '../../errors/fee.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Block } from '../../types/block.js'\nimport type {\n  Chain,\n  ChainEstimateFeesPerGasFnParameters,\n  ChainFeesFnParameters,\n  GetChainParameter,\n} from '../../types/chain.js'\nimport type {\n  FeeValuesEIP1559,\n  FeeValuesLegacy,\n  FeeValuesType,\n} from '../../types/fee.js'\nimport { getAction } from '../../utils/getAction.js'\nimport type { PrepareTransactionRequestParameters } from '../wallet/prepareTransactionRequest.js'\nimport {\n  type EstimateMaxPriorityFeePerGasErrorType,\n  internal_estimateMaxPriorityFeePerGas,\n} from './estimateMaxPriorityFeePerGas.js'\nimport { getBlock } from './getBlock.js'\nimport { type GetGasPriceErrorType, getGasPrice } from './getGasPrice.js'\n\nexport type EstimateFeesPerGasParameters<\n  chain extends Chain | undefined = Chain | undefined,\n  chainOverride extends Chain | undefined = Chain | undefined,\n  type extends FeeValuesType = FeeValuesType,\n> = {\n  /**\n   * The type of fee values to return.\n   *\n   * - `legacy`: Returns the legacy gas price.\n   * - `eip1559`: Returns the max fee per gas and max priority fee per gas.\n   *\n   * @default 'eip1559'\n   */\n  type?: type | FeeValuesType | undefined\n} & GetChainParameter<chain, chainOverride>\n\nexport type EstimateFeesPerGasReturnType<\n  type extends FeeValuesType = FeeValuesType,\n> =\n  | (type extends 'legacy' ? FeeValuesLegacy : never)\n  | (type extends 'eip1559' ? FeeValuesEIP1559 : never)\n\nexport type EstimateFeesPerGasErrorType =\n  | BaseFeeScalarErrorType\n  | EstimateMaxPriorityFeePerGasErrorType\n  | GetGasPriceErrorType\n  | Eip1559FeesNotSupportedErrorType\n  | ErrorType\n\n/**\n * Returns an estimate for the fees per gas (in wei) for a\n * transaction to be likely included in the next block.\n * Defaults to [`chain.fees.estimateFeesPerGas`](/docs/clients/chains#fees-estimatefeespergas) if set.\n *\n * - Docs: https://viem.sh/docs/actions/public/estimateFeesPerGas\n *\n * @param client - Client to use\n * @param parameters - {@link EstimateFeesPerGasParameters}\n * @returns An estimate (in wei) for the fees per gas. {@link EstimateFeesPerGasReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { estimateFeesPerGas } from 'viem/actions'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const maxPriorityFeePerGas = await estimateFeesPerGas(client)\n * // { maxFeePerGas: ..., maxPriorityFeePerGas: ... }\n */\nexport async function estimateFeesPerGas<\n  chain extends Chain | undefined,\n  chainOverride extends Chain | undefined,\n  type extends FeeValuesType = 'eip1559',\n>(\n  client: Client<Transport, chain>,\n  args?: EstimateFeesPerGasParameters<chain, chainOverride, type> | undefined,\n): Promise<EstimateFeesPerGasReturnType<type>> {\n  return internal_estimateFeesPerGas(client, args as any)\n}\n\nexport async function internal_estimateFeesPerGas<\n  chain extends Chain | undefined,\n  chainOverride extends Chain | undefined,\n  type extends FeeValuesType = 'eip1559',\n>(\n  client: Client<Transport, chain>,\n  args: EstimateFeesPerGasParameters<chain, chainOverride, type> & {\n    block?: Block | undefined\n    request?: PrepareTransactionRequestParameters<Chain, Account> | undefined\n  },\n): Promise<EstimateFeesPerGasReturnType<type>> {\n  const {\n    block: block_,\n    chain = client.chain,\n    request,\n    type = 'eip1559',\n  } = args || {}\n\n  const baseFeeMultiplier = await (async () => {\n    if (typeof chain?.fees?.baseFeeMultiplier === 'function')\n      return chain.fees.baseFeeMultiplier({\n        block: block_ as Block,\n        client,\n        request,\n      } as ChainFeesFnParameters)\n    return chain?.fees?.baseFeeMultiplier ?? 1.2\n  })()\n  if (baseFeeMultiplier < 1) throw new BaseFeeScalarError()\n\n  const decimals = baseFeeMultiplier.toString().split('.')[1]?.length ?? 0\n  const denominator = 10 ** decimals\n  const multiply = (base: bigint) =>\n    (base * BigInt(Math.ceil(baseFeeMultiplier * denominator))) /\n    BigInt(denominator)\n\n  const block = block_\n    ? block_\n    : await getAction(client, getBlock, 'getBlock')({})\n\n  if (typeof chain?.fees?.estimateFeesPerGas === 'function') {\n    const fees = (await chain.fees.estimateFeesPerGas({\n      block: block_ as Block,\n      client,\n      multiply,\n      request,\n      type,\n    } as ChainEstimateFeesPerGasFnParameters)) as unknown as EstimateFeesPerGasReturnType<type>\n\n    if (fees !== null) return fees\n  }\n\n  if (type === 'eip1559') {\n    if (typeof block.baseFeePerGas !== 'bigint')\n      throw new Eip1559FeesNotSupportedError()\n\n    const maxPriorityFeePerGas =\n      typeof request?.maxPriorityFeePerGas === 'bigint'\n        ? request.maxPriorityFeePerGas\n        : await internal_estimateMaxPriorityFeePerGas(\n            client as Client<Transport, Chain>,\n            {\n              block: block as Block,\n              chain,\n              request,\n            },\n          )\n\n    const baseFeePerGas = multiply(block.baseFeePerGas)\n    const maxFeePerGas =\n      request?.maxFeePerGas ?? baseFeePerGas + maxPriorityFeePerGas\n\n    return {\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n    } as EstimateFeesPerGasReturnType<type>\n  }\n\n  const gasPrice =\n    request?.gasPrice ??\n    multiply(await getAction(client, getGasPrice, 'getGasPrice')({}))\n  return {\n    gasPrice,\n  } as EstimateFeesPerGasReturnType<type>\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;AAmFO,eAAe,mBAKpB,MAAgC,EAChC,IAA2E;IAE3E,OAAO,4BAA4B,QAAQ;AAC7C;AAEO,eAAe,4BAKpB,MAAgC,EAChC,IAGC;IAED,MAAM,EACJ,OAAO,MAAM,EACb,QAAQ,OAAO,KAAK,EACpB,OAAO,EACP,OAAO,SAAS,EACjB,GAAG,QAAQ,CAAA;IAEZ,MAAM,oBAAoB,MAAM,CAAC;QAC/B,IAAI,OAAO,OAAO,MAAM,sBAAsB,YAC5C,OAAO,MAAM,IAAI,CAAC,iBAAiB,CAAC;YAClC,OAAO;YACP;YACA;;QAEJ,OAAO,OAAO,MAAM,qBAAqB;IAC3C,CAAC;IACD,IAAI,oBAAoB,GAAG,MAAM,IAAI,yIAAA,CAAA,qBAAkB;IAEvD,MAAM,WAAW,kBAAkB,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,EAAE,UAAU;IACvE,MAAM,cAAc,MAAM;IAC1B,MAAM,WAAW,CAAC,OAChB,AAAC,OAAO,OAAO,KAAK,IAAI,CAAC,oBAAoB,gBAC7C,OAAO;IAET,MAAM,QAAQ,SACV,SACA,MAAM,CAAA,GAAA,8IAAA,CAAA,YAAS,AAAT,EAAU,QAAQ,yJAAA,CAAA,WAAQ,EAAE,YAAY,CAAA;IAElD,IAAI,OAAO,OAAO,MAAM,uBAAuB,YAAY;QACzD,MAAM,OAAQ,MAAM,MAAM,IAAI,CAAC,kBAAkB,CAAC;YAChD,OAAO;YACP;YACA;YACA;YACA;;QAGF,IAAI,SAAS,MAAM,OAAO;IAC5B;IAEA,IAAI,SAAS,WAAW;QACtB,IAAI,OAAO,MAAM,aAAa,KAAK,UACjC,MAAM,IAAI,yIAAA,CAAA,+BAA4B;QAExC,MAAM,uBACJ,OAAO,SAAS,yBAAyB,WACrC,QAAQ,oBAAoB,GAC5B,MAAM,CAAA,GAAA,6KAAA,CAAA,wCAAqC,AAArC,EACJ,QACA;YACE,OAAO;YACP;YACA;;QAIV,MAAM,gBAAgB,SAAS,MAAM,aAAa;QAClD,MAAM,eACJ,SAAS,gBAAgB,gBAAgB;QAE3C,OAAO;YACL;YACA;;IAEJ;IAEA,MAAM,WACJ,SAAS,YACT,SAAS,MAAM,CAAA,GAAA,8IAAA,CAAA,YAAS,AAAT,EAAU,QAAQ,4JAAA,CAAA,cAAW,EAAE,eAAe,CAAA;IAC/D,OAAO;QACL;;AAEJ"}},
    {"offset": {"line": 8604, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8609, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/actions/public/getTransactionCount.ts"],"sourcesContent":["import type { Address } from 'abitype'\n\nimport type { Account } from '../../accounts/types.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type HexToNumberErrorType,\n  hexToNumber,\n} from '../../utils/encoding/fromHex.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\n\nexport type GetTransactionCountParameters = {\n  /** The account address. */\n  address: Address\n} & (\n  | {\n      /** The block number. */\n      blockNumber?: bigint | undefined\n      blockTag?: undefined\n    }\n  | {\n      blockNumber?: undefined\n      /** The block tag. Defaults to 'latest'. */\n      blockTag?: BlockTag | undefined\n    }\n)\nexport type GetTransactionCountReturnType = number\n\nexport type GetTransactionCountErrorType =\n  | RequestErrorType\n  | NumberToHexErrorType\n  | HexToNumberErrorType\n  | ErrorType\n\n/**\n * Returns the number of [Transactions](https://viem.sh/docs/glossary/terms#transaction) an Account has sent.\n *\n * - Docs: https://viem.sh/docs/actions/public/getTransactionCount\n * - JSON-RPC Methods: [`eth_getTransactionCount`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_gettransactioncount)\n *\n * @param client - Client to use\n * @param parameters - {@link GetTransactionCountParameters}\n * @returns The number of transactions an account has sent. {@link GetTransactionCountReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getTransactionCount } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const transactionCount = await getTransactionCount(client, {\n *   address: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n * })\n */\nexport async function getTransactionCount<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n>(\n  client: Client<Transport, chain, account>,\n  { address, blockTag = 'latest', blockNumber }: GetTransactionCountParameters,\n): Promise<GetTransactionCountReturnType> {\n  const count = await client.request(\n    {\n      method: 'eth_getTransactionCount',\n      params: [address, blockNumber ? numberToHex(blockNumber) : blockTag],\n    },\n    { dedupe: Boolean(blockNumber) },\n  )\n  return hexToNumber(count)\n}\n"],"names":[],"mappings":";;;;;;;;AAgEO,eAAe,oBAIpB,MAAyC,EACzC,EAAE,OAAO,EAAE,WAAW,QAAQ,EAAE,WAAW,EAAiC;IAE5E,MAAM,QAAQ,MAAM,OAAO,OAAO,CAChC;QACE,QAAQ;QACR,QAAQ;YAAC;YAAS,cAAc,CAAA,GAAA,sJAAA,CAAA,cAAW,AAAX,EAAY,eAAe;SAAS;OAEtE;QAAE,QAAQ,QAAQ;IAAY;IAEhC,OAAO,CAAA,GAAA,wJAAA,CAAA,cAAW,AAAX,EAAY;AACrB"}},
    {"offset": {"line": 8629, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8634, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/blob/blobsToCommitments.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\nimport type { Kzg } from '../../types/kzg.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { type HexToBytesErrorType, hexToBytes } from '../encoding/toBytes.js'\nimport { type BytesToHexErrorType, bytesToHex } from '../encoding/toHex.js'\n\ntype To = 'hex' | 'bytes'\n\nexport type BlobsToCommitmentsParameters<\n  blobs extends readonly ByteArray[] | readonly Hex[] =\n    | readonly ByteArray[]\n    | readonly Hex[],\n  to extends To | undefined = undefined,\n> = {\n  /** Blobs to transform into commitments. */\n  blobs: blobs | readonly ByteArray[] | readonly Hex[]\n  /** KZG implementation. */\n  kzg: Pick<Kzg, 'blobToKzgCommitment'>\n  /** Return type. */\n  to?: to | To | undefined\n}\n\nexport type BlobsToCommitmentsReturnType<to extends To> =\n  | (to extends 'bytes' ? readonly ByteArray[] : never)\n  | (to extends 'hex' ? readonly Hex[] : never)\n\nexport type BlobsToCommitmentsErrorType =\n  | HexToBytesErrorType\n  | BytesToHexErrorType\n  | ErrorType\n\n/**\n * Compute commitments from a list of blobs.\n *\n * @example\n * ```ts\n * import { blobsToCommitments, toBlobs } from 'viem'\n * import { kzg } from './kzg'\n *\n * const blobs = toBlobs({ data: '0x1234' })\n * const commitments = blobsToCommitments({ blobs, kzg })\n * ```\n */\nexport function blobsToCommitments<\n  const blobs extends readonly ByteArray[] | readonly Hex[],\n  to extends To =\n    | (blobs extends readonly Hex[] ? 'hex' : never)\n    | (blobs extends readonly ByteArray[] ? 'bytes' : never),\n>(\n  parameters: BlobsToCommitmentsParameters<blobs, to>,\n): BlobsToCommitmentsReturnType<to> {\n  const { kzg } = parameters\n\n  const to =\n    parameters.to ?? (typeof parameters.blobs[0] === 'string' ? 'hex' : 'bytes')\n  const blobs = (\n    typeof parameters.blobs[0] === 'string'\n      ? parameters.blobs.map((x) => hexToBytes(x as any))\n      : parameters.blobs\n  ) as ByteArray[]\n\n  const commitments: ByteArray[] = []\n  for (const blob of blobs)\n    commitments.push(Uint8Array.from(kzg.blobToKzgCommitment(blob)))\n\n  return (to === 'bytes'\n    ? commitments\n    : commitments.map((x) =>\n        bytesToHex(x),\n      )) as {} as BlobsToCommitmentsReturnType<to>\n}\n"],"names":[],"mappings":";;;;;;;;AA2CM,SAAU,mBAMd,UAAmD;IAEnD,MAAM,EAAE,GAAG,EAAE,GAAG;IAEhB,MAAM,KACJ,WAAW,EAAE,IAAI,CAAC,OAAO,WAAW,KAAK,CAAC,EAAE,KAAK,WAAW,QAAQ,OAAO;IAC7E,MAAM,QACJ,OAAO,WAAW,KAAK,CAAC,EAAE,KAAK,WAC3B,WAAW,KAAK,CAAC,GAAG,CAAC,CAAC,IAAM,CAAA,GAAA,wJAAA,CAAA,aAAU,AAAV,EAAW,MACvC,WAAW,KAAK;IAGtB,MAAM,cAA2B,EAAE;IACnC,KAAK,MAAM,QAAQ,MACjB,YAAY,IAAI,CAAC,WAAW,IAAI,CAAC,IAAI,mBAAmB,CAAC;IAE3D,OAAQ,OAAO,UACX,cACA,YAAY,GAAG,CAAC,CAAC,IACf,CAAA,GAAA,sJAAA,CAAA,aAAU,AAAV,EAAW;AAEnB"}},
    {"offset": {"line": 8650, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8655, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/blob/blobsToProofs.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\nimport type { Kzg } from '../../types/kzg.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { type HexToBytesErrorType, hexToBytes } from '../encoding/toBytes.js'\nimport { type BytesToHexErrorType, bytesToHex } from '../encoding/toHex.js'\n\ntype To = 'hex' | 'bytes'\n\nexport type blobsToProofsParameters<\n  blobs extends readonly ByteArray[] | readonly Hex[],\n  commitments extends readonly ByteArray[] | readonly Hex[],\n  to extends To =\n    | (blobs extends readonly Hex[] ? 'hex' : never)\n    | (blobs extends readonly ByteArray[] ? 'bytes' : never),\n  ///\n  _blobsType =\n    | (blobs extends readonly Hex[] ? readonly Hex[] : never)\n    | (blobs extends readonly ByteArray[] ? readonly ByteArray[] : never),\n> = {\n  /** Blobs to transform into proofs. */\n  blobs: blobs\n  /** Commitments for the blobs. */\n  commitments: commitments &\n    (commitments extends _blobsType\n      ? {}\n      : `commitments must be the same type as blobs`)\n  /** KZG implementation. */\n  kzg: Pick<Kzg, 'computeBlobKzgProof'>\n  /** Return type. */\n  to?: to | To | undefined\n}\n\nexport type blobsToProofsReturnType<to extends To> =\n  | (to extends 'bytes' ? ByteArray[] : never)\n  | (to extends 'hex' ? Hex[] : never)\n\nexport type blobsToProofsErrorType =\n  | BytesToHexErrorType\n  | HexToBytesErrorType\n  | ErrorType\n\n/**\n * Compute the proofs for a list of blobs and their commitments.\n *\n * @example\n * ```ts\n * import {\n *   blobsToCommitments,\n *   toBlobs\n * } from 'viem'\n * import { kzg } from './kzg'\n *\n * const blobs = toBlobs({ data: '0x1234' })\n * const commitments = blobsToCommitments({ blobs, kzg })\n * const proofs = blobsToProofs({ blobs, commitments, kzg })\n * ```\n */\nexport function blobsToProofs<\n  const blobs extends readonly ByteArray[] | readonly Hex[],\n  const commitments extends readonly ByteArray[] | readonly Hex[],\n  to extends To =\n    | (blobs extends readonly Hex[] ? 'hex' : never)\n    | (blobs extends readonly ByteArray[] ? 'bytes' : never),\n>(\n  parameters: blobsToProofsParameters<blobs, commitments, to>,\n): blobsToProofsReturnType<to> {\n  const { kzg } = parameters\n\n  const to =\n    parameters.to ?? (typeof parameters.blobs[0] === 'string' ? 'hex' : 'bytes')\n\n  const blobs = (\n    typeof parameters.blobs[0] === 'string'\n      ? parameters.blobs.map((x) => hexToBytes(x as any))\n      : parameters.blobs\n  ) as ByteArray[]\n  const commitments = (\n    typeof parameters.commitments[0] === 'string'\n      ? parameters.commitments.map((x) => hexToBytes(x as any))\n      : parameters.commitments\n  ) as ByteArray[]\n\n  const proofs: ByteArray[] = []\n  for (let i = 0; i < blobs.length; i++) {\n    const blob = blobs[i]\n    const commitment = commitments[i]\n    proofs.push(Uint8Array.from(kzg.computeBlobKzgProof(blob, commitment)))\n  }\n\n  return (to === 'bytes'\n    ? proofs\n    : proofs.map((x) => bytesToHex(x))) as {} as blobsToProofsReturnType<to>\n}\n"],"names":[],"mappings":";;;;;;;;AAyDM,SAAU,cAOd,UAA2D;IAE3D,MAAM,EAAE,GAAG,EAAE,GAAG;IAEhB,MAAM,KACJ,WAAW,EAAE,IAAI,CAAC,OAAO,WAAW,KAAK,CAAC,EAAE,KAAK,WAAW,QAAQ,OAAO;IAE7E,MAAM,QACJ,OAAO,WAAW,KAAK,CAAC,EAAE,KAAK,WAC3B,WAAW,KAAK,CAAC,GAAG,CAAC,CAAC,IAAM,CAAA,GAAA,wJAAA,CAAA,aAAU,AAAV,EAAW,MACvC,WAAW,KAAK;IAEtB,MAAM,cACJ,OAAO,WAAW,WAAW,CAAC,EAAE,KAAK,WACjC,WAAW,WAAW,CAAC,GAAG,CAAC,CAAC,IAAM,CAAA,GAAA,wJAAA,CAAA,aAAU,AAAV,EAAW,MAC7C,WAAW,WAAW;IAG5B,MAAM,SAAsB,EAAE;IAC9B,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,MAAM,EAAE,IAAK;QACrC,MAAM,OAAO,KAAK,CAAC,EAAE;QACrB,MAAM,aAAa,WAAW,CAAC,EAAE;QACjC,OAAO,IAAI,CAAC,WAAW,IAAI,CAAC,IAAI,mBAAmB,CAAC,MAAM;IAC5D;IAEA,OAAQ,OAAO,UACX,SACA,OAAO,GAAG,CAAC,CAAC,IAAM,CAAA,GAAA,sJAAA,CAAA,aAAU,AAAV,EAAW;AACnC"}},
    {"offset": {"line": 8676, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8681, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/hash/sha256.ts"],"sourcesContent":["import { sha256 as noble_sha256 } from '@noble/hashes/sha256'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { type IsHexErrorType, isHex } from '../data/isHex.js'\nimport { type ToBytesErrorType, toBytes } from '../encoding/toBytes.js'\nimport { type ToHexErrorType, toHex } from '../encoding/toHex.js'\n\ntype To = 'hex' | 'bytes'\n\nexport type Sha256Hash<to extends To> =\n  | (to extends 'bytes' ? ByteArray : never)\n  | (to extends 'hex' ? Hex : never)\n\nexport type Sha256ErrorType =\n  | IsHexErrorType\n  | ToBytesErrorType\n  | ToHexErrorType\n  | ErrorType\n\nexport function sha256<to extends To = 'hex'>(\n  value: Hex | ByteArray,\n  to_?: to | undefined,\n): Sha256Hash<to> {\n  const to = to_ || 'hex'\n  const bytes = noble_sha256(\n    isHex(value, { strict: false }) ? toBytes(value) : value,\n  )\n  if (to === 'bytes') return bytes as Sha256Hash<to>\n  return toHex(bytes) as Sha256Hash<to>\n}\n"],"names":[],"mappings":";;;;;;;;;;;;AAoBM,SAAU,OACd,KAAsB,EACtB,GAAoB;IAEpB,MAAM,KAAK,OAAO;IAClB,MAAM,QAAQ,CAAA,GAAA,8IAAA,CAAA,SAAY,AAAZ,EACZ,CAAA,GAAA,kJAAA,CAAA,QAAK,AAAL,EAAM,OAAO;QAAE,QAAQ;IAAK,KAAM,CAAA,GAAA,wJAAA,CAAA,UAAO,AAAP,EAAQ,SAAS;IAErD,IAAI,OAAO,SAAS,OAAO;IAC3B,OAAO,CAAA,GAAA,sJAAA,CAAA,QAAK,AAAL,EAAM;AACf"}},
    {"offset": {"line": 8701, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8706, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/blob/commitmentToVersionedHash.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { type BytesToHexErrorType, bytesToHex } from '../encoding/toHex.js'\nimport { type Sha256ErrorType, sha256 } from '../hash/sha256.js'\n\ntype To = 'hex' | 'bytes'\n\nexport type CommitmentToVersionedHashParameters<\n  commitment extends Uint8Array | Hex = Uint8Array | Hex,\n  to extends To | undefined = undefined,\n> = {\n  /** Commitment from blob. */\n  commitment: commitment | Uint8Array | Hex\n  /** Return type. */\n  to?: to | To | undefined\n  /** Version to tag onto the hash. */\n  version?: number | undefined\n}\n\nexport type CommitmentToVersionedHashReturnType<to extends To> =\n  | (to extends 'bytes' ? ByteArray : never)\n  | (to extends 'hex' ? Hex : never)\n\nexport type CommitmentToVersionedHashErrorType =\n  | Sha256ErrorType\n  | BytesToHexErrorType\n  | ErrorType\n\n/**\n * Transform a commitment to it's versioned hash.\n *\n * @example\n * ```ts\n * import {\n *   blobsToCommitments,\n *   commitmentToVersionedHash,\n *   toBlobs\n * } from 'viem'\n * import { kzg } from './kzg'\n *\n * const blobs = toBlobs({ data: '0x1234' })\n * const [commitment] = blobsToCommitments({ blobs, kzg })\n * const versionedHash = commitmentToVersionedHash({ commitment })\n * ```\n */\nexport function commitmentToVersionedHash<\n  const commitment extends Hex | ByteArray,\n  to extends To =\n    | (commitment extends Hex ? 'hex' : never)\n    | (commitment extends ByteArray ? 'bytes' : never),\n>(\n  parameters: CommitmentToVersionedHashParameters<commitment, to>,\n): CommitmentToVersionedHashReturnType<to> {\n  const { commitment, version = 1 } = parameters\n  const to = parameters.to ?? (typeof commitment === 'string' ? 'hex' : 'bytes')\n\n  const versionedHash = sha256(commitment, 'bytes')\n  versionedHash.set([version], 0)\n  return (\n    to === 'bytes' ? versionedHash : bytesToHex(versionedHash)\n  ) as CommitmentToVersionedHashReturnType<to>\n}\n"],"names":[],"mappings":";;;;;;;;AA6CM,SAAU,0BAMd,UAA+D;IAE/D,MAAM,EAAE,UAAU,EAAE,UAAU,CAAC,EAAE,GAAG;IACpC,MAAM,KAAK,WAAW,EAAE,IAAI,CAAC,OAAO,eAAe,WAAW,QAAQ,OAAO;IAE7E,MAAM,gBAAgB,CAAA,GAAA,mJAAA,CAAA,SAAM,AAAN,EAAO,YAAY;IACzC,cAAc,GAAG,CAAC;QAAC;KAAQ,EAAE;IAC7B,OACE,OAAO,UAAU,gBAAgB,CAAA,GAAA,sJAAA,CAAA,aAAU,AAAV,EAAW;AAEhD"}},
    {"offset": {"line": 8723, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8728, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/blob/commitmentsToVersionedHashes.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport {\n  type CommitmentToVersionedHashErrorType,\n  commitmentToVersionedHash,\n} from './commitmentToVersionedHash.js'\n\ntype To = 'hex' | 'bytes'\n\nexport type CommitmentsToVersionedHashesParameters<\n  commitments extends readonly Uint8Array[] | readonly Hex[] =\n    | readonly Uint8Array[]\n    | readonly Hex[],\n  to extends To | undefined = undefined,\n> = {\n  /** Commitments from blobs. */\n  commitments: commitments | readonly Uint8Array[] | readonly Hex[]\n  /** Return type. */\n  to?: to | To | undefined\n  /** Version to tag onto the hashes. */\n  version?: number | undefined\n}\n\nexport type CommitmentsToVersionedHashesReturnType<to extends To> =\n  | (to extends 'bytes' ? readonly ByteArray[] : never)\n  | (to extends 'hex' ? readonly Hex[] : never)\n\nexport type CommitmentsToVersionedHashesErrorType =\n  | CommitmentToVersionedHashErrorType\n  | ErrorType\n\n/**\n * Transform a list of commitments to their versioned hashes.\n *\n * @example\n * ```ts\n * import {\n *   blobsToCommitments,\n *   commitmentsToVersionedHashes,\n *   toBlobs\n * } from 'viem'\n * import { kzg } from './kzg'\n *\n * const blobs = toBlobs({ data: '0x1234' })\n * const commitments = blobsToCommitments({ blobs, kzg })\n * const versionedHashes = commitmentsToVersionedHashes({ commitments })\n * ```\n */\nexport function commitmentsToVersionedHashes<\n  const commitments extends readonly Uint8Array[] | readonly Hex[],\n  to extends To =\n    | (commitments extends readonly Hex[] ? 'hex' : never)\n    | (commitments extends readonly ByteArray[] ? 'bytes' : never),\n>(\n  parameters: CommitmentsToVersionedHashesParameters<commitments, to>,\n): CommitmentsToVersionedHashesReturnType<to> {\n  const { commitments, version } = parameters\n\n  const to =\n    parameters.to ?? (typeof commitments[0] === 'string' ? 'hex' : 'bytes')\n\n  const hashes: Uint8Array[] | Hex[] = []\n  for (const commitment of commitments) {\n    hashes.push(\n      commitmentToVersionedHash({\n        commitment,\n        to,\n        version,\n      }) as any,\n    )\n  }\n  return hashes as any\n}\n"],"names":[],"mappings":";;;;;;AAgDM,SAAU,6BAMd,UAAmE;IAEnE,MAAM,EAAE,WAAW,EAAE,OAAO,EAAE,GAAG;IAEjC,MAAM,KACJ,WAAW,EAAE,IAAI,CAAC,OAAO,WAAW,CAAC,EAAE,KAAK,WAAW,QAAQ,OAAO;IAExE,MAAM,SAA+B,EAAE;IACvC,KAAK,MAAM,cAAc,YAAa;QACpC,OAAO,IAAI,CACT,CAAA,GAAA,sKAAA,CAAA,4BAAyB,AAAzB,EAA0B;YACxB;YACA;YACA;;IAGN;IACA,OAAO;AACT"}},
    {"offset": {"line": 8747, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8752, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/constants/blob.ts"],"sourcesContent":["// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-4844.md#parameters\n\n/** Blob limit per transaction. */\nconst blobsPerTransaction = 6\n\n/** The number of bytes in a BLS scalar field element. */\nexport const bytesPerFieldElement = 32\n\n/** The number of field elements in a blob. */\nexport const fieldElementsPerBlob = 4096\n\n/** The number of bytes in a blob. */\nexport const bytesPerBlob = bytesPerFieldElement * fieldElementsPerBlob\n\n/** Blob bytes limit per transaction. */\nexport const maxBytesPerTransaction =\n  bytesPerBlob * blobsPerTransaction -\n  // terminator byte (0x80).\n  1 -\n  // zero byte (0x00) appended to each field element.\n  1 * fieldElementsPerBlob * blobsPerTransaction\n"],"names":[],"mappings":"AAAA,2EAA2E;AAE3E,gCAAA;;;;;;AACA,MAAM,sBAAsB;AAGrB,MAAM,uBAAuB;AAG7B,MAAM,uBAAuB;AAG7B,MAAM,eAAe,uBAAuB;AAG5C,MAAM,yBACX,eAAe,sBACf,0BAA0B;AAC1B,IACA,mDAAmD;AACnD,IAAI,uBAAuB"}},
    {"offset": {"line": 8766, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8771, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/constants/kzg.ts"],"sourcesContent":["// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-4844.md#parameters\n\nexport const versionedHashVersionKzg = 1\n"],"names":[],"mappings":"AAAA,2EAA2E;;;;AAEpE,MAAM,0BAA0B"}},
    {"offset": {"line": 8776, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8781, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/errors/blob.ts"],"sourcesContent":["import { versionedHashVersionKzg } from '../constants/kzg.js'\nimport type { Hash } from '../types/misc.js'\n\nimport { BaseError } from './base.js'\n\nexport type BlobSizeTooLargeErrorType = BlobSizeTooLargeError & {\n  name: 'BlobSizeTooLargeError'\n}\nexport class BlobSizeTooLargeError extends BaseError {\n  constructor({ maxSize, size }: { maxSize: number; size: number }) {\n    super('Blob size is too large.', {\n      metaMessages: [`Max: ${maxSize} bytes`, `Given: ${size} bytes`],\n      name: 'BlobSizeTooLargeError',\n    })\n  }\n}\n\nexport type EmptyBlobErrorType = EmptyBlobError & {\n  name: 'EmptyBlobError'\n}\nexport class EmptyBlobError extends BaseError {\n  constructor() {\n    super('Blob data must not be empty.', { name: 'EmptyBlobError' })\n  }\n}\n\nexport type InvalidVersionedHashSizeErrorType =\n  InvalidVersionedHashSizeError & {\n    name: 'InvalidVersionedHashSizeError'\n  }\nexport class InvalidVersionedHashSizeError extends BaseError {\n  constructor({\n    hash,\n    size,\n  }: {\n    hash: Hash\n    size: number\n  }) {\n    super(`Versioned hash \"${hash}\" size is invalid.`, {\n      metaMessages: ['Expected: 32', `Received: ${size}`],\n      name: 'InvalidVersionedHashSizeError',\n    })\n  }\n}\n\nexport type InvalidVersionedHashVersionErrorType =\n  InvalidVersionedHashVersionError & {\n    name: 'InvalidVersionedHashVersionError'\n  }\nexport class InvalidVersionedHashVersionError extends BaseError {\n  constructor({\n    hash,\n    version,\n  }: {\n    hash: Hash\n    version: number\n  }) {\n    super(`Versioned hash \"${hash}\" version is invalid.`, {\n      metaMessages: [\n        `Expected: ${versionedHashVersionKzg}`,\n        `Received: ${version}`,\n      ],\n      name: 'InvalidVersionedHashVersionError',\n    })\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAQM,MAAO,8BAA8B,0IAAA,CAAA,YAAS;IAClD,YAAY,EAAE,OAAO,EAAE,IAAI,EAAqC,CAAA;QAC9D,KAAK,CAAC,2BAA2B;YAC/B,cAAc;gBAAC,CAAA,KAAA,EAAQ,QAAO,MAAA,CAAQ;gBAAE,CAAA,OAAA,EAAU,KAAI,MAAA,CAAQ;aAAC;YAC/D,MAAM;;IAEV;;AAMI,MAAO,uBAAuB,0IAAA,CAAA,YAAS;IAC3C,aAAA;QACE,KAAK,CAAC,gCAAgC;YAAE,MAAM;QAAgB;IAChE;;AAOI,MAAO,sCAAsC,0IAAA,CAAA,YAAS;IAC1D,YAAY,EACV,IAAI,EACJ,IAAI,EAIL,CAAA;QACC,KAAK,CAAC,CAAA,gBAAA,EAAmB,KAAI,kBAAA,CAAoB,EAAE;YACjD,cAAc;gBAAC;gBAAgB,CAAA,UAAA,EAAa,KAAI,CAAE;aAAC;YACnD,MAAM;;IAEV;;AAOI,MAAO,yCAAyC,0IAAA,CAAA,YAAS;IAC7D,YAAY,EACV,IAAI,EACJ,OAAO,EAIR,CAAA;QACC,KAAK,CAAC,CAAA,gBAAA,EAAmB,KAAI,qBAAA,CAAuB,EAAE;YACpD,cAAc;gBACZ,CAAA,UAAA,EAAa,4IAAA,CAAA,0BAAuB,CAAA,CAAE;gBACtC,CAAA,UAAA,EAAa,QAAO,CAAE;aACvB;YACD,MAAM;;IAEV"}},
    {"offset": {"line": 8832, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8837, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/blob/toBlobs.ts"],"sourcesContent":["import {\n  bytesPerBlob,\n  bytesPerFieldElement,\n  fieldElementsPerBlob,\n  maxBytesPerTransaction,\n} from '../../constants/blob.js'\nimport {\n  BlobSizeTooLargeError,\n  type BlobSizeTooLargeErrorType,\n  EmptyBlobError,\n  type EmptyBlobErrorType,\n} from '../../errors/blob.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { type CreateCursorErrorType, createCursor } from '../cursor.js'\nimport { type SizeErrorType, size } from '../data/size.js'\nimport { type HexToBytesErrorType, hexToBytes } from '../encoding/toBytes.js'\nimport { type BytesToHexErrorType, bytesToHex } from '../encoding/toHex.js'\n\ntype To = 'hex' | 'bytes'\n\nexport type ToBlobsParameters<\n  data extends Hex | ByteArray = Hex | ByteArray,\n  to extends To | undefined = undefined,\n> = {\n  /** Data to transform to a blob. */\n  data: data | Hex | ByteArray\n  /** Return type. */\n  to?: to | To | undefined\n}\n\nexport type ToBlobsReturnType<to extends To> =\n  | (to extends 'bytes' ? readonly ByteArray[] : never)\n  | (to extends 'hex' ? readonly Hex[] : never)\n\nexport type ToBlobsErrorType =\n  | BlobSizeTooLargeErrorType\n  | BytesToHexErrorType\n  | CreateCursorErrorType\n  | EmptyBlobErrorType\n  | HexToBytesErrorType\n  | SizeErrorType\n  | ErrorType\n\n/**\n * Transforms arbitrary data to blobs.\n *\n * @example\n * ```ts\n * import { toBlobs, stringToHex } from 'viem'\n *\n * const blobs = toBlobs({ data: stringToHex('hello world') })\n * ```\n */\nexport function toBlobs<\n  const data extends Hex | ByteArray,\n  to extends To =\n    | (data extends Hex ? 'hex' : never)\n    | (data extends ByteArray ? 'bytes' : never),\n>(parameters: ToBlobsParameters<data, to>): ToBlobsReturnType<to> {\n  const to =\n    parameters.to ?? (typeof parameters.data === 'string' ? 'hex' : 'bytes')\n  const data = (\n    typeof parameters.data === 'string'\n      ? hexToBytes(parameters.data)\n      : parameters.data\n  ) as ByteArray\n\n  const size_ = size(data)\n  if (!size_) throw new EmptyBlobError()\n  if (size_ > maxBytesPerTransaction)\n    throw new BlobSizeTooLargeError({\n      maxSize: maxBytesPerTransaction,\n      size: size_,\n    })\n\n  const blobs = []\n\n  let active = true\n  let position = 0\n  while (active) {\n    const blob = createCursor(new Uint8Array(bytesPerBlob))\n\n    let size = 0\n    while (size < fieldElementsPerBlob) {\n      const bytes = data.slice(position, position + (bytesPerFieldElement - 1))\n\n      // Push a zero byte so the field element doesn't overflow the BLS modulus.\n      blob.pushByte(0x00)\n\n      // Push the current segment of data bytes.\n      blob.pushBytes(bytes)\n\n      // If we detect that the current segment of data bytes is less than 31 bytes,\n      // we can stop processing and push a terminator byte to indicate the end of the blob.\n      if (bytes.length < 31) {\n        blob.pushByte(0x80)\n        active = false\n        break\n      }\n\n      size++\n      position += 31\n    }\n\n    blobs.push(blob)\n  }\n\n  return (\n    to === 'bytes'\n      ? blobs.map((x) => x.bytes)\n      : blobs.map((x) => bytesToHex(x.bytes))\n  ) as any\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAsDM,SAAU,QAKd,UAAuC;IACvC,MAAM,KACJ,WAAW,EAAE,IAAI,CAAC,OAAO,WAAW,IAAI,KAAK,WAAW,QAAQ,OAAO;IACzE,MAAM,OACJ,OAAO,WAAW,IAAI,KAAK,WACvB,CAAA,GAAA,wJAAA,CAAA,aAAU,AAAV,EAAW,WAAW,IAAI,IAC1B,WAAW,IAAI;IAGrB,MAAM,QAAQ,CAAA,GAAA,iJAAA,CAAA,OAAI,AAAJ,EAAK;IACnB,IAAI,CAAC,OAAO,MAAM,IAAI,0IAAA,CAAA,iBAAc;IACpC,IAAI,QAAQ,6IAAA,CAAA,yBAAsB,EAChC,MAAM,IAAI,0IAAA,CAAA,wBAAqB,CAAC;QAC9B,SAAS,6IAAA,CAAA,yBAAsB;QAC/B,MAAM;;IAGV,MAAM,QAAQ,EAAE;IAEhB,IAAI,SAAS;IACb,IAAI,WAAW;IACf,MAAO,OAAQ;QACb,MAAM,OAAO,CAAA,GAAA,2IAAA,CAAA,eAAY,AAAZ,EAAa,IAAI,WAAW,6IAAA,CAAA,eAAY;QAErD,IAAI,OAAO;QACX,MAAO,OAAO,6IAAA,CAAA,uBAAoB,CAAE;YAClC,MAAM,QAAQ,KAAK,KAAK,CAAC,UAAU,WAAW,CAAC,6IAAA,CAAA,uBAAoB,GAAG,CAAC;YAEvE,0EAA0E;YAC1E,KAAK,QAAQ,CAAC;YAEd,0CAA0C;YAC1C,KAAK,SAAS,CAAC;YAEf,6EAA6E;YAC7E,qFAAqF;YACrF,IAAI,MAAM,MAAM,GAAG,IAAI;gBACrB,KAAK,QAAQ,CAAC;gBACd,SAAS;gBACT;YACF;YAEA;YACA,YAAY;QACd;QAEA,MAAM,IAAI,CAAC;IACb;IAEA,OACE,OAAO,UACH,MAAM,GAAG,CAAC,CAAC,IAAM,EAAE,KAAK,IACxB,MAAM,GAAG,CAAC,CAAC,IAAM,CAAA,GAAA,sJAAA,CAAA,aAAU,AAAV,EAAW,EAAE,KAAK;AAE3C"}},
    {"offset": {"line": 8888, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8893, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/blob/toBlobSidecars.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\nimport type { BlobSidecars } from '../../types/eip4844.js'\nimport type { Kzg } from '../../types/kzg.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport type { OneOf } from '../../types/utils.js'\nimport {\n  type BlobsToCommitmentsErrorType,\n  blobsToCommitments,\n} from './blobsToCommitments.js'\nimport { blobsToProofs, type blobsToProofsErrorType } from './blobsToProofs.js'\nimport { type ToBlobsErrorType, toBlobs } from './toBlobs.js'\n\ntype To = 'hex' | 'bytes'\n\nexport type ToBlobSidecarsParameters<\n  data extends Hex | ByteArray | undefined = undefined,\n  blobs extends readonly Hex[] | readonly ByteArray[] | undefined = undefined,\n  to extends To =\n    | (blobs extends readonly Hex[] ? 'hex' : never)\n    | (blobs extends readonly ByteArray[] ? 'bytes' : never),\n  ///\n  _blobsType =\n    | (blobs extends readonly Hex[] ? readonly Hex[] : never)\n    | (blobs extends readonly ByteArray[] ? readonly ByteArray[] : never),\n> = {\n  /** Return type. */\n  to?: to | To | undefined\n} & OneOf<\n  | {\n      /** Data to transform into blobs. */\n      data: data | Hex | ByteArray\n      /** KZG implementation. */\n      kzg: Kzg\n    }\n  | {\n      /** Blobs. */\n      blobs: blobs | readonly Hex[] | readonly ByteArray[]\n      /** Commitment for each blob. */\n      commitments: _blobsType | readonly Hex[] | readonly ByteArray[]\n      /** Proof for each blob. */\n      proofs: _blobsType | readonly Hex[] | readonly ByteArray[]\n    }\n>\n\nexport type ToBlobSidecarsReturnType<to extends To> =\n  | (to extends 'bytes' ? BlobSidecars<ByteArray> : never)\n  | (to extends 'hex' ? BlobSidecars<Hex> : never)\n\nexport type ToBlobSidecarsErrorType =\n  | BlobsToCommitmentsErrorType\n  | ToBlobsErrorType\n  | blobsToProofsErrorType\n  | ErrorType\n\n/**\n * Transforms arbitrary data (or blobs, commitments, & proofs) into a sidecar array.\n *\n * @example\n * ```ts\n * import { toBlobSidecars, stringToHex } from 'viem'\n *\n * const sidecars = toBlobSidecars({ data: stringToHex('hello world') })\n * ```\n *\n * @example\n * ```ts\n * import {\n *   blobsToCommitments,\n *   toBlobs,\n *   blobsToProofs,\n *   toBlobSidecars,\n *   stringToHex\n * } from 'viem'\n *\n * const blobs = toBlobs({ data: stringToHex('hello world') })\n * const commitments = blobsToCommitments({ blobs, kzg })\n * const proofs = blobsToProofs({ blobs, commitments, kzg })\n *\n * const sidecars = toBlobSidecars({ blobs, commitments, proofs })\n * ```\n */\nexport function toBlobSidecars<\n  const data extends Hex | ByteArray | undefined = undefined,\n  const blobs extends\n    | readonly Hex[]\n    | readonly ByteArray[]\n    | undefined = undefined,\n  to extends To =\n    | (data extends Hex ? 'hex' : never)\n    | (data extends ByteArray ? 'bytes' : never)\n    | (blobs extends readonly Hex[] ? 'hex' : never)\n    | (blobs extends readonly ByteArray[] ? 'bytes' : never),\n>(\n  parameters: ToBlobSidecarsParameters<data, blobs, to>,\n): ToBlobSidecarsReturnType<to> {\n  const { data, kzg, to } = parameters\n  const blobs = parameters.blobs ?? toBlobs({ data: data!, to })\n  const commitments =\n    parameters.commitments ?? blobsToCommitments({ blobs, kzg: kzg!, to })\n  const proofs =\n    parameters.proofs ?? blobsToProofs({ blobs, commitments, kzg: kzg!, to })\n\n  const sidecars: BlobSidecars = []\n  for (let i = 0; i < blobs.length; i++)\n    sidecars.push({\n      blob: blobs[i],\n      commitment: commitments[i],\n      proof: proofs[i],\n    })\n\n  return sidecars as ToBlobSidecarsReturnType<to>\n}\n"],"names":[],"mappings":";;;;;;;;;;AAiFM,SAAU,eAYd,UAAqD;IAErD,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG;IAC1B,MAAM,QAAQ,WAAW,KAAK,IAAI,CAAA,GAAA,oJAAA,CAAA,UAAO,AAAP,EAAQ;QAAE,MAAM;QAAO;IAAE;IAC3D,MAAM,cACJ,WAAW,WAAW,IAAI,CAAA,GAAA,+JAAA,CAAA,qBAAkB,AAAlB,EAAmB;QAAE;QAAO,KAAK;QAAM;IAAE;IACrE,MAAM,SACJ,WAAW,MAAM,IAAI,CAAA,GAAA,0JAAA,CAAA,gBAAa,AAAb,EAAc;QAAE;QAAO;QAAa,KAAK;QAAM;IAAE;IAExE,MAAM,WAAyB,EAAE;IACjC,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,MAAM,EAAE,IAChC,SAAS,IAAI,CAAC;QACZ,MAAM,KAAK,CAAC,EAAE;QACd,YAAY,WAAW,CAAC,EAAE;QAC1B,OAAO,MAAM,CAAC,EAAE;;IAGpB,OAAO;AACT"}},
    {"offset": {"line": 8928, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8933, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/transaction/getTransactionType.ts"],"sourcesContent":["import {\n  InvalidSerializableTransactionError,\n  type InvalidSerializableTransactionErrorType,\n} from '../../errors/transaction.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type {\n  FeeValuesEIP1559,\n  FeeValuesEIP4844,\n  FeeValuesLegacy,\n} from '../../index.js'\nimport type {\n  TransactionRequestGeneric,\n  TransactionSerializableEIP2930,\n  TransactionSerializableEIP4844,\n  TransactionSerializableEIP7702,\n  TransactionSerializableGeneric,\n} from '../../types/transaction.js'\nimport type { Assign, ExactPartial, IsNever, OneOf } from '../../types/utils.js'\n\nexport type GetTransactionType<\n  transaction extends OneOf<\n    TransactionSerializableGeneric | TransactionRequestGeneric\n  > = TransactionSerializableGeneric,\n  result =\n    | (transaction extends LegacyProperties ? 'legacy' : never)\n    | (transaction extends EIP1559Properties ? 'eip1559' : never)\n    | (transaction extends EIP2930Properties ? 'eip2930' : never)\n    | (transaction extends EIP4844Properties ? 'eip4844' : never)\n    | (transaction extends EIP7702Properties ? 'eip7702' : never)\n    | (transaction['type'] extends TransactionSerializableGeneric['type']\n        ? Extract<transaction['type'], string>\n        : never),\n> = IsNever<keyof transaction> extends true\n  ? string\n  : IsNever<result> extends false\n    ? result\n    : string\n\nexport type GetTransactionTypeErrorType =\n  | InvalidSerializableTransactionErrorType\n  | ErrorType\n\nexport function getTransactionType<\n  const transaction extends OneOf<\n    TransactionSerializableGeneric | TransactionRequestGeneric\n  >,\n>(transaction: transaction): GetTransactionType<transaction> {\n  if (transaction.type)\n    return transaction.type as GetTransactionType<transaction>\n\n  if (typeof transaction.authorizationList !== 'undefined')\n    return 'eip7702' as any\n\n  if (\n    typeof transaction.blobs !== 'undefined' ||\n    typeof transaction.blobVersionedHashes !== 'undefined' ||\n    typeof transaction.maxFeePerBlobGas !== 'undefined' ||\n    typeof transaction.sidecars !== 'undefined'\n  )\n    return 'eip4844' as any\n\n  if (\n    typeof transaction.maxFeePerGas !== 'undefined' ||\n    typeof transaction.maxPriorityFeePerGas !== 'undefined'\n  ) {\n    return 'eip1559' as any\n  }\n\n  if (typeof transaction.gasPrice !== 'undefined') {\n    if (typeof transaction.accessList !== 'undefined') return 'eip2930' as any\n    return 'legacy' as any\n  }\n\n  throw new InvalidSerializableTransactionError({ transaction })\n}\n\n////////////////////////////////////////////////////////////////////////////////////////////\n// Types\n\ntype BaseProperties = {\n  accessList?: undefined\n  authorizationList?: undefined\n  blobs?: undefined\n  blobVersionedHashes?: undefined\n  gasPrice?: undefined\n  maxFeePerBlobGas?: undefined\n  maxFeePerGas?: undefined\n  maxPriorityFeePerGas?: undefined\n  sidecars?: undefined\n}\n\ntype LegacyProperties = Assign<BaseProperties, FeeValuesLegacy>\ntype EIP1559Properties = Assign<\n  BaseProperties,\n  OneOf<\n    | {\n        maxFeePerGas: FeeValuesEIP1559['maxFeePerGas']\n      }\n    | {\n        maxPriorityFeePerGas: FeeValuesEIP1559['maxPriorityFeePerGas']\n      },\n    FeeValuesEIP1559\n  > & {\n    accessList?: TransactionSerializableEIP2930['accessList'] | undefined\n  }\n>\ntype EIP2930Properties = Assign<\n  ExactPartial<LegacyProperties>,\n  {\n    accessList: TransactionSerializableEIP2930['accessList']\n  }\n>\ntype EIP4844Properties = Assign<\n  ExactPartial<EIP1559Properties>,\n  ExactPartial<FeeValuesEIP4844> &\n    OneOf<\n      | {\n          blobs: TransactionSerializableEIP4844['blobs']\n        }\n      | {\n          blobVersionedHashes: TransactionSerializableEIP4844['blobVersionedHashes']\n        }\n      | {\n          sidecars: TransactionSerializableEIP4844['sidecars']\n        },\n      TransactionSerializableEIP4844\n    >\n>\ntype EIP7702Properties = Assign<\n  ExactPartial<EIP1559Properties>,\n  {\n    authorizationList: TransactionSerializableEIP7702['authorizationList']\n  }\n>\n"],"names":[],"mappings":";;;;;;AA0CM,SAAU,mBAId,WAAwB;IACxB,IAAI,YAAY,IAAI,EAClB,OAAO,YAAY,IAAuC;IAE5D,IAAI,OAAO,YAAY,iBAAiB,KAAK,aAC3C,OAAO;IAET,IACE,OAAO,YAAY,KAAK,KAAK,eAC7B,OAAO,YAAY,mBAAmB,KAAK,eAC3C,OAAO,YAAY,gBAAgB,KAAK,eACxC,OAAO,YAAY,QAAQ,KAAK,aAEhC,OAAO;IAET,IACE,OAAO,YAAY,YAAY,KAAK,eACpC,OAAO,YAAY,oBAAoB,KAAK,aAC5C;QACA,OAAO;IACT;IAEA,IAAI,OAAO,YAAY,QAAQ,KAAK,aAAa;QAC/C,IAAI,OAAO,YAAY,UAAU,KAAK,aAAa,OAAO;QAC1D,OAAO;IACT;IAEA,MAAM,IAAI,iJAAA,CAAA,sCAAmC,CAAC;QAAE;IAAW;AAC7D"}},
    {"offset": {"line": 8954, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8959, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/actions/public/getChainId.ts"],"sourcesContent":["import type { Account } from '../../accounts/types.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type HexToNumberErrorType,\n  hexToNumber,\n} from '../../utils/encoding/fromHex.js'\n\nexport type GetChainIdReturnType = number\n\nexport type GetChainIdErrorType =\n  | HexToNumberErrorType\n  | RequestErrorType\n  | ErrorType\n\n/**\n * Returns the chain ID associated with the current network.\n *\n * - Docs: https://viem.sh/docs/actions/public/getChainId\n * - JSON-RPC Methods: [`eth_chainId`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_chainid)\n *\n * @param client - Client to use\n * @returns The current chain ID. {@link GetChainIdReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getChainId } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const chainId = await getChainId(client)\n * // 1\n */\nexport async function getChainId<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n>(client: Client<Transport, chain, account>): Promise<GetChainIdReturnType> {\n  const chainIdHex = await client.request(\n    {\n      method: 'eth_chainId',\n    },\n    { dedupe: true },\n  )\n  return hexToNumber(chainIdHex)\n}\n"],"names":[],"mappings":";;;;;;AAuCO,eAAe,WAGpB,MAAyC;IACzC,MAAM,aAAa,MAAM,OAAO,OAAO,CACrC;QACE,QAAQ;OAEV;QAAE,QAAQ;IAAI;IAEhB,OAAO,CAAA,GAAA,wJAAA,CAAA,cAAW,AAAX,EAAY;AACrB"}},
    {"offset": {"line": 8973, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8978, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/actions/wallet/prepareTransactionRequest.ts"],"sourcesContent":["import type { Address } from 'abitype'\nimport type { Account } from '../../accounts/types.js'\nimport {\n  type ParseAccountErrorType,\n  parseAccount,\n} from '../../accounts/utils/parseAccount.js'\nimport {\n  type EstimateFeesPerGasErrorType,\n  internal_estimateFeesPerGas,\n} from '../../actions/public/estimateFeesPerGas.js'\nimport {\n  type EstimateGasErrorType,\n  type EstimateGasParameters,\n  estimateGas,\n} from '../../actions/public/estimateGas.js'\nimport {\n  type GetBlockErrorType,\n  getBlock as getBlock_,\n} from '../../actions/public/getBlock.js'\nimport {\n  type GetTransactionCountErrorType,\n  getTransactionCount,\n} from '../../actions/public/getTransactionCount.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { AccountNotFoundErrorType } from '../../errors/account.js'\nimport {\n  Eip1559FeesNotSupportedError,\n  MaxFeePerGasTooLowError,\n} from '../../errors/fee.js'\nimport type { DeriveAccount, GetAccountParameter } from '../../types/account.js'\nimport type { Block } from '../../types/block.js'\nimport type { Chain, DeriveChain } from '../../types/chain.js'\nimport type { GetChainParameter } from '../../types/chain.js'\nimport type { GetTransactionRequestKzgParameter } from '../../types/kzg.js'\nimport type {\n  TransactionRequest,\n  TransactionRequestEIP1559,\n  TransactionRequestEIP2930,\n  TransactionRequestEIP4844,\n  TransactionRequestEIP7702,\n  TransactionRequestLegacy,\n  TransactionSerializable,\n} from '../../types/transaction.js'\nimport type {\n  ExactPartial,\n  IsNever,\n  Prettify,\n  UnionOmit,\n  UnionRequiredBy,\n} from '../../types/utils.js'\nimport { blobsToCommitments } from '../../utils/blob/blobsToCommitments.js'\nimport { blobsToProofs } from '../../utils/blob/blobsToProofs.js'\nimport { commitmentsToVersionedHashes } from '../../utils/blob/commitmentsToVersionedHashes.js'\nimport { toBlobSidecars } from '../../utils/blob/toBlobSidecars.js'\nimport type { FormattedTransactionRequest } from '../../utils/formatters/transactionRequest.js'\nimport { getAction } from '../../utils/getAction.js'\nimport type { NonceManager } from '../../utils/nonceManager.js'\nimport {\n  type AssertRequestErrorType,\n  type AssertRequestParameters,\n  assertRequest,\n} from '../../utils/transaction/assertRequest.js'\nimport {\n  type GetTransactionType,\n  getTransactionType,\n} from '../../utils/transaction/getTransactionType.js'\nimport { getChainId as getChainId_ } from '../public/getChainId.js'\n\nexport const defaultParameters = [\n  'blobVersionedHashes',\n  'chainId',\n  'fees',\n  'gas',\n  'nonce',\n  'type',\n] as const\n\nexport type PrepareTransactionRequestParameterType =\n  | 'blobVersionedHashes'\n  | 'chainId'\n  | 'fees'\n  | 'gas'\n  | 'nonce'\n  | 'sidecars'\n  | 'type'\ntype ParameterTypeToParameters<\n  parameterType extends PrepareTransactionRequestParameterType,\n> = parameterType extends 'fees'\n  ? 'maxFeePerGas' | 'maxPriorityFeePerGas' | 'gasPrice'\n  : parameterType\n\nexport type PrepareTransactionRequestRequest<\n  chain extends Chain | undefined = Chain | undefined,\n  chainOverride extends Chain | undefined = Chain | undefined,\n  ///\n  _derivedChain extends Chain | undefined = DeriveChain<chain, chainOverride>,\n> = UnionOmit<FormattedTransactionRequest<_derivedChain>, 'from'> &\n  GetTransactionRequestKzgParameter & {\n    /**\n     * Nonce manager to use for the transaction request.\n     */\n    nonceManager?: NonceManager | undefined\n    /**\n     * Parameters to prepare for the transaction request.\n     *\n     * @default ['blobVersionedHashes', 'chainId', 'fees', 'gas', 'nonce', 'type']\n     */\n    parameters?: readonly PrepareTransactionRequestParameterType[] | undefined\n  }\n\nexport type PrepareTransactionRequestParameters<\n  chain extends Chain | undefined = Chain | undefined,\n  account extends Account | undefined = Account | undefined,\n  chainOverride extends Chain | undefined = Chain | undefined,\n  accountOverride extends Account | Address | undefined =\n    | Account\n    | Address\n    | undefined,\n  request extends PrepareTransactionRequestRequest<\n    chain,\n    chainOverride\n  > = PrepareTransactionRequestRequest<chain, chainOverride>,\n> = request &\n  GetAccountParameter<account, accountOverride, false, true> &\n  GetChainParameter<chain, chainOverride> &\n  GetTransactionRequestKzgParameter<request> & { chainId?: number | undefined }\n\nexport type PrepareTransactionRequestReturnType<\n  chain extends Chain | undefined = Chain | undefined,\n  account extends Account | undefined = Account | undefined,\n  chainOverride extends Chain | undefined = Chain | undefined,\n  accountOverride extends Account | Address | undefined =\n    | Account\n    | Address\n    | undefined,\n  request extends PrepareTransactionRequestRequest<\n    chain,\n    chainOverride\n  > = PrepareTransactionRequestRequest<chain, chainOverride>,\n  ///\n  _derivedAccount extends Account | Address | undefined = DeriveAccount<\n    account,\n    accountOverride\n  >,\n  _derivedChain extends Chain | undefined = DeriveChain<chain, chainOverride>,\n  _transactionType = request['type'] extends string | undefined\n    ? request['type']\n    : GetTransactionType<request> extends 'legacy'\n      ? unknown\n      : GetTransactionType<request>,\n  _transactionRequest extends TransactionRequest =\n    | (_transactionType extends 'legacy' ? TransactionRequestLegacy : never)\n    | (_transactionType extends 'eip1559' ? TransactionRequestEIP1559 : never)\n    | (_transactionType extends 'eip2930' ? TransactionRequestEIP2930 : never)\n    | (_transactionType extends 'eip4844' ? TransactionRequestEIP4844 : never)\n    | (_transactionType extends 'eip7702' ? TransactionRequestEIP7702 : never),\n> = Prettify<\n  UnionRequiredBy<\n    Extract<\n      UnionOmit<FormattedTransactionRequest<_derivedChain>, 'from'> &\n        (_derivedChain extends Chain\n          ? { chain: _derivedChain }\n          : { chain?: undefined }) &\n        (_derivedAccount extends Account\n          ? { account: _derivedAccount; from: Address }\n          : { account?: undefined; from?: undefined }),\n      IsNever<_transactionRequest> extends true\n        ? unknown\n        : ExactPartial<_transactionRequest>\n    > & { chainId?: number | undefined },\n    ParameterTypeToParameters<\n      request['parameters'] extends readonly PrepareTransactionRequestParameterType[]\n        ? request['parameters'][number]\n        : (typeof defaultParameters)[number]\n    >\n  > &\n    (unknown extends request['kzg'] ? {} : Pick<request, 'kzg'>)\n>\n\nexport type PrepareTransactionRequestErrorType =\n  | AccountNotFoundErrorType\n  | AssertRequestErrorType\n  | ParseAccountErrorType\n  | GetBlockErrorType\n  | GetTransactionCountErrorType\n  | EstimateGasErrorType\n  | EstimateFeesPerGasErrorType\n\n/**\n * Prepares a transaction request for signing.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/prepareTransactionRequest\n *\n * @param args - {@link PrepareTransactionRequestParameters}\n * @returns The transaction request. {@link PrepareTransactionRequestReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { prepareTransactionRequest } from 'viem/actions'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const request = await prepareTransactionRequest(client, {\n *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n *   to: '0x0000000000000000000000000000000000000000',\n *   value: 1n,\n * })\n *\n * @example\n * // Account Hoisting\n * import { createWalletClient, http } from 'viem'\n * import { privateKeyToAccount } from 'viem/accounts'\n * import { mainnet } from 'viem/chains'\n * import { prepareTransactionRequest } from 'viem/actions'\n *\n * const client = createWalletClient({\n *   account: privateKeyToAccount('0x…'),\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const request = await prepareTransactionRequest(client, {\n *   to: '0x0000000000000000000000000000000000000000',\n *   value: 1n,\n * })\n */\nexport async function prepareTransactionRequest<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n  const request extends PrepareTransactionRequestRequest<chain, chainOverride>,\n  accountOverride extends Account | Address | undefined = undefined,\n  chainOverride extends Chain | undefined = undefined,\n>(\n  client: Client<Transport, chain, account>,\n  args: PrepareTransactionRequestParameters<\n    chain,\n    account,\n    chainOverride,\n    accountOverride,\n    request\n  >,\n): Promise<\n  PrepareTransactionRequestReturnType<\n    chain,\n    account,\n    chainOverride,\n    accountOverride,\n    request\n  >\n> {\n  const {\n    account: account_ = client.account,\n    blobs,\n    chain,\n    gas,\n    kzg,\n    nonce,\n    nonceManager,\n    parameters = defaultParameters,\n    type,\n  } = args\n  const account = account_ ? parseAccount(account_) : account_\n\n  const request = { ...args, ...(account ? { from: account?.address } : {}) }\n\n  let block: Block | undefined\n  async function getBlock(): Promise<Block> {\n    if (block) return block\n    block = await getAction(\n      client,\n      getBlock_,\n      'getBlock',\n    )({ blockTag: 'latest' })\n    return block\n  }\n\n  let chainId: number | undefined\n  async function getChainId(): Promise<number> {\n    if (chainId) return chainId\n    if (chain) return chain.id\n    if (typeof args.chainId !== 'undefined') return args.chainId\n    const chainId_ = await getAction(client, getChainId_, 'getChainId')({})\n    chainId = chainId_\n    return chainId\n  }\n\n  if (\n    (parameters.includes('blobVersionedHashes') ||\n      parameters.includes('sidecars')) &&\n    blobs &&\n    kzg\n  ) {\n    const commitments = blobsToCommitments({ blobs, kzg })\n\n    if (parameters.includes('blobVersionedHashes')) {\n      const versionedHashes = commitmentsToVersionedHashes({\n        commitments,\n        to: 'hex',\n      })\n      request.blobVersionedHashes = versionedHashes\n    }\n    if (parameters.includes('sidecars')) {\n      const proofs = blobsToProofs({ blobs, commitments, kzg })\n      const sidecars = toBlobSidecars({\n        blobs,\n        commitments,\n        proofs,\n        to: 'hex',\n      })\n      request.sidecars = sidecars\n    }\n  }\n\n  if (parameters.includes('chainId')) request.chainId = await getChainId()\n\n  if (parameters.includes('nonce') && typeof nonce === 'undefined' && account) {\n    if (nonceManager) {\n      const chainId = await getChainId()\n      request.nonce = await nonceManager.consume({\n        address: account.address,\n        chainId,\n        client,\n      })\n    } else {\n      request.nonce = await getAction(\n        client,\n        getTransactionCount,\n        'getTransactionCount',\n      )({\n        address: account.address,\n        blockTag: 'pending',\n      })\n    }\n  }\n\n  if (\n    (parameters.includes('fees') || parameters.includes('type')) &&\n    typeof type === 'undefined'\n  ) {\n    try {\n      request.type = getTransactionType(\n        request as TransactionSerializable,\n      ) as any\n    } catch {\n      // infer type from block\n      const block = await getBlock()\n      request.type =\n        typeof block?.baseFeePerGas === 'bigint' ? 'eip1559' : 'legacy'\n    }\n  }\n\n  if (parameters.includes('fees')) {\n    // TODO(4844): derive blob base fees once https://github.com/ethereum/execution-apis/pull/486 is merged.\n\n    if (request.type !== 'legacy' && request.type !== 'eip2930') {\n      // EIP-1559 fees\n      if (\n        typeof request.maxFeePerGas === 'undefined' ||\n        typeof request.maxPriorityFeePerGas === 'undefined'\n      ) {\n        const block = await getBlock()\n        const { maxFeePerGas, maxPriorityFeePerGas } =\n          await internal_estimateFeesPerGas(client, {\n            block: block as Block,\n            chain,\n            request: request as PrepareTransactionRequestParameters,\n          })\n\n        if (\n          typeof args.maxPriorityFeePerGas === 'undefined' &&\n          args.maxFeePerGas &&\n          args.maxFeePerGas < maxPriorityFeePerGas\n        )\n          throw new MaxFeePerGasTooLowError({\n            maxPriorityFeePerGas,\n          })\n\n        request.maxPriorityFeePerGas = maxPriorityFeePerGas\n        request.maxFeePerGas = maxFeePerGas\n      }\n    } else {\n      // Legacy fees\n      if (\n        typeof args.maxFeePerGas !== 'undefined' ||\n        typeof args.maxPriorityFeePerGas !== 'undefined'\n      )\n        throw new Eip1559FeesNotSupportedError()\n\n      const block = await getBlock()\n      const { gasPrice: gasPrice_ } = await internal_estimateFeesPerGas(\n        client,\n        {\n          block: block as Block,\n          chain,\n          request: request as PrepareTransactionRequestParameters,\n          type: 'legacy',\n        },\n      )\n      request.gasPrice = gasPrice_\n    }\n  }\n\n  if (parameters.includes('gas') && typeof gas === 'undefined')\n    request.gas = await getAction(\n      client,\n      estimateGas,\n      'estimateGas',\n    )({\n      ...request,\n      account: account\n        ? { address: account.address, type: 'json-rpc' }\n        : account,\n    } as EstimateGasParameters)\n\n  assertRequest(request as AssertRequestParameters)\n\n  delete request.parameters\n\n  return request as any\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 9138, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9143, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/actions/public/estimateGas.ts"],"sourcesContent":["import type { Address } from 'abitype'\nimport type { Account } from '../../accounts/types.js'\nimport {\n  type ParseAccountErrorType,\n  parseAccount,\n} from '../../accounts/utils/parseAccount.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport { BaseError } from '../../errors/base.js'\nimport {\n  type RecoverAuthorizationAddressErrorType,\n  recoverAuthorizationAddress,\n} from '../../experimental/eip7702/utils/recoverAuthorizationAddress.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { StateOverride } from '../../types/stateOverride.js'\nimport type { TransactionRequest } from '../../types/transaction.js'\nimport type { UnionOmit } from '../../types/utils.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\nimport {\n  type GetEstimateGasErrorReturnType,\n  getEstimateGasError,\n} from '../../utils/errors/getEstimateGasError.js'\nimport { extract } from '../../utils/formatters/extract.js'\nimport {\n  type FormattedTransactionRequest,\n  formatTransactionRequest,\n} from '../../utils/formatters/transactionRequest.js'\nimport { serializeStateOverride } from '../../utils/stateOverride.js'\nimport {\n  type AssertRequestErrorType,\n  type AssertRequestParameters,\n  assertRequest,\n} from '../../utils/transaction/assertRequest.js'\nimport {\n  type PrepareTransactionRequestParameters,\n  prepareTransactionRequest,\n} from '../wallet/prepareTransactionRequest.js'\nimport { getBalance } from './getBalance.js'\n\nexport type EstimateGasParameters<\n  chain extends Chain | undefined = Chain | undefined,\n> = UnionOmit<FormattedEstimateGas<chain>, 'from'> & {\n  account?: Account | Address | undefined\n  stateOverride?: StateOverride | undefined\n} & (\n    | {\n        /** The balance of the account at a block number. */\n        blockNumber?: bigint | undefined\n        blockTag?: undefined\n      }\n    | {\n        blockNumber?: undefined\n        /**\n         * The balance of the account at a block tag.\n         * @default 'latest'\n         */\n        blockTag?: BlockTag | undefined\n      }\n  )\ntype FormattedEstimateGas<chain extends Chain | undefined = Chain | undefined> =\n  FormattedTransactionRequest<chain>\n\nexport type EstimateGasReturnType = bigint\n\nexport type EstimateGasErrorType = GetEstimateGasErrorReturnType<\n  | ParseAccountErrorType\n  | NumberToHexErrorType\n  | RequestErrorType\n  | RecoverAuthorizationAddressErrorType\n  | AssertRequestErrorType\n>\n\n/**\n * Estimates the gas necessary to complete a transaction without submitting it to the network.\n *\n * - Docs: https://viem.sh/docs/actions/public/estimateGas\n * - JSON-RPC Methods: [`eth_estimateGas`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_estimategas)\n *\n * @param client - Client to use\n * @param parameters - {@link EstimateGasParameters}\n * @returns The gas estimate (in wei). {@link EstimateGasReturnType}\n *\n * @example\n * import { createPublicClient, http, parseEther } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { estimateGas } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const gasEstimate = await estimateGas(client, {\n *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n *   value: parseEther('1'),\n * })\n */\nexport async function estimateGas<\n  chain extends Chain | undefined,\n  account extends Account | undefined = undefined,\n>(\n  client: Client<Transport, chain, account>,\n  args: EstimateGasParameters<chain>,\n): Promise<EstimateGasReturnType> {\n  const { account: account_ = client.account } = args\n  const account = account_ ? parseAccount(account_) : undefined\n\n  try {\n    const {\n      accessList,\n      authorizationList,\n      blobs,\n      blobVersionedHashes,\n      blockNumber,\n      blockTag,\n      data,\n      gas,\n      gasPrice,\n      maxFeePerBlobGas,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      value,\n      stateOverride,\n      ...rest\n    } = (await prepareTransactionRequest(client, {\n      ...args,\n      parameters:\n        // Some RPC Providers do not compute versioned hashes from blobs. We will need\n        // to compute them.\n        account?.type === 'local' ? undefined : ['blobVersionedHashes'],\n    } as PrepareTransactionRequestParameters)) as EstimateGasParameters\n\n    const blockNumberHex = blockNumber ? numberToHex(blockNumber) : undefined\n    const block = blockNumberHex || blockTag\n\n    const rpcStateOverride = serializeStateOverride(stateOverride)\n\n    const to = await (async () => {\n      // If `to` exists on the parameters, use that.\n      if (rest.to) return rest.to\n\n      // If no `to` exists, and we are sending a EIP-7702 transaction, use the\n      // address of the first authorization in the list.\n      if (authorizationList && authorizationList.length > 0)\n        return await recoverAuthorizationAddress({\n          authorization: authorizationList[0],\n        }).catch(() => {\n          throw new BaseError(\n            '`to` is required. Could not infer from `authorizationList`',\n          )\n        })\n\n      // Otherwise, we are sending a deployment transaction.\n      return undefined\n    })()\n\n    assertRequest(args as AssertRequestParameters)\n\n    const chainFormat = client.chain?.formatters?.transactionRequest?.format\n    const format = chainFormat || formatTransactionRequest\n\n    const request = format({\n      // Pick out extra data that might exist on the chain's transaction request type.\n      ...extract(rest, { format: chainFormat }),\n      from: account?.address,\n      accessList,\n      authorizationList,\n      blobs,\n      blobVersionedHashes,\n      data,\n      gas,\n      gasPrice,\n      maxFeePerBlobGas,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      to,\n      value,\n    } as TransactionRequest)\n\n    function estimateGas_rpc(parameters: {\n      block: any\n      request: any\n      rpcStateOverride: any\n    }) {\n      const { block, request, rpcStateOverride } = parameters\n      return client.request({\n        method: 'eth_estimateGas',\n        params: rpcStateOverride\n          ? [request, block ?? 'latest', rpcStateOverride]\n          : block\n            ? [request, block]\n            : [request],\n      })\n    }\n\n    let estimate = BigInt(\n      await estimateGas_rpc({ block, request, rpcStateOverride }),\n    )\n\n    // TODO(7702): Remove this once https://github.com/ethereum/execution-apis/issues/561 is resolved.\n    //       Authorization list schema is not implemented on JSON-RPC spec yet, so we need to\n    //       manually estimate the gas.\n    if (authorizationList) {\n      const value = await getBalance(client, { address: request.from })\n      const estimates = await Promise.all(\n        authorizationList.map(async (authorization) => {\n          const { contractAddress } = authorization\n          const estimate = await estimateGas_rpc({\n            block,\n            request: {\n              authorizationList: undefined,\n              data,\n              from: account?.address,\n              to: contractAddress,\n              value: numberToHex(value),\n            },\n            rpcStateOverride,\n          }).catch(() => 100_000n)\n          return 2n * BigInt(estimate)\n        }),\n      )\n      estimate += estimates.reduce((acc, curr) => acc + curr, 0n)\n    }\n\n    return estimate\n  } catch (err) {\n    throw getEstimateGasError(err as BaseError, {\n      ...args,\n      account,\n      chain: client.chain,\n    })\n  }\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 9274, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9279, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/actions/public/estimateContractGas.ts"],"sourcesContent":["import type { Abi } from 'abitype'\n\nimport type { Account } from '../../accounts/types.js'\nimport {\n  type ParseAccountErrorType,\n  parseAccount,\n} from '../../accounts/utils/parseAccount.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { BaseError } from '../../errors/base.js'\nimport type { Chain } from '../../types/chain.js'\nimport type {\n  ContractFunctionArgs,\n  ContractFunctionName,\n  ContractFunctionParameters,\n  GetValue,\n} from '../../types/contract.js'\nimport type { UnionOmit } from '../../types/utils.js'\nimport {\n  type EncodeFunctionDataErrorType,\n  type EncodeFunctionDataParameters,\n  encodeFunctionData,\n} from '../../utils/abi/encodeFunctionData.js'\nimport {\n  type GetContractErrorReturnType,\n  getContractError,\n} from '../../utils/errors/getContractError.js'\nimport { getAction } from '../../utils/getAction.js'\nimport {\n  type EstimateGasErrorType,\n  type EstimateGasParameters,\n  estimateGas,\n} from './estimateGas.js'\n\nexport type EstimateContractGasParameters<\n  abi extends Abi | readonly unknown[] = Abi,\n  functionName extends ContractFunctionName<\n    abi,\n    'nonpayable' | 'payable'\n  > = ContractFunctionName<abi, 'nonpayable' | 'payable'>,\n  args extends ContractFunctionArgs<\n    abi,\n    'nonpayable' | 'payable',\n    functionName\n  > = ContractFunctionArgs<abi, 'nonpayable' | 'payable', functionName>,\n  chain extends Chain | undefined = Chain | undefined,\n> = ContractFunctionParameters<\n  abi,\n  'nonpayable' | 'payable',\n  functionName,\n  args\n> &\n  UnionOmit<EstimateGasParameters<chain>, 'data' | 'to' | 'value'> &\n  GetValue<\n    abi,\n    functionName,\n    EstimateGasParameters<chain> extends EstimateGasParameters\n      ? EstimateGasParameters<chain>['value']\n      : EstimateGasParameters['value']\n  >\n\nexport type EstimateContractGasReturnType = bigint\n\nexport type EstimateContractGasErrorType = GetContractErrorReturnType<\n  EncodeFunctionDataErrorType | EstimateGasErrorType | ParseAccountErrorType\n>\n\n/**\n * Estimates the gas required to successfully execute a contract write function call.\n *\n * - Docs: https://viem.sh/docs/contract/estimateContractGas\n *\n * Internally, uses a [Public Client](https://viem.sh/docs/clients/public) to call the [`estimateGas` action](https://viem.sh/docs/actions/public/estimateGas) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData).\n *\n * @param client - Client to use\n * @param parameters - {@link EstimateContractGasParameters}\n * @returns The gas estimate (in wei). {@link EstimateContractGasReturnType}\n *\n * @example\n * import { createPublicClient, http, parseAbi } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { estimateContractGas } from 'viem/contract'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const gas = await estimateContractGas(client, {\n *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *   abi: parseAbi(['function mint() public']),\n *   functionName: 'mint',\n *   account: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',\n * })\n */\nexport async function estimateContractGas<\n  const abi extends Abi | readonly unknown[],\n  functionName extends ContractFunctionName<abi, 'nonpayable' | 'payable'>,\n  args extends ContractFunctionArgs<abi, 'pure' | 'view', functionName>,\n  chain extends Chain | undefined,\n  account extends Account | undefined = undefined,\n>(\n  client: Client<Transport, chain, account>,\n  parameters: EstimateContractGasParameters<abi, functionName, args, chain>,\n): Promise<EstimateContractGasReturnType> {\n  const { abi, address, args, functionName, ...request } =\n    parameters as EstimateContractGasParameters\n  const data = encodeFunctionData({\n    abi,\n    args,\n    functionName,\n  } as EncodeFunctionDataParameters)\n  try {\n    const gas = await getAction(\n      client,\n      estimateGas,\n      'estimateGas',\n    )({\n      data,\n      to: address,\n      ...request,\n    } as unknown as EstimateGasParameters)\n    return gas\n  } catch (error) {\n    const account = request.account ? parseAccount(request.account) : undefined\n    throw getContractError(error as BaseError, {\n      abi,\n      address,\n      args,\n      docsPath: '/docs/contract/estimateContractGas',\n      functionName,\n      sender: account?.address,\n    })\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;AA8FO,eAAe,oBAOpB,MAAyC,EACzC,UAAyE;IAEzE,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE,YAAY,EAAE,GAAG,SAAS,GACpD;IACF,MAAM,OAAO,CAAA,GAAA,8JAAA,CAAA,qBAAkB,AAAlB,EAAmB;QAC9B;QACA;QACA;;IAEF,IAAI;QACF,MAAM,MAAM,MAAM,CAAA,GAAA,8IAAA,CAAA,YAAS,AAAT,EAChB,QACA,4JAAA,CAAA,cAAW,EACX,eACA;YACA;YACA,IAAI;YACJ,GAAG,OAAO;;QAEZ,OAAO;IACT,EAAE,OAAO,OAAO;QACd,MAAM,UAAU,QAAQ,OAAO,GAAG,CAAA,GAAA,6JAAA,CAAA,eAAY,AAAZ,EAAa,QAAQ,OAAO,IAAI;QAClE,MAAM,CAAA,GAAA,+JAAA,CAAA,mBAAgB,AAAhB,EAAiB,OAAoB;YACzC;YACA;YACA;YACA,UAAU;YACV;YACA,QAAQ,SAAS;;IAErB;AACF"}},
    {"offset": {"line": 9319, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9324, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/actions/public/getBlobBaseFee.ts"],"sourcesContent":["import type { Account } from '../../accounts/types.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type GetBlobBaseFeeReturnType = bigint\n\nexport type GetBlobBaseFeeErrorType = RequestErrorType | ErrorType\n\n/**\n * Returns the base fee per blob gas in wei.\n *\n * - Docs: https://viem.sh/docs/actions/public/getBlobBaseFee\n * - JSON-RPC Methods: [`eth_blobBaseFee`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_blobBaseFee)\n *\n * @param client - Client to use\n * @returns The blob base fee (in wei). {@link GetBlobBaseFeeReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getBlobBaseFee } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const blobBaseFee = await getBlobBaseFee(client)\n */\nexport async function getBlobBaseFee<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n>(\n  client: Client<Transport, chain, account>,\n): Promise<GetBlobBaseFeeReturnType> {\n  const baseFee = await client.request({\n    method: 'eth_blobBaseFee',\n  })\n  return BigInt(baseFee)\n}\n"],"names":[],"mappings":"AAWA;;;;;;;;;;;;;;;;;;;;;;AAoBO,eAAe,eAIpB,MAAyC;IAEzC,MAAM,UAAU,MAAM,OAAO,OAAO,CAAC;QACnC,QAAQ;;IAEV,OAAO,OAAO;AAChB"}},
    {"offset": {"line": 9352, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9357, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/promise/withCache.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\n\n/** @internal */\nexport const promiseCache = /*#__PURE__*/ new Map()\n/** @internal */\nexport const responseCache = /*#__PURE__*/ new Map()\n\nexport type GetCacheErrorType = ErrorType\n\nexport function getCache<data>(cacheKey: string) {\n  const buildCache = <data>(cacheKey: string, cache: Map<string, data>) => ({\n    clear: () => cache.delete(cacheKey),\n    get: () => cache.get(cacheKey),\n    set: (data: data) => cache.set(cacheKey, data),\n  })\n\n  const promise = buildCache<Promise<data>>(cacheKey, promiseCache)\n  const response = buildCache<{ created: Date; data: data }>(\n    cacheKey,\n    responseCache,\n  )\n\n  return {\n    clear: () => {\n      promise.clear()\n      response.clear()\n    },\n    promise,\n    response,\n  }\n}\n\ntype WithCacheParameters = {\n  /** The key to cache the data against. */\n  cacheKey: string\n  /** The time that cached data will remain in memory. Default: Infinity (no expiry) */\n  cacheTime?: number | undefined\n}\n\n/**\n * @description Returns the result of a given promise, and caches the result for\n * subsequent invocations against a provided cache key.\n */\nexport async function withCache<data>(\n  fn: () => Promise<data>,\n  { cacheKey, cacheTime = Number.POSITIVE_INFINITY }: WithCacheParameters,\n) {\n  const cache = getCache<data>(cacheKey)\n\n  // If a response exists in the cache, and it's not expired, return it\n  // and do not invoke the promise.\n  // If the max age is 0, the cache is disabled.\n  const response = cache.response.get()\n  if (response && cacheTime > 0) {\n    const age = new Date().getTime() - response.created.getTime()\n    if (age < cacheTime) return response.data\n  }\n\n  let promise = cache.promise.get()\n  if (!promise) {\n    promise = fn()\n\n    // Store the promise in the cache so that subsequent invocations\n    // will wait for the same promise to resolve (deduping).\n    cache.promise.set(promise)\n  }\n\n  try {\n    const data = await promise\n\n    // Store the response in the cache so that subsequent invocations\n    // will return the same response.\n    cache.response.set({ created: new Date(), data })\n\n    return data\n  } finally {\n    // Clear the promise cache so that subsequent invocations will\n    // invoke the promise again.\n    cache.promise.clear()\n  }\n}\n"],"names":[],"mappings":"AAEA,cAAA;;;;;;AACO,MAAM,eAAe,WAAA,GAAc,IAAI;AAEvC,MAAM,gBAAgB,WAAA,GAAc,IAAI;AAIzC,SAAU,SAAe,QAAgB;IAC7C,MAAM,aAAa,CAAO,UAAkB,QAA6B,CAAC;YACxE,OAAO,IAAM,MAAM,MAAM,CAAC;YAC1B,KAAK,IAAM,MAAM,GAAG,CAAC;YACrB,KAAK,CAAC,OAAe,MAAM,GAAG,CAAC,UAAU;SAC1C;IAED,MAAM,UAAU,WAA0B,UAAU;IACpD,MAAM,WAAW,WACf,UACA;IAGF,OAAO;QACL,OAAO;YACL,QAAQ,KAAK;YACb,SAAS,KAAK;QAChB;QACA;QACA;;AAEJ;AAaO,eAAe,UACpB,EAAuB,EACvB,EAAE,QAAQ,EAAE,YAAY,OAAO,iBAAiB,EAAuB;IAEvE,MAAM,QAAQ,SAAe;IAE7B,qEAAqE;IACrE,iCAAiC;IACjC,8CAA8C;IAC9C,MAAM,WAAW,MAAM,QAAQ,CAAC,GAAG;IACnC,IAAI,YAAY,YAAY,GAAG;QAC7B,MAAM,MAAM,IAAI,OAAO,OAAO,KAAK,SAAS,OAAO,CAAC,OAAO;QAC3D,IAAI,MAAM,WAAW,OAAO,SAAS,IAAI;IAC3C;IAEA,IAAI,UAAU,MAAM,OAAO,CAAC,GAAG;IAC/B,IAAI,CAAC,SAAS;QACZ,UAAU;QAEV,gEAAgE;QAChE,wDAAwD;QACxD,MAAM,OAAO,CAAC,GAAG,CAAC;IACpB;IAEA,IAAI;QACF,MAAM,OAAO,MAAM;QAEnB,iEAAiE;QACjE,iCAAiC;QACjC,MAAM,QAAQ,CAAC,GAAG,CAAC;YAAE,SAAS,IAAI;YAAQ;QAAI;QAE9C,OAAO;IACT,SAAU;QACR,8DAA8D;QAC9D,4BAA4B;QAC5B,MAAM,OAAO,CAAC,KAAK;IACrB;AACF"}},
    {"offset": {"line": 9414, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9419, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/actions/public/getBlockNumber.ts"],"sourcesContent":["import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type GetCacheErrorType,\n  getCache,\n  withCache,\n} from '../../utils/promise/withCache.js'\n\nexport type GetBlockNumberParameters = {\n  /** Time (in ms) that cached block number will remain in memory. */\n  cacheTime?: number | undefined\n}\n\nexport type GetBlockNumberReturnType = bigint\n\nexport type GetBlockNumberErrorType = RequestErrorType | ErrorType\n\nconst cacheKey = (id: string) => `blockNumber.${id}`\n\n/** @internal */\nexport type GetBlockNumberCacheErrorType = GetCacheErrorType | ErrorType\n\n/** @internal */\nexport function getBlockNumberCache(id: string) {\n  return getCache(cacheKey(id))\n}\n\n/**\n * Returns the number of the most recent block seen.\n *\n * - Docs: https://viem.sh/docs/actions/public/getBlockNumber\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/blocks_fetching-blocks\n * - JSON-RPC Methods: [`eth_blockNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_blocknumber)\n *\n * @param client - Client to use\n * @param parameters - {@link GetBlockNumberParameters}\n * @returns The number of the block. {@link GetBlockNumberReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getBlockNumber } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const blockNumber = await getBlockNumber(client)\n * // 69420n\n */\nexport async function getBlockNumber<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n  { cacheTime = client.cacheTime }: GetBlockNumberParameters = {},\n): Promise<GetBlockNumberReturnType> {\n  const blockNumberHex = await withCache(\n    () =>\n      client.request({\n        method: 'eth_blockNumber',\n      }),\n    { cacheKey: cacheKey(client.uid), cacheTime },\n  )\n  return BigInt(blockNumberHex)\n}\n"],"names":[],"mappings":";;;;;;;AAoBA,MAAM,WAAW,CAAC,KAAe,CAAA,YAAA,EAAe,GAAE,CAAE;AAM9C,SAAU,oBAAoB,EAAU;IAC5C,OAAO,CAAA,GAAA,yJAAA,CAAA,WAAQ,AAAR,EAAS,SAAS;AAC3B;AAyBO,eAAe,eACpB,MAAgC,EAChC,EAAE,YAAY,OAAO,SAAS,EAAA,GAA+B,CAAA,CAAE;IAE/D,MAAM,iBAAiB,MAAM,CAAA,GAAA,yJAAA,CAAA,YAAS,AAAT,EAC3B,IACE,OAAO,OAAO,CAAC;YACb,QAAQ;YAEZ;QAAE,UAAU,SAAS,OAAO,GAAG;QAAG;IAAS;IAE7C,OAAO,OAAO;AAChB"}},
    {"offset": {"line": 9439, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9444, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/actions/public/getBlockTransactionCount.ts"],"sourcesContent":["import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { Quantity } from '../../types/rpc.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type HexToNumberErrorType,\n  hexToNumber,\n} from '../../utils/encoding/fromHex.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\n\nexport type GetBlockTransactionCountParameters =\n  | {\n      /** Hash of the block. */\n      blockHash?: Hash | undefined\n      blockNumber?: undefined\n      blockTag?: undefined\n    }\n  | {\n      blockHash?: undefined\n      /** The block number. */\n      blockNumber?: bigint | undefined\n      blockTag?: undefined\n    }\n  | {\n      blockHash?: undefined\n      blockNumber?: undefined\n      /** The block tag. Defaults to 'latest'. */\n      blockTag?: BlockTag | undefined\n    }\n\nexport type GetBlockTransactionCountReturnType = number\n\nexport type GetBlockTransactionCountErrorType =\n  | NumberToHexErrorType\n  | HexToNumberErrorType\n  | RequestErrorType\n  | ErrorType\n\n/**\n * Returns the number of Transactions at a block number, hash, or tag.\n *\n * - Docs: https://viem.sh/docs/actions/public/getBlockTransactionCount\n * - JSON-RPC Methods:\n *   - Calls [`eth_getBlockTransactionCountByNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblocktransactioncountbynumber) for `blockNumber` & `blockTag`.\n *   - Calls [`eth_getBlockTransactionCountByHash`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblocktransactioncountbyhash) for `blockHash`.\n *\n * @param client - Client to use\n * @param parameters - {@link GetBlockTransactionCountParameters}\n * @returns The block transaction count. {@link GetBlockTransactionCountReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getBlockTransactionCount } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const count = await getBlockTransactionCount(client)\n */\nexport async function getBlockTransactionCount<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n  {\n    blockHash,\n    blockNumber,\n    blockTag = 'latest',\n  }: GetBlockTransactionCountParameters = {},\n): Promise<GetBlockTransactionCountReturnType> {\n  const blockNumberHex =\n    blockNumber !== undefined ? numberToHex(blockNumber) : undefined\n\n  let count: Quantity\n  if (blockHash) {\n    count = await client.request(\n      {\n        method: 'eth_getBlockTransactionCountByHash',\n        params: [blockHash],\n      },\n      { dedupe: true },\n    )\n  } else {\n    count = await client.request(\n      {\n        method: 'eth_getBlockTransactionCountByNumber',\n        params: [blockNumberHex || blockTag],\n      },\n      { dedupe: Boolean(blockNumberHex) },\n    )\n  }\n\n  return hexToNumber(count)\n}\n"],"names":[],"mappings":";;;;;;;;AAoEO,eAAe,yBACpB,MAAgC,EAChC,EACE,SAAS,EACT,WAAW,EACX,WAAW,QAAQ,EAAA,GACmB,CAAA,CAAE;IAE1C,MAAM,iBACJ,gBAAgB,YAAY,CAAA,GAAA,sJAAA,CAAA,cAAW,AAAX,EAAY,eAAe;IAEzD,IAAI;IACJ,IAAI,WAAW;QACb,QAAQ,MAAM,OAAO,OAAO,CAC1B;YACE,QAAQ;YACR,QAAQ;gBAAC;aAAU;WAErB;YAAE,QAAQ;QAAI;IAElB,OAAO;QACL,QAAQ,MAAM,OAAO,OAAO,CAC1B;YACE,QAAQ;YACR,QAAQ;gBAAC,kBAAkB;aAAS;WAEtC;YAAE,QAAQ,QAAQ;QAAe;IAErC;IAEA,OAAO,CAAA,GAAA,wJAAA,CAAA,cAAW,AAAX,EAAY;AACrB"}},
    {"offset": {"line": 9476, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9481, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/actions/public/getCode.ts"],"sourcesContent":["import type { Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\n\nexport type GetCodeParameters = {\n  address: Address\n} & (\n  | {\n      blockNumber?: undefined\n      blockTag?: BlockTag | undefined\n    }\n  | {\n      blockNumber?: bigint | undefined\n      blockTag?: undefined\n    }\n)\n\nexport type GetCodeReturnType = Hex | undefined\n\nexport type GetCodeErrorType =\n  | NumberToHexErrorType\n  | RequestErrorType\n  | ErrorType\n\n/**\n * Retrieves the bytecode at an address.\n *\n * - Docs: https://viem.sh/docs/contract/getCode\n * - JSON-RPC Methods: [`eth_getCode`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getcode)\n *\n * @param client - Client to use\n * @param parameters - {@link GetCodeParameters}\n * @returns The contract's bytecode. {@link GetCodeReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getCode } from 'viem/contract'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const code = await getCode(client, {\n *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n * })\n */\nexport async function getCode<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n  { address, blockNumber, blockTag = 'latest' }: GetCodeParameters,\n): Promise<GetCodeReturnType> {\n  const blockNumberHex =\n    blockNumber !== undefined ? numberToHex(blockNumber) : undefined\n  const hex = await client.request(\n    {\n      method: 'eth_getCode',\n      params: [address, blockNumberHex || blockTag],\n    },\n    { dedupe: Boolean(blockNumberHex) },\n  )\n  if (hex === '0x') return undefined\n  return hex\n}\n"],"names":[],"mappings":";;;;;;AAyDO,eAAe,QACpB,MAAgC,EAChC,EAAE,OAAO,EAAE,WAAW,EAAE,WAAW,QAAQ,EAAqB;IAEhE,MAAM,iBACJ,gBAAgB,YAAY,CAAA,GAAA,sJAAA,CAAA,cAAW,AAAX,EAAY,eAAe;IACzD,MAAM,MAAM,MAAM,OAAO,OAAO,CAC9B;QACE,QAAQ;QACR,QAAQ;YAAC;YAAS,kBAAkB;SAAS;OAE/C;QAAE,QAAQ,QAAQ;IAAe;IAEnC,IAAI,QAAQ,MAAM,OAAO;IACzB,OAAO;AACT"}},
    {"offset": {"line": 9501, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9506, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/address/isAddressEqual.ts"],"sourcesContent":["import type { Address } from 'abitype'\n\nimport {\n  InvalidAddressError,\n  type InvalidAddressErrorType,\n} from '../../errors/address.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport { isAddress } from './isAddress.js'\n\nexport type IsAddressEqualReturnType = boolean\nexport type IsAddressEqualErrorType = InvalidAddressErrorType | ErrorType\n\nexport function isAddressEqual(a: Address, b: Address) {\n  if (!isAddress(a, { strict: false }))\n    throw new InvalidAddressError({ address: a })\n  if (!isAddress(b, { strict: false }))\n    throw new InvalidAddressError({ address: b })\n  return a.toLowerCase() === b.toLowerCase()\n}\n"],"names":[],"mappings":";;;;;;;;AAYM,SAAU,eAAe,CAAU,EAAE,CAAU;IACnD,IAAI,CAAC,CAAA,GAAA,yJAAA,CAAA,YAAS,AAAT,EAAU,GAAG;QAAE,QAAQ;IAAK,IAC/B,MAAM,IAAI,6IAAA,CAAA,sBAAmB,CAAC;QAAE,SAAS;IAAC;IAC5C,IAAI,CAAC,CAAA,GAAA,yJAAA,CAAA,YAAS,AAAT,EAAU,GAAG;QAAE,QAAQ;IAAK,IAC/B,MAAM,IAAI,6IAAA,CAAA,sBAAmB,CAAC;QAAE,SAAS;IAAC;IAC5C,OAAO,EAAE,WAAW,OAAO,EAAE,WAAW;AAC1C"}},
    {"offset": {"line": 9527, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9532, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/abi/decodeEventLog.ts"],"sourcesContent":["import type { Abi, AbiParameter } from 'abitype'\n\nimport {\n  AbiDecodingDataSizeTooSmallError,\n  type AbiDecodingDataSizeTooSmallErrorType,\n  AbiEventSignatureEmptyTopicsError,\n  type AbiEventSignatureEmptyTopicsErrorType,\n  AbiEventSignatureNotFoundError,\n  type AbiEventSignatureNotFoundErrorType,\n  DecodeLogDataMismatch,\n  type DecodeLogDataMismatchErrorType,\n  DecodeLogTopicsMismatch,\n  type DecodeLogTopicsMismatchErrorType,\n} from '../../errors/abi.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type {\n  ContractEventArgsFromTopics,\n  ContractEventName,\n  EventDefinition,\n} from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport type {\n  IsNarrowable,\n  Prettify,\n  UnionEvaluate,\n} from '../../types/utils.js'\nimport { size } from '../data/size.js'\nimport {\n  type ToEventSelectorErrorType,\n  toEventSelector,\n} from '../hash/toEventSelector.js'\n\nimport { PositionOutOfBoundsError } from '../../errors/cursor.js'\nimport {\n  type DecodeAbiParametersErrorType,\n  decodeAbiParameters,\n} from './decodeAbiParameters.js'\nimport { type FormatAbiItemErrorType, formatAbiItem } from './formatAbiItem.js'\n\nexport type DecodeEventLogParameters<\n  abi extends Abi | readonly unknown[] = Abi,\n  eventName extends ContractEventName<abi> | undefined = ContractEventName<abi>,\n  topics extends Hex[] = Hex[],\n  data extends Hex | undefined = undefined,\n  strict extends boolean = true,\n> = {\n  abi: abi\n  data?: data | undefined\n  eventName?: eventName | ContractEventName<abi> | undefined\n  strict?: strict | boolean | undefined\n  topics: [signature: Hex, ...args: topics] | []\n}\n\nexport type DecodeEventLogReturnType<\n  abi extends Abi | readonly unknown[] = Abi,\n  eventName extends ContractEventName<abi> | undefined = ContractEventName<abi>,\n  topics extends Hex[] = Hex[],\n  data extends Hex | undefined = undefined,\n  strict extends boolean = true,\n  ///\n  allEventNames extends\n    ContractEventName<abi> = eventName extends ContractEventName<abi>\n    ? eventName\n    : ContractEventName<abi>,\n> = IsNarrowable<abi, Abi> extends true\n  ? {\n      [name in allEventNames]: Prettify<\n        {\n          eventName: name\n        } & UnionEvaluate<\n          ContractEventArgsFromTopics<abi, name, strict> extends infer allArgs\n            ? topics extends readonly []\n              ? data extends undefined\n                ? { args?: undefined }\n                : { args?: allArgs | undefined }\n              : { args: allArgs }\n            : never\n        >\n      >\n    }[allEventNames]\n  : {\n      eventName: eventName\n      args: readonly unknown[] | undefined\n    }\n\nexport type DecodeEventLogErrorType =\n  | AbiDecodingDataSizeTooSmallErrorType\n  | AbiEventSignatureEmptyTopicsErrorType\n  | AbiEventSignatureNotFoundErrorType\n  | DecodeAbiParametersErrorType\n  | DecodeLogTopicsMismatchErrorType\n  | DecodeLogDataMismatchErrorType\n  | FormatAbiItemErrorType\n  | ToEventSelectorErrorType\n  | ErrorType\n\nconst docsPath = '/docs/contract/decodeEventLog'\n\nexport function decodeEventLog<\n  const abi extends Abi | readonly unknown[],\n  eventName extends ContractEventName<abi> | undefined = undefined,\n  topics extends Hex[] = Hex[],\n  data extends Hex | undefined = undefined,\n  strict extends boolean = true,\n>(\n  parameters: DecodeEventLogParameters<abi, eventName, topics, data, strict>,\n): DecodeEventLogReturnType<abi, eventName, topics, data, strict> {\n  const {\n    abi,\n    data,\n    strict: strict_,\n    topics,\n  } = parameters as DecodeEventLogParameters\n\n  const strict = strict_ ?? true\n  const [signature, ...argTopics] = topics\n  if (!signature) throw new AbiEventSignatureEmptyTopicsError({ docsPath })\n\n  const abiItem = (() => {\n    if (abi.length === 1) return abi[0]\n    return abi.find(\n      (x) =>\n        x.type === 'event' &&\n        signature === toEventSelector(formatAbiItem(x) as EventDefinition),\n    )\n  })()\n\n  if (!(abiItem && 'name' in abiItem) || abiItem.type !== 'event')\n    throw new AbiEventSignatureNotFoundError(signature, { docsPath })\n\n  const { name, inputs } = abiItem\n  const isUnnamed = inputs?.some((x) => !('name' in x && x.name))\n\n  let args: any = isUnnamed ? [] : {}\n\n  // Decode topics (indexed args).\n  const indexedInputs = inputs.filter((x) => 'indexed' in x && x.indexed)\n  for (let i = 0; i < indexedInputs.length; i++) {\n    const param = indexedInputs[i]\n    const topic = argTopics[i]\n    if (!topic)\n      throw new DecodeLogTopicsMismatch({\n        abiItem,\n        param: param as AbiParameter & { indexed: boolean },\n      })\n    args[isUnnamed ? i : param.name || i] = decodeTopic({ param, value: topic })\n  }\n\n  // Decode data (non-indexed args).\n  const nonIndexedInputs = inputs.filter((x) => !('indexed' in x && x.indexed))\n  if (nonIndexedInputs.length > 0) {\n    if (data && data !== '0x') {\n      try {\n        const decodedData = decodeAbiParameters(nonIndexedInputs, data)\n        if (decodedData) {\n          if (isUnnamed) args = [...args, ...decodedData]\n          else {\n            for (let i = 0; i < nonIndexedInputs.length; i++) {\n              args[nonIndexedInputs[i].name!] = decodedData[i]\n            }\n          }\n        }\n      } catch (err) {\n        if (strict) {\n          if (\n            err instanceof AbiDecodingDataSizeTooSmallError ||\n            err instanceof PositionOutOfBoundsError\n          )\n            throw new DecodeLogDataMismatch({\n              abiItem,\n              data: data,\n              params: nonIndexedInputs,\n              size: size(data),\n            })\n          throw err\n        }\n      }\n    } else if (strict) {\n      throw new DecodeLogDataMismatch({\n        abiItem,\n        data: '0x',\n        params: nonIndexedInputs,\n        size: 0,\n      })\n    }\n  }\n\n  return {\n    eventName: name,\n    args: Object.values(args).length > 0 ? args : undefined,\n  } as unknown as DecodeEventLogReturnType<abi, eventName, topics, data, strict>\n}\n\nfunction decodeTopic({ param, value }: { param: AbiParameter; value: Hex }) {\n  if (\n    param.type === 'string' ||\n    param.type === 'bytes' ||\n    param.type === 'tuple' ||\n    param.type.match(/^(.*)\\[(\\d+)?\\]$/)\n  )\n    return value\n  const decodedArg = decodeAbiParameters([param], value) || []\n  return decodedArg[0]\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 9629, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9634, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/abi/parseEventLogs.ts"],"sourcesContent":["// TODO(v3): checksum address.\n\nimport type { Abi, AbiEvent, AbiEventParameter, Address } from 'abitype'\nimport {\n  AbiEventSignatureNotFoundError,\n  DecodeLogDataMismatch,\n  DecodeLogTopicsMismatch,\n} from '../../errors/abi.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ContractEventName, GetEventArgs } from '../../types/contract.js'\nimport type { Log } from '../../types/log.js'\nimport type { RpcLog } from '../../types/rpc.js'\nimport { isAddressEqual } from '../address/isAddressEqual.js'\nimport { toBytes } from '../encoding/toBytes.js'\nimport { keccak256 } from '../hash/keccak256.js'\nimport { toEventSelector } from '../hash/toEventSelector.js'\nimport {\n  type DecodeEventLogErrorType,\n  decodeEventLog,\n} from './decodeEventLog.js'\n\nexport type ParseEventLogsParameters<\n  abi extends Abi | readonly unknown[] = Abi,\n  eventName extends\n    | ContractEventName<abi>\n    | ContractEventName<abi>[]\n    | undefined = ContractEventName<abi>,\n  strict extends boolean | undefined = boolean | undefined,\n  ///\n  allArgs = GetEventArgs<\n    abi,\n    eventName extends ContractEventName<abi>\n      ? eventName\n      : ContractEventName<abi>,\n    {\n      EnableUnion: true\n      IndexedOnly: false\n      Required: false\n    }\n  >,\n> = {\n  /** Contract ABI. */\n  abi: abi\n  /** Arguments for the event. */\n  args?: allArgs | undefined\n  /** Contract event. */\n  eventName?:\n    | eventName\n    | ContractEventName<abi>\n    | ContractEventName<abi>[]\n    | undefined\n  /** List of logs. */\n  logs: (Log | RpcLog)[]\n  strict?: strict | boolean | undefined\n}\n\nexport type ParseEventLogsReturnType<\n  abi extends Abi | readonly unknown[] = Abi,\n  eventName extends\n    | ContractEventName<abi>\n    | ContractEventName<abi>[]\n    | undefined = ContractEventName<abi>,\n  strict extends boolean | undefined = boolean | undefined,\n  ///\n  derivedEventName extends\n    | ContractEventName<abi>\n    | undefined = eventName extends ContractEventName<abi>[]\n    ? eventName[number]\n    : eventName,\n> = Log<bigint, number, false, undefined, strict, abi, derivedEventName>[]\n\nexport type ParseEventLogsErrorType = DecodeEventLogErrorType | ErrorType\n\n/**\n * Extracts & decodes logs matching the provided signature(s) (`abi` + optional `eventName`)\n * from a set of opaque logs.\n *\n * @param parameters - {@link ParseEventLogsParameters}\n * @returns The logs. {@link ParseEventLogsReturnType}\n *\n * @example\n * import { createClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { parseEventLogs } from 'viem/op-stack'\n *\n * const client = createClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n *\n * const receipt = await getTransactionReceipt(client, {\n *   hash: '0xec23b2ba4bc59ba61554507c1b1bc91649e6586eb2dd00c728e8ed0db8bb37ea',\n * })\n *\n * const logs = parseEventLogs({ logs: receipt.logs })\n * // [{ args: { ... }, eventName: 'TransactionDeposited', ... }, ...]\n */\nexport function parseEventLogs<\n  abi extends Abi | readonly unknown[],\n  strict extends boolean | undefined = true,\n  eventName extends\n    | ContractEventName<abi>\n    | ContractEventName<abi>[]\n    | undefined = undefined,\n>(\n  parameters: ParseEventLogsParameters<abi, eventName, strict>,\n): ParseEventLogsReturnType<abi, eventName, strict> {\n  const { abi, args, logs, strict = true } = parameters\n\n  const eventName = (() => {\n    if (!parameters.eventName) return undefined\n    if (Array.isArray(parameters.eventName)) return parameters.eventName\n    return [parameters.eventName as string]\n  })()\n\n  return logs\n    .map((log) => {\n      try {\n        const abiItem = (abi as Abi).find(\n          (abiItem) =>\n            abiItem.type === 'event' &&\n            log.topics[0] === toEventSelector(abiItem),\n        ) as AbiEvent\n        if (!abiItem) return null\n\n        const event = decodeEventLog({\n          ...log,\n          abi: [abiItem],\n          strict,\n        })\n\n        // Check that the decoded event name matches the provided event name.\n        if (eventName && !eventName.includes(event.eventName)) return null\n\n        // Check that the decoded event args match the provided args.\n        if (\n          !includesArgs({\n            args: event.args,\n            inputs: abiItem.inputs,\n            matchArgs: args,\n          })\n        )\n          return null\n\n        return { ...event, ...log }\n      } catch (err) {\n        let eventName: string | undefined\n        let isUnnamed: boolean | undefined\n\n        if (err instanceof AbiEventSignatureNotFoundError) return null\n        if (\n          err instanceof DecodeLogDataMismatch ||\n          err instanceof DecodeLogTopicsMismatch\n        ) {\n          // If strict mode is on, and log data/topics do not match event definition, skip.\n          if (strict) return null\n          eventName = err.abiItem.name\n          isUnnamed = err.abiItem.inputs?.some((x) => !('name' in x && x.name))\n        }\n\n        // Set args to empty if there is an error decoding (e.g. indexed/non-indexed params mismatch).\n        return { ...log, args: isUnnamed ? [] : {}, eventName }\n      }\n    })\n    .filter(Boolean) as unknown as ParseEventLogsReturnType<\n    abi,\n    eventName,\n    strict\n  >\n}\n\nfunction includesArgs(parameters: {\n  args: unknown\n  inputs: AbiEvent['inputs']\n  matchArgs: unknown\n}) {\n  const { args, inputs, matchArgs } = parameters\n\n  if (!matchArgs) return true\n  if (!args) return false\n\n  function isEqual(input: AbiEventParameter, value: unknown, arg: unknown) {\n    try {\n      if (input.type === 'address')\n        return isAddressEqual(value as Address, arg as Address)\n      if (input.type === 'string' || input.type === 'bytes')\n        return keccak256(toBytes(value as string)) === arg\n      return value === arg\n    } catch {\n      return false\n    }\n  }\n\n  if (Array.isArray(args) && Array.isArray(matchArgs)) {\n    return matchArgs.every((value, index) => {\n      if (value === null || value === undefined) return true\n      const input = inputs[index]\n      if (!input) return false\n      const value_ = Array.isArray(value) ? value : [value]\n      return value_.some((value) => isEqual(input, value, args[index]))\n    })\n  }\n\n  if (\n    typeof args === 'object' &&\n    !Array.isArray(args) &&\n    typeof matchArgs === 'object' &&\n    !Array.isArray(matchArgs)\n  )\n    return Object.entries(matchArgs).every(([key, value]) => {\n      if (value === null || value === undefined) return true\n      const input = inputs.find((input) => input.name === key)\n      if (!input) return false\n      const value_ = Array.isArray(value) ? value : [value]\n      return value_.some((value) =>\n        isEqual(input, value, (args as Record<string, unknown>)[key]),\n      )\n    })\n\n  return false\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 9737, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9742, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/formatters/log.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\nimport type { Log } from '../../types/log.js'\nimport type { RpcLog } from '../../types/rpc.js'\nimport type { ExactPartial } from '../../types/utils.js'\n\nexport type FormatLogErrorType = ErrorType\n\nexport function formatLog(\n  log: ExactPartial<RpcLog>,\n  {\n    args,\n    eventName,\n  }: { args?: unknown | undefined; eventName?: string | undefined } = {},\n) {\n  return {\n    ...log,\n    blockHash: log.blockHash ? log.blockHash : null,\n    blockNumber: log.blockNumber ? BigInt(log.blockNumber) : null,\n    logIndex: log.logIndex ? Number(log.logIndex) : null,\n    transactionHash: log.transactionHash ? log.transactionHash : null,\n    transactionIndex: log.transactionIndex\n      ? Number(log.transactionIndex)\n      : null,\n    ...(eventName ? { args, eventName } : {}),\n  } as Log\n}\n"],"names":[],"mappings":";;;AAOM,SAAU,UACd,GAAyB,EACzB,EACE,IAAI,EACJ,SAAS,EAAA,GACyD,CAAA,CAAE;IAEtE,OAAO;QACL,GAAG,GAAG;QACN,WAAW,IAAI,SAAS,GAAG,IAAI,SAAS,GAAG;QAC3C,aAAa,IAAI,WAAW,GAAG,OAAO,IAAI,WAAW,IAAI;QACzD,UAAU,IAAI,QAAQ,GAAG,OAAO,IAAI,QAAQ,IAAI;QAChD,iBAAiB,IAAI,eAAe,GAAG,IAAI,eAAe,GAAG;QAC7D,kBAAkB,IAAI,gBAAgB,GAClC,OAAO,IAAI,gBAAgB,IAC3B;QACJ,GAAI,YAAY;YAAE;YAAM;QAAS,IAAK,CAAA,CAAE;;AAE5C"}},
    {"offset": {"line": 9759, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9764, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/actions/public/getLogs.ts"],"sourcesContent":["import type { AbiEvent, Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockNumber, BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type {\n  MaybeAbiEventName,\n  MaybeExtractEventArgsFromAbi,\n} from '../../types/contract.js'\nimport type { Log } from '../../types/log.js'\nimport type { Hash, LogTopic } from '../../types/misc.js'\nimport type { RpcLog } from '../../types/rpc.js'\nimport type { DecodeEventLogErrorType } from '../../utils/abi/decodeEventLog.js'\nimport {\n  type EncodeEventTopicsErrorType,\n  type EncodeEventTopicsParameters,\n  encodeEventTopics,\n} from '../../utils/abi/encodeEventTopics.js'\nimport { parseEventLogs } from '../../utils/abi/parseEventLogs.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\nimport {\n  type FormatLogErrorType,\n  formatLog,\n} from '../../utils/formatters/log.js'\n\nexport type GetLogsParameters<\n  abiEvent extends AbiEvent | undefined = undefined,\n  abiEvents extends\n    | readonly AbiEvent[]\n    | readonly unknown[]\n    | undefined = abiEvent extends AbiEvent ? [abiEvent] : undefined,\n  strict extends boolean | undefined = undefined,\n  fromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  toBlock extends BlockNumber | BlockTag | undefined = undefined,\n  //\n  _eventName extends string | undefined = MaybeAbiEventName<abiEvent>,\n> = {\n  /** Address or list of addresses from which logs originated */\n  address?: Address | Address[] | undefined\n} & (\n  | {\n      event: abiEvent\n      events?: undefined\n      args?: MaybeExtractEventArgsFromAbi<abiEvents, _eventName> | undefined\n      /**\n       * Whether or not the logs must match the indexed/non-indexed arguments on `event`.\n       * @default false\n       */\n      strict?: strict | undefined\n    }\n  | {\n      event?: undefined\n      events: abiEvents\n      args?: undefined\n      /**\n       * Whether or not the logs must match the indexed/non-indexed arguments on `event`.\n       * @default false\n       */\n      strict?: strict | undefined\n    }\n  | {\n      event?: undefined\n      events?: undefined\n      args?: undefined\n      strict?: undefined\n    }\n) &\n  (\n    | {\n        /** Block number or tag after which to include logs */\n        fromBlock?: fromBlock | BlockNumber | BlockTag | undefined\n        /** Block number or tag before which to include logs */\n        toBlock?: toBlock | BlockNumber | BlockTag | undefined\n        blockHash?: undefined\n      }\n    | {\n        fromBlock?: undefined\n        toBlock?: undefined\n        /** Hash of block to include logs from */\n        blockHash?: Hash | undefined\n      }\n  )\n\nexport type GetLogsReturnType<\n  abiEvent extends AbiEvent | undefined = undefined,\n  abiEvents extends\n    | readonly AbiEvent[]\n    | readonly unknown[]\n    | undefined = abiEvent extends AbiEvent ? [abiEvent] : undefined,\n  strict extends boolean | undefined = undefined,\n  fromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  toBlock extends BlockNumber | BlockTag | undefined = undefined,\n  //\n  _eventName extends string | undefined = MaybeAbiEventName<abiEvent>,\n  _pending extends boolean =\n    | (fromBlock extends 'pending' ? true : false)\n    | (toBlock extends 'pending' ? true : false),\n> = Log<bigint, number, _pending, abiEvent, strict, abiEvents, _eventName>[]\n\nexport type GetLogsErrorType =\n  | DecodeEventLogErrorType\n  | EncodeEventTopicsErrorType\n  | FormatLogErrorType\n  | NumberToHexErrorType\n  | RequestErrorType\n  | ErrorType\n\n/**\n * Returns a list of event logs matching the provided parameters.\n *\n * - Docs: https://viem.sh/docs/actions/public/getLogs\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/filters-and-logs/event-logs\n * - JSON-RPC Methods: [`eth_getLogs`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getlogs)\n *\n * @param client - Client to use\n * @param parameters - {@link GetLogsParameters}\n * @returns A list of event logs. {@link GetLogsReturnType}\n *\n * @example\n * import { createPublicClient, http, parseAbiItem } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getLogs } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const logs = await getLogs(client)\n */\nexport async function getLogs<\n  chain extends Chain | undefined,\n  const abiEvent extends AbiEvent | undefined = undefined,\n  const abiEvents extends\n    | readonly AbiEvent[]\n    | readonly unknown[]\n    | undefined = abiEvent extends AbiEvent ? [abiEvent] : undefined,\n  strict extends boolean | undefined = undefined,\n  fromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  toBlock extends BlockNumber | BlockTag | undefined = undefined,\n>(\n  client: Client<Transport, chain>,\n  {\n    address,\n    blockHash,\n    fromBlock,\n    toBlock,\n    event,\n    events: events_,\n    args,\n    strict: strict_,\n  }: GetLogsParameters<abiEvent, abiEvents, strict, fromBlock, toBlock> = {},\n): Promise<GetLogsReturnType<abiEvent, abiEvents, strict, fromBlock, toBlock>> {\n  const strict = strict_ ?? false\n  const events = events_ ?? (event ? [event] : undefined)\n\n  let topics: LogTopic[] = []\n  if (events) {\n    const encoded = (events as AbiEvent[]).flatMap((event) =>\n      encodeEventTopics({\n        abi: [event],\n        eventName: (event as AbiEvent).name,\n        args: events_ ? undefined : args,\n      } as EncodeEventTopicsParameters),\n    )\n    // TODO: Clean up type casting\n    topics = [encoded as LogTopic]\n    if (event) topics = topics[0] as LogTopic[]\n  }\n\n  let logs: RpcLog[]\n  if (blockHash) {\n    logs = await client.request({\n      method: 'eth_getLogs',\n      params: [{ address, topics, blockHash }],\n    })\n  } else {\n    logs = await client.request({\n      method: 'eth_getLogs',\n      params: [\n        {\n          address,\n          topics,\n          fromBlock:\n            typeof fromBlock === 'bigint' ? numberToHex(fromBlock) : fromBlock,\n          toBlock: typeof toBlock === 'bigint' ? numberToHex(toBlock) : toBlock,\n        },\n      ],\n    })\n  }\n\n  const formattedLogs = logs.map((log) => formatLog(log))\n  if (!events)\n    return formattedLogs as GetLogsReturnType<\n      abiEvent,\n      abiEvents,\n      strict,\n      fromBlock,\n      toBlock\n    >\n  return parseEventLogs({\n    abi: events,\n    args: args as any,\n    logs: formattedLogs,\n    strict,\n  }) as unknown as GetLogsReturnType<\n    abiEvent,\n    abiEvents,\n    strict,\n    fromBlock,\n    toBlock\n  >\n}\n"],"names":[],"mappings":";;;;;;;;;;;;AAuIO,eAAe,QAWpB,MAAgC,EAChC,EACE,OAAO,EACP,SAAS,EACT,SAAS,EACT,OAAO,EACP,KAAK,EACL,QAAQ,OAAO,EACf,IAAI,EACJ,QAAQ,OAAO,EAAA,GACuD,CAAA,CAAE;IAE1E,MAAM,SAAS,WAAW;IAC1B,MAAM,SAAS,WAAW,CAAC,QAAQ;QAAC;KAAM,GAAG,SAAS;IAEtD,IAAI,SAAqB,EAAE;IAC3B,IAAI,QAAQ;QACV,MAAM,UAAW,OAAsB,OAAO,CAAC,CAAC,QAC9C,CAAA,GAAA,6JAAA,CAAA,oBAAiB,AAAjB,EAAkB;gBAChB,KAAK;oBAAC;iBAAM;gBACZ,WAAY,MAAmB,IAAI;gBACnC,MAAM,UAAU,YAAY;;QAGhC,8BAA8B;QAC9B,SAAS;YAAC;SAAoB;QAC9B,IAAI,OAAO,SAAS,MAAM,CAAC,EAAgB;IAC7C;IAEA,IAAI;IACJ,IAAI,WAAW;QACb,OAAO,MAAM,OAAO,OAAO,CAAC;YAC1B,QAAQ;YACR,QAAQ;gBAAC;oBAAE;oBAAS;oBAAQ;gBAAS;aAAG;;IAE5C,OAAO;QACL,OAAO,MAAM,OAAO,OAAO,CAAC;YAC1B,QAAQ;YACR,QAAQ;gBACN;oBACE;oBACA;oBACA,WACE,OAAO,cAAc,WAAW,CAAA,GAAA,sJAAA,CAAA,cAAW,AAAX,EAAY,aAAa;oBAC3D,SAAS,OAAO,YAAY,WAAW,CAAA,GAAA,sJAAA,CAAA,cAAW,AAAX,EAAY,WAAW;;aAEjE;;IAEL;IAEA,MAAM,gBAAgB,KAAK,GAAG,CAAC,CAAC,MAAQ,CAAA,GAAA,sJAAA,CAAA,YAAS,AAAT,EAAU;IAClD,IAAI,CAAC,QACH,OAAO;IAOT,OAAO,CAAA,GAAA,0JAAA,CAAA,iBAAc,AAAd,EAAe;QACpB,KAAK;QACL,MAAM;QACN,MAAM;QACN;;AAQJ"}},
    {"offset": {"line": 9830, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9835, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/actions/public/getContractEvents.ts"],"sourcesContent":["import type { Abi, Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockNumber, BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type {\n  ContractEventArgs,\n  ContractEventName,\n} from '../../types/contract.js'\nimport type { Log } from '../../types/log.js'\nimport type { Hash } from '../../types/misc.js'\nimport {\n  type GetAbiItemErrorType,\n  type GetAbiItemParameters,\n  getAbiItem,\n} from '../../utils/abi/getAbiItem.js'\nimport { getAction } from '../../utils/getAction.js'\nimport {\n  type GetLogsErrorType,\n  type GetLogsParameters,\n  getLogs,\n} from './getLogs.js'\n\nexport type GetContractEventsParameters<\n  abi extends Abi | readonly unknown[] = Abi,\n  eventName extends ContractEventName<abi> | undefined =\n    | ContractEventName<abi>\n    | undefined,\n  strict extends boolean | undefined = undefined,\n  fromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  toBlock extends BlockNumber | BlockTag | undefined = undefined,\n> = {\n  /** The address of the contract. */\n  address?: Address | Address[] | undefined\n  /** Contract ABI. */\n  abi: abi\n  args?:\n    | ContractEventArgs<\n        abi,\n        eventName extends ContractEventName<abi>\n          ? eventName\n          : ContractEventName<abi>\n      >\n    | undefined\n  /** Contract event. */\n  eventName?: eventName | ContractEventName<abi> | undefined\n  /**\n   * Whether or not the logs must match the indexed/non-indexed arguments on `event`.\n   * @default false\n   */\n  strict?: strict | boolean | undefined\n} & (\n  | {\n      /** Block number or tag after which to include logs */\n      fromBlock?: fromBlock | BlockNumber | BlockTag | undefined\n      /** Block number or tag before which to include logs */\n      toBlock?: toBlock | BlockNumber | BlockTag | undefined\n      blockHash?: undefined\n    }\n  | {\n      fromBlock?: undefined\n      toBlock?: undefined\n      /** Hash of block to include logs from */\n      blockHash?: Hash | undefined\n    }\n)\n\nexport type GetContractEventsReturnType<\n  abi extends Abi | readonly unknown[] = readonly unknown[],\n  eventName extends ContractEventName<abi> | undefined =\n    | ContractEventName<abi>\n    | undefined,\n  strict extends boolean | undefined = undefined,\n  fromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  toBlock extends BlockNumber | BlockTag | undefined = undefined,\n  ///\n  isPending extends boolean =\n    | (fromBlock extends 'pending' ? true : false)\n    | (toBlock extends 'pending' ? true : false),\n> = Log<bigint, number, isPending, undefined, strict, abi, eventName>[]\n\nexport type GetContractEventsErrorType =\n  | GetAbiItemErrorType\n  | GetLogsErrorType\n  | ErrorType\n\n/**\n * Returns a list of event logs emitted by a contract.\n *\n * - Docs: https://viem.sh/docs/actions/public/getContractEvents\n * - JSON-RPC Methods: [`eth_getLogs`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getlogs)\n *\n * @param client - Client to use\n * @param parameters - {@link GetContractEventsParameters}\n * @returns A list of event logs. {@link GetContractEventsReturnType}\n *\n * @example\n * import { createClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getContractEvents } from 'viem/public'\n * import { wagmiAbi } from './abi'\n *\n * const client = createClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const logs = await getContractEvents(client, {\n *  address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *  abi: wagmiAbi,\n *  eventName: 'Transfer'\n * })\n */\nexport async function getContractEvents<\n  chain extends Chain | undefined,\n  const abi extends Abi | readonly unknown[],\n  eventName extends ContractEventName<abi> | undefined = undefined,\n  strict extends boolean | undefined = undefined,\n  fromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  toBlock extends BlockNumber | BlockTag | undefined = undefined,\n>(\n  client: Client<Transport, chain>,\n  parameters: GetContractEventsParameters<\n    abi,\n    eventName,\n    strict,\n    fromBlock,\n    toBlock\n  >,\n): Promise<\n  GetContractEventsReturnType<abi, eventName, strict, fromBlock, toBlock>\n> {\n  const {\n    abi,\n    address,\n    args,\n    blockHash,\n    eventName,\n    fromBlock,\n    toBlock,\n    strict,\n  } = parameters\n  const event = eventName\n    ? getAbiItem({ abi, name: eventName } as GetAbiItemParameters)\n    : undefined\n  const events = !event\n    ? (abi as Abi).filter((x) => x.type === 'event')\n    : undefined\n  return getAction(\n    client,\n    getLogs,\n    'getLogs',\n  )({\n    address,\n    args,\n    blockHash,\n    event,\n    events,\n    fromBlock,\n    toBlock,\n    strict,\n  } as {} as GetLogsParameters) as unknown as GetContractEventsReturnType<\n    abi,\n    eventName,\n    strict,\n    fromBlock,\n    toBlock\n  >\n}\n"],"names":[],"mappings":";;;;;;;;;;AAkHO,eAAe,kBAQpB,MAAgC,EAChC,UAMC;IAID,MAAM,EACJ,GAAG,EACH,OAAO,EACP,IAAI,EACJ,SAAS,EACT,SAAS,EACT,SAAS,EACT,OAAO,EACP,MAAM,EACP,GAAG;IACJ,MAAM,QAAQ,YACV,CAAA,GAAA,sJAAA,CAAA,aAAU,AAAV,EAAW;QAAE;QAAK,MAAM;IAAS,KACjC;IACJ,MAAM,SAAS,CAAC,QACX,IAAY,MAAM,CAAC,CAAC,IAAM,EAAE,IAAI,KAAK,WACtC;IACJ,OAAO,CAAA,GAAA,8IAAA,CAAA,YAAS,AAAT,EACL,QACA,wJAAA,CAAA,UAAO,EACP,WACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;AAQJ"}},
    {"offset": {"line": 9863, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9868, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/errors/eip712.ts"],"sourcesContent":["import type { Address } from 'abitype'\nimport { BaseError } from './base.js'\n\nexport type Eip712DomainNotFoundErrorType = Eip712DomainNotFoundError & {\n  name: 'Eip712DomainNotFoundError'\n}\nexport class Eip712DomainNotFoundError extends BaseError {\n  constructor({ address }: { address: Address }) {\n    super(`No EIP-712 domain found on contract \"${address}\".`, {\n      metaMessages: [\n        'Ensure that:',\n        `- The contract is deployed at the address \"${address}\".`,\n        '- `eip712Domain()` function exists on the contract.',\n        '- `eip712Domain()` function matches signature to ERC-5267 specification.',\n      ],\n      name: 'Eip712DomainNotFoundError',\n    })\n  }\n}\n"],"names":[],"mappings":";;;;;;AAMM,MAAO,kCAAkC,0IAAA,CAAA,YAAS;IACtD,YAAY,EAAE,OAAO,EAAwB,CAAA;QAC3C,KAAK,CAAC,CAAA,qCAAA,EAAwC,QAAO,EAAA,CAAI,EAAE;YACzD,cAAc;gBACZ;gBACA,CAAA,2CAAA,EAA8C,QAAO,EAAA,CAAI;gBACzD;gBACA;aACD;YACD,MAAM;;IAEV"}},
    {"offset": {"line": 9887, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9892, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/actions/public/getEip712Domain.ts"],"sourcesContent":["import type { Address, TypedDataDomain } from 'abitype'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport {\n  Eip712DomainNotFoundError,\n  type Eip712DomainNotFoundErrorType,\n} from '../../errors/eip712.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { RequiredBy } from '../../types/utils.js'\nimport { getAction } from '../../utils/getAction.js'\nimport {\n  type ReadContractErrorType,\n  type ReadContractParameters,\n  readContract,\n} from './readContract.js'\n\nexport type GetEip712DomainParameters = {\n  address: Address\n} & Pick<ReadContractParameters, 'factory' | 'factoryData'>\n\nexport type GetEip712DomainReturnType = {\n  domain: RequiredBy<\n    TypedDataDomain,\n    'chainId' | 'name' | 'verifyingContract' | 'version'\n  >\n  fields: Hex\n  extensions: readonly bigint[]\n}\n\nexport type GetEip712DomainErrorType =\n  | Eip712DomainNotFoundErrorType\n  | ReadContractErrorType\n  | ErrorType\n\n/**\n * Reads the EIP-712 domain from a contract, based on the ERC-5267 specification.\n *\n * @param client - A {@link Client} instance.\n * @param parameters - The parameters of the action. {@link GetEip712DomainParameters}\n * @returns The EIP-712 domain, fields, and extensions. {@link GetEip712DomainReturnType}\n *\n * @example\n * ```ts\n * import { createPublicClient, http, getEip712Domain } from 'viem'\n * import { mainnet } from 'viem/chains'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n *\n * const domain = await getEip712Domain(client, {\n *   address: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\n * })\n * // {\n * //   domain: {\n * //     name: 'ExampleContract',\n * //     version: '1',\n * //     chainId: 1,\n * //     verifyingContract: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\n * //   },\n * //   fields: '0x0f',\n * //   extensions: [],\n * // }\n * ```\n */\nexport async function getEip712Domain(\n  client: Client<Transport>,\n  parameters: GetEip712DomainParameters,\n): Promise<GetEip712DomainReturnType> {\n  const { address, factory, factoryData } = parameters\n\n  try {\n    const [\n      fields,\n      name,\n      version,\n      chainId,\n      verifyingContract,\n      salt,\n      extensions,\n    ] = await getAction(\n      client,\n      readContract,\n      'readContract',\n    )({\n      abi,\n      address,\n      functionName: 'eip712Domain',\n      factory,\n      factoryData,\n    })\n\n    return {\n      domain: {\n        name,\n        version,\n        chainId: Number(chainId),\n        verifyingContract,\n        salt,\n      },\n      extensions,\n      fields,\n    }\n  } catch (e) {\n    const error = e as ReadContractErrorType\n    if (\n      error.name === 'ContractFunctionExecutionError' &&\n      error.cause.name === 'ContractFunctionZeroDataError'\n    ) {\n      throw new Eip712DomainNotFoundError({ address })\n    }\n    throw error\n  }\n}\n\nconst abi = [\n  {\n    inputs: [],\n    name: 'eip712Domain',\n    outputs: [\n      { name: 'fields', type: 'bytes1' },\n      { name: 'name', type: 'string' },\n      { name: 'version', type: 'string' },\n      { name: 'chainId', type: 'uint256' },\n      { name: 'verifyingContract', type: 'address' },\n      { name: 'salt', type: 'bytes32' },\n      { name: 'extensions', type: 'uint256[]' },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n] as const\n"],"names":[],"mappings":";;;;;;;;;;AAmEO,eAAe,gBACpB,MAAyB,EACzB,UAAqC;IAErC,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,WAAW,EAAE,GAAG;IAE1C,IAAI;QACF,MAAM,CACJ,QACA,MACA,SACA,SACA,mBACA,MACA,WACD,GAAG,MAAM,CAAA,GAAA,8IAAA,CAAA,YAAS,AAAT,EACR,QACA,6JAAA,CAAA,eAAY,EACZ,gBACA;YACA;YACA;YACA,cAAc;YACd;YACA;;QAGF,OAAO;YACL,QAAQ;gBACN;gBACA;gBACA,SAAS,OAAO;gBAChB;gBACA;;YAEF;YACA;;IAEJ,EAAE,OAAO,GAAG;QACV,MAAM,QAAQ;QACd,IACE,MAAM,IAAI,KAAK,oCACf,MAAM,KAAK,CAAC,IAAI,KAAK,iCACrB;YACA,MAAM,IAAI,4IAAA,CAAA,4BAAyB,CAAC;gBAAE;YAAO;QAC/C;QACA,MAAM;IACR;AACF;AAEA,MAAM,MAAM;IACV;QACE,QAAQ,EAAE;QACV,MAAM;QACN,SAAS;YACP;gBAAE,MAAM;gBAAU,MAAM;YAAQ;YAChC;gBAAE,MAAM;gBAAQ,MAAM;YAAQ;YAC9B;gBAAE,MAAM;gBAAW,MAAM;YAAQ;YACjC;gBAAE,MAAM;gBAAW,MAAM;YAAS;YAClC;gBAAE,MAAM;gBAAqB,MAAM;YAAS;YAC5C;gBAAE,MAAM;gBAAQ,MAAM;YAAS;YAC/B;gBAAE,MAAM;gBAAc,MAAM;YAAW;SACxC;QACD,iBAAiB;QACjB,MAAM;;CAEA"}},
    {"offset": {"line": 9971, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9976, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/formatters/feeHistory.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\nimport type { FeeHistory } from '../../types/fee.js'\nimport type { RpcFeeHistory } from '../../types/rpc.js'\n\nexport type FormatFeeHistoryErrorType = ErrorType\n\nexport function formatFeeHistory(feeHistory: RpcFeeHistory): FeeHistory {\n  return {\n    baseFeePerGas: feeHistory.baseFeePerGas.map((value) => BigInt(value)),\n    gasUsedRatio: feeHistory.gasUsedRatio,\n    oldestBlock: BigInt(feeHistory.oldestBlock),\n    reward: feeHistory.reward?.map((reward) =>\n      reward.map((value) => BigInt(value)),\n    ),\n  }\n}\n"],"names":[],"mappings":";;;AAMM,SAAU,iBAAiB,UAAyB;IACxD,OAAO;QACL,eAAe,WAAW,aAAa,CAAC,GAAG,CAAC,CAAC,QAAU,OAAO;QAC9D,cAAc,WAAW,YAAY;QACrC,aAAa,OAAO,WAAW,WAAW;QAC1C,QAAQ,WAAW,MAAM,EAAE,IAAI,CAAC,SAC9B,OAAO,GAAG,CAAC,CAAC,QAAU,OAAO;;AAGnC"}},
    {"offset": {"line": 9987, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9992, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/actions/public/getFeeHistory.ts"],"sourcesContent":["import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { FeeHistory } from '../../types/fee.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\nimport {\n  type FormatFeeHistoryErrorType,\n  formatFeeHistory,\n} from '../../utils/formatters/feeHistory.js'\n\nexport type GetFeeHistoryParameters = {\n  /**\n   * Number of blocks in the requested range. Between 1 and 1024 blocks can be requested in a single query. Less than requested may be returned if not all blocks are available.\n   */\n  blockCount: number\n  /**\n   * A monotonically increasing list of percentile values to sample from each block's effective priority fees per gas in ascending order, weighted by gas used.\n   */\n  rewardPercentiles: number[]\n} & (\n  | {\n      blockNumber?: undefined\n      /**\n       * Highest number block of the requested range.\n       * @default 'latest'\n       */\n      blockTag?: BlockTag | undefined\n    }\n  | {\n      /** Highest number block of the requested range. */\n      blockNumber?: bigint | undefined\n      blockTag?: undefined\n    }\n)\nexport type GetFeeHistoryReturnType = FeeHistory\n\nexport type GetFeeHistoryErrorType =\n  | NumberToHexErrorType\n  | RequestErrorType\n  | FormatFeeHistoryErrorType\n\n/**\n * Returns a collection of historical gas information.\n *\n * - Docs: https://viem.sh/docs/actions/public/getFeeHistory\n * - JSON-RPC Methods: [`eth_feeHistory`](https://docs.alchemy.com/reference/eth-feehistory)\n *\n * @param client - Client to use\n * @param parameters - {@link GetFeeHistoryParameters}\n * @returns The gas estimate (in wei). {@link GetFeeHistoryReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getFeeHistory } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const feeHistory = await getFeeHistory(client, {\n *   blockCount: 4,\n *   rewardPercentiles: [25, 75],\n * })\n */\nexport async function getFeeHistory<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n  {\n    blockCount,\n    blockNumber,\n    blockTag = 'latest',\n    rewardPercentiles,\n  }: GetFeeHistoryParameters,\n): Promise<GetFeeHistoryReturnType> {\n  const blockNumberHex = blockNumber ? numberToHex(blockNumber) : undefined\n  const feeHistory = await client.request(\n    {\n      method: 'eth_feeHistory',\n      params: [\n        numberToHex(blockCount),\n        blockNumberHex || blockTag,\n        rewardPercentiles,\n      ],\n    },\n    { dedupe: Boolean(blockNumberHex) },\n  )\n  return formatFeeHistory(feeHistory)\n}\n"],"names":[],"mappings":";;;;;;;;AAsEO,eAAe,cACpB,MAAgC,EAChC,EACE,UAAU,EACV,WAAW,EACX,WAAW,QAAQ,EACnB,iBAAiB,EACO;IAE1B,MAAM,iBAAiB,cAAc,CAAA,GAAA,sJAAA,CAAA,cAAW,AAAX,EAAY,eAAe;IAChE,MAAM,aAAa,MAAM,OAAO,OAAO,CACrC;QACE,QAAQ;QACR,QAAQ;YACN,CAAA,GAAA,sJAAA,CAAA,cAAW,AAAX,EAAY;YACZ,kBAAkB;YAClB;SACD;OAEH;QAAE,QAAQ,QAAQ;IAAe;IAEnC,OAAO,CAAA,GAAA,6JAAA,CAAA,mBAAgB,AAAhB,EAAiB;AAC1B"}},
    {"offset": {"line": 10014, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10019, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/actions/public/getFilterChanges.ts"],"sourcesContent":["import type { Abi, AbiEvent, ExtractAbiEvent } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { RpcLog } from '../../index.js'\nimport type { BlockNumber, BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Filter, FilterType } from '../../types/filter.js'\nimport type { Log } from '../../types/log.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { DecodeEventLogErrorType } from '../../utils/abi/decodeEventLog.js'\nimport { parseEventLogs } from '../../utils/abi/parseEventLogs.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type FormatLogErrorType,\n  formatLog,\n} from '../../utils/formatters/log.js'\n\nexport type GetFilterChangesParameters<\n  filterType extends FilterType = FilterType,\n  abi extends Abi | readonly unknown[] | undefined = undefined,\n  eventName extends string | undefined = undefined,\n  strict extends boolean | undefined = undefined,\n  fromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  toBlock extends BlockNumber | BlockTag | undefined = undefined,\n> = {\n  filter: Filter<filterType, abi, eventName, any, strict, fromBlock, toBlock>\n}\n\nexport type GetFilterChangesReturnType<\n  filterType extends FilterType = FilterType,\n  abi extends Abi | readonly unknown[] | undefined = undefined,\n  eventName extends string | undefined = undefined,\n  strict extends boolean | undefined = undefined,\n  fromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  toBlock extends BlockNumber | BlockTag | undefined = undefined,\n  _AbiEvent extends AbiEvent | undefined = abi extends Abi\n    ? eventName extends string\n      ? ExtractAbiEvent<abi, eventName>\n      : undefined\n    : undefined,\n  _Pending extends boolean =\n    | (fromBlock extends 'pending' ? true : false)\n    | (toBlock extends 'pending' ? true : false),\n> = filterType extends 'event'\n  ? Log<bigint, number, _Pending, _AbiEvent, strict, abi, eventName>[]\n  : Hash[]\n\nexport type GetFilterChangesErrorType =\n  | RequestErrorType\n  | DecodeEventLogErrorType\n  | FormatLogErrorType\n  | ErrorType\n\n/**\n * Returns a list of logs or hashes based on a [Filter](/docs/glossary/terms#filter) since the last time it was called.\n *\n * - Docs: https://viem.sh/docs/actions/public/getFilterChanges\n * - JSON-RPC Methods: [`eth_getFilterChanges`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getfilterchanges)\n *\n * A Filter can be created from the following actions:\n *\n * - [`createBlockFilter`](https://viem.sh/docs/actions/public/createBlockFilter)\n * - [`createContractEventFilter`](https://viem.sh/docs/contract/createContractEventFilter)\n * - [`createEventFilter`](https://viem.sh/docs/actions/public/createEventFilter)\n * - [`createPendingTransactionFilter`](https://viem.sh/docs/actions/public/createPendingTransactionFilter)\n *\n * Depending on the type of filter, the return value will be different:\n *\n * - If the filter was created with `createContractEventFilter` or `createEventFilter`, it returns a list of logs.\n * - If the filter was created with `createPendingTransactionFilter`, it returns a list of transaction hashes.\n * - If the filter was created with `createBlockFilter`, it returns a list of block hashes.\n *\n * @param client - Client to use\n * @param parameters - {@link GetFilterChangesParameters}\n * @returns Logs or hashes. {@link GetFilterChangesReturnType}\n *\n * @example\n * // Blocks\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createBlockFilter, getFilterChanges } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const filter = await createBlockFilter(client)\n * const hashes = await getFilterChanges(client, { filter })\n *\n * @example\n * // Contract Events\n * import { createPublicClient, http, parseAbi } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createContractEventFilter, getFilterChanges } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const filter = await createContractEventFilter(client, {\n *   address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n *   abi: parseAbi(['event Transfer(address indexed, address indexed, uint256)']),\n *   eventName: 'Transfer',\n * })\n * const logs = await getFilterChanges(client, { filter })\n *\n * @example\n * // Raw Events\n * import { createPublicClient, http, parseAbiItem } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createEventFilter, getFilterChanges } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const filter = await createEventFilter(client, {\n *   address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n *   event: parseAbiItem('event Transfer(address indexed, address indexed, uint256)'),\n * })\n * const logs = await getFilterChanges(client, { filter })\n *\n * @example\n * // Transactions\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createPendingTransactionFilter, getFilterChanges } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const filter = await createPendingTransactionFilter(client)\n * const hashes = await getFilterChanges(client, { filter })\n */\nexport async function getFilterChanges<\n  transport extends Transport,\n  chain extends Chain | undefined,\n  filterType extends FilterType,\n  const abi extends Abi | readonly unknown[] | undefined,\n  eventName extends string | undefined,\n  strict extends boolean | undefined = undefined,\n  fromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  toBlock extends BlockNumber | BlockTag | undefined = undefined,\n>(\n  _client: Client<transport, chain>,\n  {\n    filter,\n  }: GetFilterChangesParameters<\n    filterType,\n    abi,\n    eventName,\n    strict,\n    fromBlock,\n    toBlock\n  >,\n): Promise<\n  GetFilterChangesReturnType<\n    filterType,\n    abi,\n    eventName,\n    strict,\n    fromBlock,\n    toBlock\n  >\n> {\n  const strict = 'strict' in filter && filter.strict\n\n  const logs = await filter.request({\n    method: 'eth_getFilterChanges',\n    params: [filter.id],\n  })\n\n  if (typeof logs[0] === 'string')\n    return logs as GetFilterChangesReturnType<\n      filterType,\n      abi,\n      eventName,\n      strict,\n      fromBlock,\n      toBlock\n    >\n\n  const formattedLogs = logs.map((log) => formatLog(log as RpcLog))\n  if (!('abi' in filter) || !filter.abi)\n    return formattedLogs as GetFilterChangesReturnType<\n      filterType,\n      abi,\n      eventName,\n      strict,\n      fromBlock,\n      toBlock\n    >\n  return parseEventLogs({\n    abi: filter.abi,\n    logs: formattedLogs,\n    strict,\n  }) as unknown as GetFilterChangesReturnType<\n    filterType,\n    abi,\n    eventName,\n    strict,\n    fromBlock,\n    toBlock\n  >\n}\n"],"names":[],"mappings":";;;;;;;;AAyIO,eAAe,iBAUpB,OAAiC,EACjC,EACE,MAAM,EAQP;IAWD,MAAM,SAAS,YAAY,UAAU,OAAO,MAAM;IAElD,MAAM,OAAO,MAAM,OAAO,OAAO,CAAC;QAChC,QAAQ;QACR,QAAQ;YAAC,OAAO,EAAE;SAAC;;IAGrB,IAAI,OAAO,IAAI,CAAC,EAAE,KAAK,UACrB,OAAO;IAST,MAAM,gBAAgB,KAAK,GAAG,CAAC,CAAC,MAAQ,CAAA,GAAA,sJAAA,CAAA,YAAS,AAAT,EAAU;IAClD,IAAI,CAAC,CAAC,SAAS,MAAM,KAAK,CAAC,OAAO,GAAG,EACnC,OAAO;IAQT,OAAO,CAAA,GAAA,0JAAA,CAAA,iBAAc,AAAd,EAAe;QACpB,KAAK,OAAO,GAAG;QACf,MAAM;QACN;;AASJ"}},
    {"offset": {"line": 10044, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10049, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/actions/public/getFilterLogs.ts"],"sourcesContent":["import type { Abi, AbiEvent, ExtractAbiEvent } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockNumber, BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Filter } from '../../types/filter.js'\nimport type { Log } from '../../types/log.js'\nimport type { DecodeEventLogErrorType } from '../../utils/abi/decodeEventLog.js'\nimport { parseEventLogs } from '../../utils/abi/parseEventLogs.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type FormatLogErrorType,\n  formatLog,\n} from '../../utils/formatters/log.js'\n\nexport type GetFilterLogsParameters<\n  abi extends Abi | readonly unknown[] | undefined = undefined,\n  eventName extends string | undefined = undefined,\n  strict extends boolean | undefined = undefined,\n  fromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  toBlock extends BlockNumber | BlockTag | undefined = undefined,\n> = {\n  filter: Filter<'event', abi, eventName, any, strict, fromBlock, toBlock>\n}\nexport type GetFilterLogsReturnType<\n  abi extends Abi | readonly unknown[] | undefined = undefined,\n  eventName extends string | undefined = undefined,\n  strict extends boolean | undefined = undefined,\n  fromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  toBlock extends BlockNumber | BlockTag | undefined = undefined,\n  _AbiEvent extends AbiEvent | undefined = abi extends Abi\n    ? eventName extends string\n      ? ExtractAbiEvent<abi, eventName>\n      : undefined\n    : undefined,\n  _Pending extends boolean =\n    | (fromBlock extends 'pending' ? true : false)\n    | (toBlock extends 'pending' ? true : false),\n> = Log<bigint, number, _Pending, _AbiEvent, strict, abi, eventName>[]\n\nexport type GetFilterLogsErrorType =\n  | RequestErrorType\n  | DecodeEventLogErrorType\n  | FormatLogErrorType\n  | ErrorType\n\n/**\n * Returns a list of event logs since the filter was created.\n *\n * - Docs: https://viem.sh/docs/actions/public/getFilterLogs\n * - JSON-RPC Methods: [`eth_getFilterLogs`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getfilterlogs)\n *\n * `getFilterLogs` is only compatible with **event filters**.\n *\n * @param client - Client to use\n * @param parameters - {@link GetFilterLogsParameters}\n * @returns A list of event logs. {@link GetFilterLogsReturnType}\n *\n * @example\n * import { createPublicClient, http, parseAbiItem } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createEventFilter, getFilterLogs } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const filter = await createEventFilter(client, {\n *   address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n *   event: parseAbiItem('event Transfer(address indexed, address indexed, uint256)'),\n * })\n * const logs = await getFilterLogs(client, { filter })\n */\nexport async function getFilterLogs<\n  chain extends Chain | undefined,\n  const abi extends Abi | readonly unknown[] | undefined,\n  eventName extends string | undefined,\n  strict extends boolean | undefined = undefined,\n  fromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  toBlock extends BlockNumber | BlockTag | undefined = undefined,\n>(\n  _client: Client<Transport, chain>,\n  {\n    filter,\n  }: GetFilterLogsParameters<abi, eventName, strict, fromBlock, toBlock>,\n): Promise<\n  GetFilterLogsReturnType<abi, eventName, strict, fromBlock, toBlock>\n> {\n  const strict = filter.strict ?? false\n\n  const logs = await filter.request({\n    method: 'eth_getFilterLogs',\n    params: [filter.id],\n  })\n\n  const formattedLogs = logs.map((log) => formatLog(log))\n  if (!filter.abi)\n    return formattedLogs as GetFilterLogsReturnType<\n      abi,\n      eventName,\n      strict,\n      fromBlock,\n      toBlock\n    >\n  return parseEventLogs({\n    abi: filter.abi,\n    logs: formattedLogs,\n    strict,\n  }) as unknown as GetFilterLogsReturnType<\n    abi,\n    eventName,\n    strict,\n    fromBlock,\n    toBlock\n  >\n}\n"],"names":[],"mappings":";;;;;;;;AA4EO,eAAe,cAQpB,OAAiC,EACjC,EACE,MAAM,EAC8D;IAItE,MAAM,SAAS,OAAO,MAAM,IAAI;IAEhC,MAAM,OAAO,MAAM,OAAO,OAAO,CAAC;QAChC,QAAQ;QACR,QAAQ;YAAC,OAAO,EAAE;SAAC;;IAGrB,MAAM,gBAAgB,KAAK,GAAG,CAAC,CAAC,MAAQ,CAAA,GAAA,sJAAA,CAAA,YAAS,AAAT,EAAU;IAClD,IAAI,CAAC,OAAO,GAAG,EACb,OAAO;IAOT,OAAO,CAAA,GAAA,0JAAA,CAAA,iBAAc,AAAd,EAAe;QACpB,KAAK,OAAO,GAAG;QACf,MAAM;QACN;;AAQJ"}},
    {"offset": {"line": 10073, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10078, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/formatters/proof.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\nimport type { Proof } from '../../types/proof.js'\nimport type { RpcProof } from '../../types/rpc.js'\nimport type { ExactPartial } from '../../types/utils.js'\nimport { hexToNumber } from '../index.js'\n\nexport type FormatProofErrorType = ErrorType\n\nfunction formatStorageProof(storageProof: RpcProof['storageProof']) {\n  return storageProof.map((proof) => ({\n    ...proof,\n    value: BigInt(proof.value),\n  }))\n}\n\nexport function formatProof(proof: ExactPartial<RpcProof>) {\n  return {\n    ...proof,\n    balance: proof.balance ? BigInt(proof.balance) : undefined,\n    nonce: proof.nonce ? hexToNumber(proof.nonce) : undefined,\n    storageProof: proof.storageProof\n      ? formatStorageProof(proof.storageProof)\n      : undefined,\n  } as Proof\n}\n"],"names":[],"mappings":";;;;;;AAQA,SAAS,mBAAmB,YAAsC;IAChE,OAAO,aAAa,GAAG,CAAC,CAAC,QAAU,CAAC;YAClC,GAAG,KAAK;YACR,OAAO,OAAO,MAAM,KAAK;SAC1B;AACH;AAEM,SAAU,YAAY,KAA6B;IACvD,OAAO;QACL,GAAG,KAAK;QACR,SAAS,MAAM,OAAO,GAAG,OAAO,MAAM,OAAO,IAAI;QACjD,OAAO,MAAM,KAAK,GAAG,CAAA,GAAA,wJAAA,CAAA,cAAW,AAAX,EAAY,MAAM,KAAK,IAAI;QAChD,cAAc,MAAM,YAAY,GAC5B,mBAAmB,MAAM,YAAY,IACrC;;AAER"}},
    {"offset": {"line": 10098, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10103, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/actions/public/getProof.ts"],"sourcesContent":["import type { Address } from 'abitype'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { Proof } from '../../types/proof.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\nimport {\n  type FormatProofErrorType,\n  formatProof,\n} from '../../utils/formatters/proof.js'\n\nexport type GetProofParameters = {\n  /** Account address. */\n  address: Address\n  /** Array of storage-keys that should be proofed and included. */\n  storageKeys: Hash[]\n} & (\n  | {\n      /** The block number. */\n      blockNumber?: bigint | undefined\n      blockTag?: undefined\n    }\n  | {\n      blockNumber?: undefined\n      /**\n       * The block tag.\n       * @default 'latest'\n       */\n      blockTag?: BlockTag | undefined\n    }\n)\n\nexport type GetProofReturnType = Proof\n\nexport type GetProofErrorType =\n  | NumberToHexErrorType\n  | FormatProofErrorType\n  | RequestErrorType\n  | ErrorType\n\n/**\n * Returns the account and storage values of the specified account including the Merkle-proof.\n *\n * - Docs: https://viem.sh/docs/actions/public/getProof\n * - JSON-RPC Methods:\n *   - Calls [`eth_getProof`](https://eips.ethereum.org/EIPS/eip-1186)\n *\n * @param client - Client to use\n * @param parameters - {@link GetProofParameters}\n * @returns Proof data. {@link GetProofReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getProof } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const block = await getProof(client, {\n *  address: '0x...',\n *  storageKeys: ['0x...'],\n * })\n */\nexport async function getProof<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n  {\n    address,\n    blockNumber,\n    blockTag: blockTag_,\n    storageKeys,\n  }: GetProofParameters,\n): Promise<GetProofReturnType> {\n  const blockTag = blockTag_ ?? 'latest'\n\n  const blockNumberHex =\n    blockNumber !== undefined ? numberToHex(blockNumber) : undefined\n\n  const proof = await client.request({\n    method: 'eth_getProof',\n    params: [address, storageKeys, blockNumberHex || blockTag],\n  })\n\n  return formatProof(proof)\n}\n"],"names":[],"mappings":";;;;;;;;AAwEO,eAAe,SACpB,MAAgC,EAChC,EACE,OAAO,EACP,WAAW,EACX,UAAU,SAAS,EACnB,WAAW,EACQ;IAErB,MAAM,WAAW,aAAa;IAE9B,MAAM,iBACJ,gBAAgB,YAAY,CAAA,GAAA,sJAAA,CAAA,cAAW,AAAX,EAAY,eAAe;IAEzD,MAAM,QAAQ,MAAM,OAAO,OAAO,CAAC;QACjC,QAAQ;QACR,QAAQ;YAAC;YAAS;YAAa,kBAAkB;SAAS;;IAG5D,OAAO,CAAA,GAAA,wJAAA,CAAA,cAAW,AAAX,EAAY;AACrB"}},
    {"offset": {"line": 10124, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10129, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/actions/public/getStorageAt.ts"],"sourcesContent":["import type { Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\n\nexport type GetStorageAtParameters = {\n  address: Address\n  slot: Hex\n} & (\n  | {\n      blockNumber?: undefined\n      blockTag?: BlockTag | undefined\n    }\n  | {\n      blockNumber?: bigint | undefined\n      blockTag?: undefined\n    }\n)\n\nexport type GetStorageAtReturnType = Hex | undefined\n\nexport type GetStorageAtErrorType =\n  | NumberToHexErrorType\n  | RequestErrorType\n  | ErrorType\n\n/**\n * Returns the value from a storage slot at a given address.\n *\n * - Docs: https://viem.sh/docs/contract/getStorageAt\n * - JSON-RPC Methods: [`eth_getStorageAt`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getstorageat)\n *\n * @param client - Client to use\n * @param parameters - {@link GetStorageAtParameters}\n * @returns The value of the storage slot. {@link GetStorageAtReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getStorageAt } from 'viem/contract'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const code = await getStorageAt(client, {\n *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *   slot: toHex(0),\n * })\n */\nexport async function getStorageAt<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n  { address, blockNumber, blockTag = 'latest', slot }: GetStorageAtParameters,\n): Promise<GetStorageAtReturnType> {\n  const blockNumberHex =\n    blockNumber !== undefined ? numberToHex(blockNumber) : undefined\n  const data = await client.request({\n    method: 'eth_getStorageAt',\n    params: [address, slot, blockNumberHex || blockTag],\n  })\n  return data\n}\n"],"names":[],"mappings":";;;;;;AA2DO,eAAe,aACpB,MAAgC,EAChC,EAAE,OAAO,EAAE,WAAW,EAAE,WAAW,QAAQ,EAAE,IAAI,EAA0B;IAE3E,MAAM,iBACJ,gBAAgB,YAAY,CAAA,GAAA,sJAAA,CAAA,cAAW,AAAX,EAAY,eAAe;IACzD,MAAM,OAAO,MAAM,OAAO,OAAO,CAAC;QAChC,QAAQ;QACR,QAAQ;YAAC;YAAS;YAAM,kBAAkB;SAAS;;IAErD,OAAO;AACT"}},
    {"offset": {"line": 10147, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10152, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/actions/public/getTransaction.ts"],"sourcesContent":["import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport { TransactionNotFoundError } from '../../errors/transaction.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { RpcTransaction } from '../../types/rpc.js'\nimport type { Prettify } from '../../types/utils.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\nimport {\n  type FormattedTransaction,\n  formatTransaction,\n} from '../../utils/formatters/transaction.js'\n\nexport type GetTransactionParameters<blockTag extends BlockTag = 'latest'> =\n  | {\n      /** The block hash */\n      blockHash: Hash\n      blockNumber?: undefined\n      blockTag?: undefined\n      hash?: undefined\n      /** The index of the transaction on the block. */\n      index: number\n    }\n  | {\n      blockHash?: undefined\n      /** The block number */\n      blockNumber: bigint\n      blockTag?: undefined\n      hash?: undefined\n      /** The index of the transaction on the block. */\n      index: number\n    }\n  | {\n      blockHash?: undefined\n      blockNumber?: undefined\n      /** The block tag. */\n      blockTag: blockTag | BlockTag\n      hash?: undefined\n      /** The index of the transaction on the block. */\n      index: number\n    }\n  | {\n      blockHash?: undefined\n      blockNumber?: undefined\n      blockTag?: undefined\n      /** The hash of the transaction. */\n      hash: Hash\n      index?: number | undefined\n    }\n\nexport type GetTransactionReturnType<\n  chain extends Chain | undefined = undefined,\n  blockTag extends BlockTag = 'latest',\n> = Prettify<FormattedTransaction<chain, blockTag>>\n\nexport type GetTransactionErrorType =\n  | NumberToHexErrorType\n  | RequestErrorType\n  | ErrorType\n\n/**\n * Returns information about a [Transaction](https://viem.sh/docs/glossary/terms#transaction) given a hash or block identifier.\n *\n * - Docs: https://viem.sh/docs/actions/public/getTransaction\n * - Example: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions/fetching-transactions\n * - JSON-RPC Methods: [`eth_getTransactionByHash`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionByHash)\n *\n * @param client - Client to use\n * @param parameters - {@link GetTransactionParameters}\n * @returns The transaction information. {@link GetTransactionReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getTransaction } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const transaction = await getTransaction(client, {\n *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n * })\n */\nexport async function getTransaction<\n  chain extends Chain | undefined,\n  blockTag extends BlockTag = 'latest',\n>(\n  client: Client<Transport, chain>,\n  {\n    blockHash,\n    blockNumber,\n    blockTag: blockTag_,\n    hash,\n    index,\n  }: GetTransactionParameters<blockTag>,\n): Promise<GetTransactionReturnType<chain, blockTag>> {\n  const blockTag = blockTag_ || 'latest'\n\n  const blockNumberHex =\n    blockNumber !== undefined ? numberToHex(blockNumber) : undefined\n\n  let transaction: RpcTransaction | null = null\n  if (hash) {\n    transaction = await client.request(\n      {\n        method: 'eth_getTransactionByHash',\n        params: [hash],\n      },\n      { dedupe: true },\n    )\n  } else if (blockHash) {\n    transaction = await client.request(\n      {\n        method: 'eth_getTransactionByBlockHashAndIndex',\n        params: [blockHash, numberToHex(index)],\n      },\n      { dedupe: true },\n    )\n  } else if (blockNumberHex || blockTag) {\n    transaction = await client.request(\n      {\n        method: 'eth_getTransactionByBlockNumberAndIndex',\n        params: [blockNumberHex || blockTag, numberToHex(index)],\n      },\n      { dedupe: Boolean(blockNumberHex) },\n    )\n  }\n\n  if (!transaction)\n    throw new TransactionNotFoundError({\n      blockHash,\n      blockNumber,\n      blockTag,\n      hash,\n      index,\n    })\n\n  const format =\n    client.chain?.formatters?.transaction?.format || formatTransaction\n  return format(transaction)\n}\n"],"names":[],"mappings":";;;;;;;;;;AA0FO,eAAe,eAIpB,MAAgC,EAChC,EACE,SAAS,EACT,WAAW,EACX,UAAU,SAAS,EACnB,IAAI,EACJ,KAAK,EAC8B;IAErC,MAAM,WAAW,aAAa;IAE9B,MAAM,iBACJ,gBAAgB,YAAY,CAAA,GAAA,sJAAA,CAAA,cAAW,AAAX,EAAY,eAAe;IAEzD,IAAI,cAAqC;IACzC,IAAI,MAAM;QACR,cAAc,MAAM,OAAO,OAAO,CAChC;YACE,QAAQ;YACR,QAAQ;gBAAC;aAAK;WAEhB;YAAE,QAAQ;QAAI;IAElB,OAAO,IAAI,WAAW;QACpB,cAAc,MAAM,OAAO,OAAO,CAChC;YACE,QAAQ;YACR,QAAQ;gBAAC;gBAAW,CAAA,GAAA,sJAAA,CAAA,cAAW,AAAX,EAAY;aAAO;WAEzC;YAAE,QAAQ;QAAI;IAElB,OAAO,IAAI,kBAAkB,UAAU;QACrC,cAAc,MAAM,OAAO,OAAO,CAChC;YACE,QAAQ;YACR,QAAQ;gBAAC,kBAAkB;gBAAU,CAAA,GAAA,sJAAA,CAAA,cAAW,AAAX,EAAY;aAAO;WAE1D;YAAE,QAAQ,QAAQ;QAAe;IAErC;IAEA,IAAI,CAAC,aACH,MAAM,IAAI,iJAAA,CAAA,2BAAwB,CAAC;QACjC;QACA;QACA;QACA;QACA;;IAGJ,MAAM,SACJ,OAAO,KAAK,EAAE,YAAY,aAAa,UAAU,8JAAA,CAAA,oBAAiB;IACpE,OAAO,OAAO;AAChB"}},
    {"offset": {"line": 10206, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10211, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/actions/public/getTransactionConfirmations.ts"],"sourcesContent":["import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { FormattedTransactionReceipt } from '../../utils/formatters/transactionReceipt.js'\nimport { getAction } from '../../utils/getAction.js'\n\nimport {\n  type GetBlockNumberErrorType,\n  getBlockNumber,\n} from './getBlockNumber.js'\nimport {\n  type GetTransactionErrorType,\n  getTransaction,\n} from './getTransaction.js'\n\nexport type GetTransactionConfirmationsParameters<\n  chain extends Chain | undefined = Chain,\n> =\n  | {\n      /** The transaction hash. */\n      hash: Hash\n      transactionReceipt?: undefined\n    }\n  | {\n      hash?: undefined\n      /** The transaction receipt. */\n      transactionReceipt: FormattedTransactionReceipt<chain>\n    }\n\nexport type GetTransactionConfirmationsReturnType = bigint\n\nexport type GetTransactionConfirmationsErrorType =\n  | GetBlockNumberErrorType\n  | GetTransactionErrorType\n  | ErrorType\n\n/**\n * Returns the number of blocks passed (confirmations) since the transaction was processed on a block.\n *\n * - Docs: https://viem.sh/docs/actions/public/getTransactionConfirmations\n * - Example: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions/fetching-transactions\n * - JSON-RPC Methods: [`eth_getTransactionConfirmations`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionConfirmations)\n *\n * @param client - Client to use\n * @param parameters - {@link GetTransactionConfirmationsParameters}\n * @returns The number of blocks passed since the transaction was processed. If confirmations is 0, then the Transaction has not been confirmed & processed yet. {@link GetTransactionConfirmationsReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getTransactionConfirmations } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const confirmations = await getTransactionConfirmations(client, {\n *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n * })\n */\nexport async function getTransactionConfirmations<\n  chain extends Chain | undefined,\n>(\n  client: Client<Transport, chain>,\n  { hash, transactionReceipt }: GetTransactionConfirmationsParameters<chain>,\n): Promise<GetTransactionConfirmationsReturnType> {\n  const [blockNumber, transaction] = await Promise.all([\n    getAction(client, getBlockNumber, 'getBlockNumber')({}),\n    hash\n      ? getAction(client, getTransaction, 'getTransaction')({ hash })\n      : undefined,\n  ])\n  const transactionBlockNumber =\n    transactionReceipt?.blockNumber || transaction?.blockNumber\n  if (!transactionBlockNumber) return 0n\n  return blockNumber - transactionBlockNumber! + 1n\n}\n"],"names":[],"mappings":";;;;;;;;;;AA8DO,eAAe,4BAGpB,MAAgC,EAChC,EAAE,IAAI,EAAE,kBAAkB,EAAgD;IAE1E,MAAM,CAAC,aAAa,YAAY,GAAG,MAAM,QAAQ,GAAG,CAAC;QACnD,CAAA,GAAA,8IAAA,CAAA,YAAS,AAAT,EAAU,QAAQ,+JAAA,CAAA,iBAAc,EAAE,kBAAkB,CAAA;QACpD,OACI,CAAA,GAAA,8IAAA,CAAA,YAAS,AAAT,EAAU,QAAQ,+JAAA,CAAA,iBAAc,EAAE,kBAAkB;YAAE;QAAI,KAC1D;KACL;IACD,MAAM,yBACJ,oBAAoB,eAAe,aAAa;IAClD,IAAI,CAAC,wBAAwB,OAAO,EAAE;IACtC,OAAO,cAAc,yBAA0B,EAAE;AACnD"}},
    {"offset": {"line": 10232, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10237, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/formatters/transactionReceipt.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\nimport type {\n  Chain,\n  ExtractChainFormatterReturnType,\n} from '../../types/chain.js'\nimport type { RpcTransactionReceipt } from '../../types/rpc.js'\nimport type { TransactionReceipt } from '../../types/transaction.js'\nimport type { ExactPartial } from '../../types/utils.js'\nimport { hexToNumber } from '../encoding/fromHex.js'\n\nimport { type DefineFormatterErrorType, defineFormatter } from './formatter.js'\nimport { formatLog } from './log.js'\nimport { transactionType } from './transaction.js'\n\nexport type FormattedTransactionReceipt<\n  chain extends Chain | undefined = undefined,\n> = ExtractChainFormatterReturnType<\n  chain,\n  'transactionReceipt',\n  TransactionReceipt\n>\n\nexport const receiptStatuses = {\n  '0x0': 'reverted',\n  '0x1': 'success',\n} as const\n\nexport type FormatTransactionReceiptErrorType = ErrorType\n\nexport function formatTransactionReceipt(\n  transactionReceipt: ExactPartial<RpcTransactionReceipt>,\n) {\n  const receipt = {\n    ...transactionReceipt,\n    blockNumber: transactionReceipt.blockNumber\n      ? BigInt(transactionReceipt.blockNumber)\n      : null,\n    contractAddress: transactionReceipt.contractAddress\n      ? transactionReceipt.contractAddress\n      : null,\n    cumulativeGasUsed: transactionReceipt.cumulativeGasUsed\n      ? BigInt(transactionReceipt.cumulativeGasUsed)\n      : null,\n    effectiveGasPrice: transactionReceipt.effectiveGasPrice\n      ? BigInt(transactionReceipt.effectiveGasPrice)\n      : null,\n    gasUsed: transactionReceipt.gasUsed\n      ? BigInt(transactionReceipt.gasUsed)\n      : null,\n    logs: transactionReceipt.logs\n      ? transactionReceipt.logs.map((log) => formatLog(log))\n      : null,\n    to: transactionReceipt.to ? transactionReceipt.to : null,\n    transactionIndex: transactionReceipt.transactionIndex\n      ? hexToNumber(transactionReceipt.transactionIndex)\n      : null,\n    status: transactionReceipt.status\n      ? receiptStatuses[transactionReceipt.status]\n      : null,\n    type: transactionReceipt.type\n      ? transactionType[\n          transactionReceipt.type as keyof typeof transactionType\n        ] || transactionReceipt.type\n      : null,\n  } as TransactionReceipt\n\n  if (transactionReceipt.blobGasPrice)\n    receipt.blobGasPrice = BigInt(transactionReceipt.blobGasPrice)\n  if (transactionReceipt.blobGasUsed)\n    receipt.blobGasUsed = BigInt(transactionReceipt.blobGasUsed)\n\n  return receipt\n}\n\nexport type DefineTransactionReceiptErrorType =\n  | DefineFormatterErrorType\n  | ErrorType\n\nexport const defineTransactionReceipt = /*#__PURE__*/ defineFormatter(\n  'transactionReceipt',\n  formatTransactionReceipt,\n)\n"],"names":[],"mappings":";;;;;;;;;;;;;;AAsBO,MAAM,kBAAkB;IAC7B,OAAO;IACP,OAAO;;AAKH,SAAU,yBACd,kBAAuD;IAEvD,MAAM,UAAU;QACd,GAAG,kBAAkB;QACrB,aAAa,mBAAmB,WAAW,GACvC,OAAO,mBAAmB,WAAW,IACrC;QACJ,iBAAiB,mBAAmB,eAAe,GAC/C,mBAAmB,eAAe,GAClC;QACJ,mBAAmB,mBAAmB,iBAAiB,GACnD,OAAO,mBAAmB,iBAAiB,IAC3C;QACJ,mBAAmB,mBAAmB,iBAAiB,GACnD,OAAO,mBAAmB,iBAAiB,IAC3C;QACJ,SAAS,mBAAmB,OAAO,GAC/B,OAAO,mBAAmB,OAAO,IACjC;QACJ,MAAM,mBAAmB,IAAI,GACzB,mBAAmB,IAAI,CAAC,GAAG,CAAC,CAAC,MAAQ,CAAA,GAAA,sJAAA,CAAA,YAAS,AAAT,EAAU,QAC/C;QACJ,IAAI,mBAAmB,EAAE,GAAG,mBAAmB,EAAE,GAAG;QACpD,kBAAkB,mBAAmB,gBAAgB,GACjD,CAAA,GAAA,wJAAA,CAAA,cAAW,AAAX,EAAY,mBAAmB,gBAAgB,IAC/C;QACJ,QAAQ,mBAAmB,MAAM,GAC7B,eAAe,CAAC,mBAAmB,MAAM,CAAC,GAC1C;QACJ,MAAM,mBAAmB,IAAI,GACzB,8JAAA,CAAA,kBAAe,CACb,mBAAmB,IAAoC,CACxD,IAAI,mBAAmB,IAAI,GAC5B;;IAGN,IAAI,mBAAmB,YAAY,EACjC,QAAQ,YAAY,GAAG,OAAO,mBAAmB,YAAY;IAC/D,IAAI,mBAAmB,WAAW,EAChC,QAAQ,WAAW,GAAG,OAAO,mBAAmB,WAAW;IAE7D,OAAO;AACT;AAMO,MAAM,2BAA2B,WAAA,GAAc,CAAA,GAAA,4JAAA,CAAA,kBAAe,AAAf,EACpD,sBACA"}},
    {"offset": {"line": 10274, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10279, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/actions/public/getTransactionReceipt.ts"],"sourcesContent":["import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport {\n  TransactionReceiptNotFoundError,\n  type TransactionReceiptNotFoundErrorType,\n} from '../../errors/transaction.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type FormattedTransactionReceipt,\n  formatTransactionReceipt,\n} from '../../utils/formatters/transactionReceipt.js'\n\nexport type GetTransactionReceiptParameters = {\n  /** The hash of the transaction. */\n  hash: Hash\n}\n\nexport type GetTransactionReceiptReturnType<\n  chain extends Chain | undefined = undefined,\n> = FormattedTransactionReceipt<chain>\n\nexport type GetTransactionReceiptErrorType =\n  | RequestErrorType\n  | TransactionReceiptNotFoundErrorType\n  | ErrorType\n\n/**\n * Returns the [Transaction Receipt](https://viem.sh/docs/glossary/terms#transaction-receipt) given a [Transaction](https://viem.sh/docs/glossary/terms#transaction) hash.\n *\n * - Docs: https://viem.sh/docs/actions/public/getTransactionReceipt\n * - Example: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions/fetching-transactions\n * - JSON-RPC Methods: [`eth_getTransactionReceipt`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_gettransactionreceipt)\n *\n * @param client - Client to use\n * @param parameters - {@link GetTransactionReceiptParameters}\n * @returns The transaction receipt. {@link GetTransactionReceiptReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getTransactionReceipt } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const transactionReceipt = await getTransactionReceipt(client, {\n *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n * })\n */\nexport async function getTransactionReceipt<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n  { hash }: GetTransactionReceiptParameters,\n) {\n  const receipt = await client.request(\n    {\n      method: 'eth_getTransactionReceipt',\n      params: [hash],\n    },\n    { dedupe: true },\n  )\n\n  if (!receipt) throw new TransactionReceiptNotFoundError({ hash })\n\n  const format =\n    client.chain?.formatters?.transactionReceipt?.format ||\n    formatTransactionReceipt\n  return format(receipt) as GetTransactionReceiptReturnType<chain>\n}\n"],"names":[],"mappings":";;;;;;;;AAqDO,eAAe,sBACpB,MAAgC,EAChC,EAAE,IAAI,EAAmC;IAEzC,MAAM,UAAU,MAAM,OAAO,OAAO,CAClC;QACE,QAAQ;QACR,QAAQ;YAAC;SAAK;OAEhB;QAAE,QAAQ;IAAI;IAGhB,IAAI,CAAC,SAAS,MAAM,IAAI,iJAAA,CAAA,kCAA+B,CAAC;QAAE;IAAI;IAE9D,MAAM,SACJ,OAAO,KAAK,EAAE,YAAY,oBAAoB,UAC9C,qKAAA,CAAA,2BAAwB;IAC1B,OAAO,OAAO;AAChB"}},
    {"offset": {"line": 10302, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10307, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/actions/public/simulateContract.ts"],"sourcesContent":["import type { Abi, AbiFunction, AbiStateMutability, Address } from 'abitype'\n\nimport {\n  type ParseAccountErrorType,\n  parseAccount,\n} from '../../accounts/utils/parseAccount.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { BaseError } from '../../errors/base.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account, ParseAccount } from '../../types/account.js'\nimport type { Chain, DeriveChain } from '../../types/chain.js'\nimport type {\n  ContractFunctionArgs,\n  ContractFunctionName,\n  ContractFunctionParameters,\n  ContractFunctionReturnType,\n  ExtractAbiFunctionForArgs,\n} from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport type {\n  IsNarrowable,\n  NoInfer,\n  Prettify,\n  UnionEvaluate,\n  UnionOmit,\n} from '../../types/utils.js'\nimport {\n  type DecodeFunctionResultErrorType,\n  decodeFunctionResult,\n} from '../../utils/abi/decodeFunctionResult.js'\nimport {\n  type EncodeFunctionDataErrorType,\n  encodeFunctionData,\n} from '../../utils/abi/encodeFunctionData.js'\nimport {\n  type GetContractErrorReturnType,\n  getContractError,\n} from '../../utils/errors/getContractError.js'\nimport type { WriteContractParameters } from '../wallet/writeContract.js'\n\nimport type { TransactionRequest } from '../../types/transaction.js'\nimport { getAction } from '../../utils/getAction.js'\nimport { type CallErrorType, type CallParameters, call } from './call.js'\n\nexport type GetMutabilityAwareValue<\n  abi extends Abi | readonly unknown[],\n  mutability extends AbiStateMutability = AbiStateMutability,\n  functionName extends ContractFunctionName<\n    abi,\n    mutability\n  > = ContractFunctionName<abi, mutability>,\n  valueType = TransactionRequest['value'],\n  args extends ContractFunctionArgs<\n    abi,\n    mutability,\n    functionName\n  > = ContractFunctionArgs<abi, mutability, functionName>,\n  abiFunction extends AbiFunction = abi extends Abi\n    ? ExtractAbiFunctionForArgs<abi, mutability, functionName, args>\n    : AbiFunction,\n  _Narrowable extends boolean = IsNarrowable<abi, Abi>,\n> = _Narrowable extends true\n  ? abiFunction['stateMutability'] extends 'payable'\n    ? { value?: NoInfer<valueType> | undefined }\n    : abiFunction['payable'] extends true\n      ? { value?: NoInfer<valueType> | undefined }\n      : { value?: undefined }\n  : { value?: NoInfer<valueType> | undefined }\n\nexport type SimulateContractParameters<\n  abi extends Abi | readonly unknown[] = Abi,\n  functionName extends ContractFunctionName<\n    abi,\n    'nonpayable' | 'payable'\n  > = ContractFunctionName<abi, 'nonpayable' | 'payable'>,\n  args extends ContractFunctionArgs<\n    abi,\n    'nonpayable' | 'payable',\n    functionName\n  > = ContractFunctionArgs<abi, 'nonpayable' | 'payable', functionName>,\n  chain extends Chain | undefined = Chain | undefined,\n  chainOverride extends Chain | undefined = Chain | undefined,\n  accountOverride extends Account | Address | undefined = undefined,\n  ///\n  derivedChain extends Chain | undefined = DeriveChain<chain, chainOverride>,\n> = {\n  account?: accountOverride | undefined\n  chain?: chainOverride | undefined\n  /** Data to append to the end of the calldata. Useful for adding a [\"domain\" tag](https://opensea.notion.site/opensea/Seaport-Order-Attributions-ec2d69bf455041a5baa490941aad307f). */\n  dataSuffix?: Hex | undefined\n} & ContractFunctionParameters<\n  abi,\n  'nonpayable' | 'payable',\n  functionName,\n  args\n> &\n  UnionOmit<\n    CallParameters<derivedChain>,\n    | 'account'\n    | 'batch'\n    | 'code'\n    | 'to'\n    | 'data'\n    | 'factory'\n    | 'factoryData'\n    | 'value'\n  > &\n  GetMutabilityAwareValue<\n    abi,\n    'nonpayable' | 'payable',\n    functionName,\n    CallParameters<derivedChain> extends CallParameters\n      ? CallParameters<derivedChain>['value']\n      : CallParameters['value'],\n    args\n  >\n\nexport type SimulateContractReturnType<\n  out abi extends Abi | readonly unknown[] = Abi,\n  in out functionName extends ContractFunctionName<\n    abi,\n    'nonpayable' | 'payable'\n  > = ContractFunctionName<abi, 'nonpayable' | 'payable'>,\n  in out args extends ContractFunctionArgs<\n    abi,\n    'nonpayable' | 'payable',\n    functionName\n  > = ContractFunctionArgs<abi, 'nonpayable' | 'payable', functionName>,\n  /** @ts-expect-error cast variance */\n  out chain extends Chain | undefined = Chain | undefined,\n  out account extends Account | undefined = Account | undefined,\n  out chainOverride extends Chain | undefined = Chain | undefined,\n  out accountOverride extends Account | Address | undefined =\n    | Account\n    | Address\n    | undefined,\n  ///\n  in out minimizedAbi extends Abi = readonly [\n    ExtractAbiFunctionForArgs<\n      abi extends Abi ? abi : Abi,\n      'nonpayable' | 'payable',\n      functionName,\n      args\n    >,\n  ],\n  out resolvedAccount extends Account | undefined = accountOverride extends\n    | Account\n    | Address\n    ? ParseAccount<accountOverride>\n    : account,\n> = {\n  result: ContractFunctionReturnType<\n    minimizedAbi,\n    'nonpayable' | 'payable',\n    functionName,\n    args\n  >\n  request: Prettify<\n    UnionEvaluate<\n      UnionOmit<\n        WriteContractParameters<\n          minimizedAbi,\n          functionName,\n          args,\n          chain,\n          undefined,\n          chainOverride\n        >,\n        'account' | 'abi' | 'args' | 'chain' | 'functionName'\n      >\n    > &\n      ContractFunctionParameters<\n        minimizedAbi,\n        'nonpayable' | 'payable',\n        functionName,\n        args\n      > & {\n        chain: DeriveChain<chain, chainOverride>\n      } & (resolvedAccount extends Account\n        ? { account: resolvedAccount }\n        : { account?: undefined })\n  >\n}\n\nexport type SimulateContractErrorType =\n  | ParseAccountErrorType\n  | EncodeFunctionDataErrorType\n  | GetContractErrorReturnType<CallErrorType | DecodeFunctionResultErrorType>\n  | ErrorType\n\n/**\n * Simulates/validates a contract interaction. This is useful for retrieving **return data** and **revert reasons** of contract write functions.\n *\n * - Docs: https://viem.sh/docs/contract/simulateContract\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/contracts/writing-to-contracts\n *\n * This function does not require gas to execute and _**does not**_ change the state of the blockchain. It is almost identical to [`readContract`](https://viem.sh/docs/contract/readContract), but also supports contract write functions.\n *\n * Internally, uses a [Public Client](https://viem.sh/docs/clients/public) to call the [`call` action](https://viem.sh/docs/actions/public/call) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData).\n *\n * @param client - Client to use\n * @param parameters - {@link SimulateContractParameters}\n * @returns The simulation result and write request. {@link SimulateContractReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { simulateContract } from 'viem/contract'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const result = await simulateContract(client, {\n *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *   abi: parseAbi(['function mint(uint32) view returns (uint32)']),\n *   functionName: 'mint',\n *   args: ['69420'],\n *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n * })\n */\nexport async function simulateContract<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n  const abi extends Abi | readonly unknown[],\n  functionName extends ContractFunctionName<abi, 'nonpayable' | 'payable'>,\n  const args extends ContractFunctionArgs<\n    abi,\n    'nonpayable' | 'payable',\n    functionName\n  >,\n  chainOverride extends Chain | undefined = undefined,\n  accountOverride extends Account | Address | undefined = undefined,\n>(\n  client: Client<Transport, chain, account>,\n  parameters: SimulateContractParameters<\n    abi,\n    functionName,\n    args,\n    chain,\n    chainOverride,\n    accountOverride\n  >,\n): Promise<\n  SimulateContractReturnType<\n    abi,\n    functionName,\n    args,\n    chain,\n    account,\n    chainOverride,\n    accountOverride\n  >\n> {\n  const { abi, address, args, dataSuffix, functionName, ...callRequest } =\n    parameters as SimulateContractParameters\n\n  const account = callRequest.account\n    ? parseAccount(callRequest.account)\n    : client.account\n  const calldata = encodeFunctionData({ abi, args, functionName })\n  try {\n    const { data } = await getAction(\n      client,\n      call,\n      'call',\n    )({\n      batch: false,\n      data: `${calldata}${dataSuffix ? dataSuffix.replace('0x', '') : ''}`,\n      to: address,\n      ...callRequest,\n      account,\n    })\n    const result = decodeFunctionResult({\n      abi,\n      args,\n      functionName,\n      data: data || '0x',\n    })\n    const minimizedAbi = abi.filter(\n      (abiItem) =>\n        'name' in abiItem && abiItem.name === parameters.functionName,\n    )\n    return {\n      result,\n      request: {\n        abi: minimizedAbi,\n        address,\n        args,\n        dataSuffix,\n        functionName,\n        ...callRequest,\n        account,\n      },\n    } as unknown as SimulateContractReturnType<\n      abi,\n      functionName,\n      args,\n      chain,\n      account,\n      chainOverride,\n      accountOverride\n    >\n  } catch (error) {\n    throw getContractError(error as BaseError, {\n      abi,\n      address,\n      args,\n      docsPath: '/docs/contract/simulateContract',\n      functionName,\n      sender: account?.address,\n    })\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;AA8NO,eAAe,iBAapB,MAAyC,EACzC,UAOC;IAYD,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,EAAE,YAAY,EAAE,GAAG,aAAa,GACpE;IAEF,MAAM,UAAU,YAAY,OAAO,GAC/B,CAAA,GAAA,6JAAA,CAAA,eAAY,AAAZ,EAAa,YAAY,OAAO,IAChC,OAAO,OAAO;IAClB,MAAM,WAAW,CAAA,GAAA,8JAAA,CAAA,qBAAkB,AAAlB,EAAmB;QAAE;QAAK;QAAM;IAAY;IAC7D,IAAI;QACF,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,CAAA,GAAA,8IAAA,CAAA,YAAS,AAAT,EACrB,QACA,qJAAA,CAAA,OAAI,EACJ,QACA;YACA,OAAO;YACP,MAAM,CAAA,EAAG,SAAQ,EAAG,aAAa,WAAW,OAAO,CAAC,MAAM,MAAM,GAAE,CAAE;YACpE,IAAI;YACJ,GAAG,WAAW;YACd;;QAEF,MAAM,SAAS,CAAA,GAAA,gKAAA,CAAA,uBAAoB,AAApB,EAAqB;YAClC;YACA;YACA;YACA,MAAM,QAAQ;;QAEhB,MAAM,eAAe,IAAI,MAAM,CAC7B,CAAC,UACC,UAAU,WAAW,QAAQ,IAAI,KAAK,WAAW,YAAY;QAEjE,OAAO;YACL;YACA,SAAS;gBACP,KAAK;gBACL;gBACA;gBACA;gBACA;gBACA,GAAG,WAAW;gBACd;;;IAWN,EAAE,OAAO,OAAO;QACd,MAAM,CAAA,GAAA,+JAAA,CAAA,mBAAgB,AAAhB,EAAiB,OAAoB;YACzC;YACA;YACA;YACA,UAAU;YACV;YACA,QAAQ,SAAS;;IAErB;AACF"}},
    {"offset": {"line": 10369, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10374, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/actions/public/uninstallFilter.ts"],"sourcesContent":["import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Filter } from '../../types/filter.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type UninstallFilterParameters = {\n  filter: Filter<any>\n}\nexport type UninstallFilterReturnType = boolean\n\nexport type UninstallFilterErrorType = RequestErrorType | ErrorType\n\n/**\n * Destroys a [`Filter`](https://viem.sh/docs/glossary/types#filter).\n *\n * - Docs: https://viem.sh/docs/actions/public/uninstallFilter\n * - JSON-RPC Methods: [`eth_uninstallFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_uninstallFilter)\n *\n * Destroys a Filter that was created from one of the following Actions:\n * - [`createBlockFilter`](https://viem.sh/docs/actions/public/createBlockFilter)\n * - [`createEventFilter`](https://viem.sh/docs/actions/public/createEventFilter)\n * - [`createPendingTransactionFilter`](https://viem.sh/docs/actions/public/createPendingTransactionFilter)\n *\n * @param client - Client to use\n * @param parameters - {@link UninstallFilterParameters}\n * @returns A boolean indicating if the Filter was successfully uninstalled. {@link UninstallFilterReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createPendingTransactionFilter, uninstallFilter } from 'viem/public'\n *\n * const filter = await createPendingTransactionFilter(client)\n * const uninstalled = await uninstallFilter(client, { filter })\n * // true\n */\nexport async function uninstallFilter<\n  transport extends Transport,\n  chain extends Chain | undefined,\n>(\n  _client: Client<transport, chain>,\n  { filter }: UninstallFilterParameters,\n): Promise<UninstallFilterReturnType> {\n  return filter.request({\n    method: 'eth_uninstallFilter',\n    params: [filter.id],\n  })\n}\n"],"names":[],"mappings":"AAcA;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBO,eAAe,gBAIpB,OAAiC,EACjC,EAAE,MAAM,EAA6B;IAErC,OAAO,OAAO,OAAO,CAAC;QACpB,QAAQ;QACR,QAAQ;YAAC,OAAO,EAAE;SAAC;;AAEvB"}},
    {"offset": {"line": 10408, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10413, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/constants/strings.ts"],"sourcesContent":["export const presignMessagePrefix = '\\x19Ethereum Signed Message:\\n'\n"],"names":[],"mappings":";;;AAAO,MAAM,uBAAuB"}},
    {"offset": {"line": 10417, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10422, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/signature/toPrefixedMessage.ts"],"sourcesContent":["import { presignMessagePrefix } from '../../constants/strings.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Hex, SignableMessage } from '../../types/misc.js'\nimport { type ConcatErrorType, concat } from '../data/concat.js'\nimport { size } from '../data/size.js'\nimport {\n  type BytesToHexErrorType,\n  type StringToHexErrorType,\n  bytesToHex,\n  stringToHex,\n} from '../encoding/toHex.js'\n\nexport type ToPrefixedMessageErrorType =\n  | ConcatErrorType\n  | StringToHexErrorType\n  | BytesToHexErrorType\n  | ErrorType\n\nexport function toPrefixedMessage(message_: SignableMessage): Hex {\n  const message = (() => {\n    if (typeof message_ === 'string') return stringToHex(message_)\n    if (typeof message_.raw === 'string') return message_.raw\n    return bytesToHex(message_.raw)\n  })()\n  const prefix = stringToHex(`${presignMessagePrefix}${size(message)}`)\n  return concat([prefix, message])\n}\n"],"names":[],"mappings":";;;;;;;;;;;;AAkBM,SAAU,kBAAkB,QAAyB;IACzD,MAAM,UAAU,CAAC;QACf,IAAI,OAAO,aAAa,UAAU,OAAO,CAAA,GAAA,sJAAA,CAAA,cAAW,AAAX,EAAY;QACrD,IAAI,OAAO,SAAS,GAAG,KAAK,UAAU,OAAO,SAAS,GAAG;QACzD,OAAO,CAAA,GAAA,sJAAA,CAAA,aAAU,AAAV,EAAW,SAAS,GAAG;IAChC,CAAC;IACD,MAAM,SAAS,CAAA,GAAA,sJAAA,CAAA,cAAW,AAAX,EAAY,CAAA,EAAG,gJAAA,CAAA,uBAAoB,CAAA,EAAG,CAAA,GAAA,iJAAA,CAAA,OAAI,AAAJ,EAAK,SAAQ,CAAE;IACpE,OAAO,CAAA,GAAA,mJAAA,CAAA,SAAM,AAAN,EAAO;QAAC;QAAQ;KAAQ;AACjC"}},
    {"offset": {"line": 10446, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10451, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/signature/hashMessage.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex, SignableMessage } from '../../types/misc.js'\nimport { type Keccak256ErrorType, keccak256 } from '../hash/keccak256.js'\nimport { toPrefixedMessage } from './toPrefixedMessage.js'\n\ntype To = 'hex' | 'bytes'\n\nexport type HashMessageReturnType<to extends To> =\n  | (to extends 'bytes' ? ByteArray : never)\n  | (to extends 'hex' ? Hex : never)\n\nexport type HashMessageErrorType = Keccak256ErrorType | ErrorType\n\nexport function hashMessage<to extends To = 'hex'>(\n  message: SignableMessage,\n  to_?: to | undefined,\n): HashMessageReturnType<to> {\n  return keccak256(toPrefixedMessage(message), to_)\n}\n"],"names":[],"mappings":";;;;;;;;AAaM,SAAU,YACd,OAAwB,EACxB,GAAoB;IAEpB,OAAO,CAAA,GAAA,sJAAA,CAAA,YAAS,AAAT,EAAU,CAAA,GAAA,mKAAA,CAAA,oBAAiB,AAAjB,EAAkB,UAAU;AAC/C"}},
    {"offset": {"line": 10462, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10467, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/constants/bytes.ts"],"sourcesContent":["export const erc6492MagicBytes =\n  '0x6492649264926492649264926492649264926492649264926492649264926492' as const\n\nexport const zeroHash =\n  '0x0000000000000000000000000000000000000000000000000000000000000000' as const\n"],"names":[],"mappings":";;;;AAAO,MAAM,oBACX;AAEK,MAAM,WACX"}},
    {"offset": {"line": 10473, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10478, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/signature/isErc6492Signature.ts"],"sourcesContent":["import { erc6492MagicBytes } from '../../constants/bytes.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Hex } from '../../types/misc.js'\nimport { type SliceHexErrorType, sliceHex } from '../data/slice.js'\n\nexport type IsErc6492SignatureParameters = Hex\nexport type IsErc6492SignatureReturnType = boolean\nexport type IsErc6492SignatureErrorType = SliceHexErrorType | ErrorType\n\n/** Whether or not the signature is an ERC-6492 formatted signature. */\nexport function isErc6492Signature(\n  signature: IsErc6492SignatureParameters,\n): IsErc6492SignatureReturnType {\n  return sliceHex(signature, -32) === erc6492MagicBytes\n}\n"],"names":[],"mappings":";;;;;;;;AAUM,SAAU,mBACd,SAAuC;IAEvC,OAAO,CAAA,GAAA,kJAAA,CAAA,WAAQ,AAAR,EAAS,WAAW,CAAC,QAAQ,8IAAA,CAAA,oBAAiB;AACvD"}},
    {"offset": {"line": 10489, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10494, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/signature/serializeErc6492Signature.ts"],"sourcesContent":["import type { Address } from 'abitype'\nimport { erc6492MagicBytes } from '../../constants/bytes.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { encodeAbiParameters } from '../abi/encodeAbiParameters.js'\nimport { concatHex } from '../data/concat.js'\nimport { hexToBytes } from '../encoding/toBytes.js'\n\ntype To = 'bytes' | 'hex'\n\nexport type SerializeErc6492SignatureParameters<to extends To = 'hex'> = {\n  /** The ERC-4337 Account Factory address to use for counterfactual verification. */\n  address: Address\n  /** Calldata to pass to deploy account (if not deployed) for counterfactual verification. */\n  data: Hex\n  /** The original signature. */\n  signature: Hex\n  to?: to | To | undefined\n}\n\nexport type SerializeErc6492SignatureReturnType<to extends To = 'hex'> =\n  | (to extends 'hex' ? Hex : never)\n  | (to extends 'bytes' ? ByteArray : never)\n\nexport type SerializeErc6492SignatureErrorType = ErrorType\n\n/**\n * @description Serializes a ERC-6492 flavoured signature into hex format.\n *\n * @param signature ERC-6492 signature in object format.\n * @returns ERC-6492 signature in hex format.\n *\n * @example\n * serializeSignature({ address: '0x...', data: '0x...', signature: '0x...' })\n * // '0x000000000000000000000000cafebabecafebabecafebabecafebabecafebabe000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000004deadbeef000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000041a461f509887bd19e312c0c58467ce8ff8e300d3c1a90b608a760c5b80318eaf15fe57c96f9175d6cd4daad4663763baa7e78836e067d0163e9a2ccf2ff753f5b1b000000000000000000000000000000000000000000000000000000000000006492649264926492649264926492649264926492649264926492649264926492'\n */\nexport function serializeErc6492Signature<to extends To = 'hex'>(\n  parameters: SerializeErc6492SignatureParameters<to>,\n): SerializeErc6492SignatureReturnType<to> {\n  const { address, data, signature, to = 'hex' } = parameters\n  const signature_ = concatHex([\n    encodeAbiParameters(\n      [{ type: 'address' }, { type: 'bytes' }, { type: 'bytes' }],\n      [address, data, signature],\n    ),\n    erc6492MagicBytes,\n  ])\n\n  if (to === 'hex') return signature_ as SerializeErc6492SignatureReturnType<to>\n  return hexToBytes(signature_) as SerializeErc6492SignatureReturnType<to>\n}\n"],"names":[],"mappings":";;;;;;;;;;;;AAoCM,SAAU,0BACd,UAAmD;IAEnD,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,KAAK,EAAE,GAAG;IACjD,MAAM,aAAa,CAAA,GAAA,mJAAA,CAAA,YAAS,AAAT,EAAU;QAC3B,CAAA,GAAA,+JAAA,CAAA,sBAAmB,AAAnB,EACE;YAAC;gBAAE,MAAM;YAAS;YAAI;gBAAE,MAAM;YAAO;YAAI;gBAAE,MAAM;YAAO;SAAG,EAC3D;YAAC;YAAS;YAAM;SAAU;QAE5B,8IAAA,CAAA,oBAAiB;KAClB;IAED,IAAI,OAAO,OAAO,OAAO;IACzB,OAAO,CAAA,GAAA,wJAAA,CAAA,aAAU,AAAV,EAAW;AACpB"}},
    {"offset": {"line": 10529, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10534, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/signature/serializeSignature.ts"],"sourcesContent":["import { secp256k1 } from '@noble/curves/secp256k1'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex, Signature } from '../../types/misc.js'\nimport { type HexToBigIntErrorType, hexToBigInt } from '../encoding/fromHex.js'\nimport { hexToBytes } from '../encoding/toBytes.js'\nimport type { ToHexErrorType } from '../encoding/toHex.js'\n\ntype To = 'bytes' | 'hex'\n\nexport type SerializeSignatureParameters<to extends To = 'hex'> = Signature & {\n  to?: to | To | undefined\n}\n\nexport type SerializeSignatureReturnType<to extends To = 'hex'> =\n  | (to extends 'hex' ? Hex : never)\n  | (to extends 'bytes' ? ByteArray : never)\n\nexport type SerializeSignatureErrorType =\n  | HexToBigIntErrorType\n  | ToHexErrorType\n  | ErrorType\n\n/**\n * @description Converts a signature into hex format.\n *\n * @param signature The signature to convert.\n * @returns The signature in hex format.\n *\n * @example\n * serializeSignature({\n *   r: '0x6e100a352ec6ad1b70802290e18aeed190704973570f3b8ed42cb9808e2ea6bf',\n *   s: '0x4a90a229a244495b41890987806fcbd2d5d23fc0dbe5f5256c2613c039d76db8',\n *   yParity: 1\n * })\n * // \"0x6e100a352ec6ad1b70802290e18aeed190704973570f3b8ed42cb9808e2ea6bf4a90a229a244495b41890987806fcbd2d5d23fc0dbe5f5256c2613c039d76db81c\"\n */\nexport function serializeSignature<to extends To = 'hex'>({\n  r,\n  s,\n  to = 'hex',\n  v,\n  yParity,\n}: SerializeSignatureParameters<to>): SerializeSignatureReturnType<to> {\n  const yParity_ = (() => {\n    if (yParity === 0 || yParity === 1) return yParity\n    if (v && (v === 27n || v === 28n || v >= 35n)) return v % 2n === 0n ? 1 : 0\n    throw new Error('Invalid `v` or `yParity` value')\n  })()\n  const signature = `0x${new secp256k1.Signature(\n    hexToBigInt(r),\n    hexToBigInt(s),\n  ).toCompactHex()}${yParity_ === 0 ? '1b' : '1c'}` as const\n\n  if (to === 'hex') return signature as SerializeSignatureReturnType<to>\n  return hexToBytes(signature) as SerializeSignatureReturnType<to>\n}\n"],"names":[],"mappings":";;;;;;;;;;AAqCM,SAAU,mBAA0C,EACxD,CAAC,EACD,CAAC,EACD,KAAK,KAAK,EACV,CAAC,EACD,OAAO,EAC0B;IACjC,MAAM,WAAW,CAAC;QAChB,IAAI,YAAY,KAAK,YAAY,GAAG,OAAO;QAC3C,IAAI,KAAK,CAAC,MAAM,GAAG,IAAI,MAAM,GAAG,IAAI,KAAK,GAAG,GAAG,OAAO,IAAI,EAAE,KAAK,EAAE,GAAG,IAAI;QAC1E,MAAM,IAAI,MAAM;IAClB,CAAC;IACD,MAAM,YAAY,CAAA,EAAA,EAAK,IAAI,iJAAA,CAAA,YAAS,CAAC,SAAS,CAC5C,CAAA,GAAA,wJAAA,CAAA,cAAW,AAAX,EAAY,IACZ,CAAA,GAAA,wJAAA,CAAA,cAAW,AAAX,EAAY,IACZ,YAAY,GAAE,EAAG,aAAa,IAAI,OAAO,KAAI,CAAW;IAE1D,IAAI,OAAO,OAAO,OAAO;IACzB,OAAO,CAAA,GAAA,wJAAA,CAAA,aAAU,AAAV,EAAW;AACpB"}},
    {"offset": {"line": 10554, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10559, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/actions/public/verifyHash.ts"],"sourcesContent":["import type { Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport { universalSignatureValidatorAbi } from '../../constants/abis.js'\nimport { universalSignatureValidatorByteCode } from '../../constants/contracts.js'\nimport { CallExecutionError } from '../../errors/contract.js'\nimport type { InvalidHexBooleanError } from '../../errors/encoding.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { ByteArray, Hex, Signature } from '../../types/misc.js'\nimport type { OneOf } from '../../types/utils.js'\nimport {\n  type EncodeDeployDataErrorType,\n  encodeDeployData,\n} from '../../utils/abi/encodeDeployData.js'\nimport { getAddress } from '../../utils/address/getAddress.js'\nimport { isAddressEqual } from '../../utils/address/isAddressEqual.js'\nimport { type IsHexErrorType, isHex } from '../../utils/data/isHex.js'\nimport { type ToHexErrorType, bytesToHex } from '../../utils/encoding/toHex.js'\nimport { getAction } from '../../utils/getAction.js'\nimport { encodeFunctionData, hexToBool } from '../../utils/index.js'\nimport { isErc6492Signature } from '../../utils/signature/isErc6492Signature.js'\nimport { recoverAddress } from '../../utils/signature/recoverAddress.js'\nimport { serializeErc6492Signature } from '../../utils/signature/serializeErc6492Signature.js'\nimport { serializeSignature } from '../../utils/signature/serializeSignature.js'\nimport { type CallErrorType, type CallParameters, call } from './call.js'\n\nexport type VerifyHashParameters = Pick<\n  CallParameters,\n  'blockNumber' | 'blockTag'\n> & {\n  /** The address that signed the original message. */\n  address: Address\n  /** The hash to be verified. */\n  hash: Hex\n  /** The signature that was generated by signing the message with the address's private key. */\n  signature: Hex | ByteArray | Signature\n  universalSignatureVerifierAddress?: Address | undefined\n} & OneOf<{ factory: Address; factoryData: Hex } | {}>\n\nexport type VerifyHashReturnType = boolean\n\nexport type VerifyHashErrorType =\n  | CallErrorType\n  | IsHexErrorType\n  | ToHexErrorType\n  | InvalidHexBooleanError\n  | EncodeDeployDataErrorType\n  | ErrorType\n\n/**\n * Verifies a message hash onchain using ERC-6492.\n *\n * @param client - Client to use.\n * @param parameters - {@link VerifyHashParameters}\n * @returns Whether or not the signature is valid. {@link VerifyHashReturnType}\n */\nexport async function verifyHash<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n  parameters: VerifyHashParameters,\n): Promise<VerifyHashReturnType> {\n  const {\n    address,\n    factory,\n    factoryData,\n    hash,\n    signature,\n    universalSignatureVerifierAddress = client.chain?.contracts\n      ?.universalSignatureVerifier?.address,\n    ...rest\n  } = parameters\n\n  const signatureHex = (() => {\n    if (isHex(signature)) return signature\n    if (typeof signature === 'object' && 'r' in signature && 's' in signature)\n      return serializeSignature(signature)\n    return bytesToHex(signature)\n  })()\n\n  const wrappedSignature = await (async () => {\n    // If no `factory` or `factoryData` is provided, it is assumed that the\n    // address is not a Smart Account, or the Smart Account is already deployed.\n    if (!factory && !factoryData) return signatureHex\n\n    // If the signature is already wrapped, return the signature.\n    if (isErc6492Signature(signatureHex)) return signatureHex\n\n    // If the Smart Account is not deployed, wrap the signature with a 6492 wrapper\n    // to perform counterfactual validation.\n    return serializeErc6492Signature({\n      address: factory!,\n      data: factoryData!,\n      signature: signatureHex,\n    })\n  })()\n\n  try {\n    const args = universalSignatureVerifierAddress\n      ? ({\n          to: universalSignatureVerifierAddress,\n          data: encodeFunctionData({\n            abi: universalSignatureValidatorAbi,\n            functionName: 'isValidSig',\n            args: [address, hash, wrappedSignature],\n          }),\n          ...rest,\n        } as unknown as CallParameters)\n      : ({\n          data: encodeDeployData({\n            abi: universalSignatureValidatorAbi,\n            args: [address, hash, wrappedSignature],\n            bytecode: universalSignatureValidatorByteCode,\n          }),\n          ...rest,\n        } as unknown as CallParameters)\n\n    const { data } = await getAction(client, call, 'call')(args)\n\n    return hexToBool(data ?? '0x0')\n  } catch (error) {\n    // Fallback attempt to verify the signature via ECDSA recovery.\n    try {\n      const verified = isAddressEqual(\n        getAddress(address),\n        await recoverAddress({ hash, signature }),\n      )\n      if (verified) return true\n    } catch {}\n\n    if (error instanceof CallExecutionError) {\n      // if the execution fails, the signature was not valid and an internal method inside of the validator reverted\n      // this can happen for many reasons, for example if signer can not be recovered from the signature\n      // or if the signature has no valid format\n      return false\n    }\n\n    throw error\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0DO,eAAe,WACpB,MAAgC,EAChC,UAAgC;IAEhC,MAAM,EACJ,OAAO,EACP,OAAO,EACP,WAAW,EACX,IAAI,EACJ,SAAS,EACT,oCAAoC,OAAO,KAAK,EAAE,WAC9C,4BAA4B,OAAO,EACvC,GAAG,MACJ,GAAG;IAEJ,MAAM,eAAe,CAAC;QACpB,IAAI,CAAA,GAAA,kJAAA,CAAA,QAAK,AAAL,EAAM,YAAY,OAAO;QAC7B,IAAI,OAAO,cAAc,YAAY,OAAO,aAAa,OAAO,WAC9D,OAAO,CAAA,GAAA,oKAAA,CAAA,qBAAkB,AAAlB,EAAmB;QAC5B,OAAO,CAAA,GAAA,sJAAA,CAAA,aAAU,AAAV,EAAW;IACpB,CAAC;IAED,MAAM,mBAAmB,MAAM,CAAC;QAC9B,uEAAuE;QACvE,4EAA4E;QAC5E,IAAI,CAAC,WAAW,CAAC,aAAa,OAAO;QAErC,6DAA6D;QAC7D,IAAI,CAAA,GAAA,oKAAA,CAAA,qBAAkB,AAAlB,EAAmB,eAAe,OAAO;QAE7C,+EAA+E;QAC/E,wCAAwC;QACxC,OAAO,CAAA,GAAA,2KAAA,CAAA,4BAAyB,AAAzB,EAA0B;YAC/B,SAAS;YACT,MAAM;YACN,WAAW;;IAEf,CAAC;IAED,IAAI;QACF,MAAM,OAAO,oCACR;YACC,IAAI;YACJ,MAAM,CAAA,GAAA,8JAAA,CAAA,qBAAkB,AAAlB,EAAmB;gBACvB,KAAK,6IAAA,CAAA,iCAA8B;gBACnC,cAAc;gBACd,MAAM;oBAAC;oBAAS;oBAAM;iBAAiB;;YAEzC,GAAG,IAAI;YAER;YACC,MAAM,CAAA,GAAA,4JAAA,CAAA,mBAAgB,AAAhB,EAAiB;gBACrB,KAAK,6IAAA,CAAA,iCAA8B;gBACnC,MAAM;oBAAC;oBAAS;oBAAM;iBAAiB;gBACvC,UAAU,kJAAA,CAAA,sCAAmC;;YAE/C,GAAG,IAAI;;QAGb,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,CAAA,GAAA,8IAAA,CAAA,YAAS,AAAT,EAAU,QAAQ,qJAAA,CAAA,OAAI,EAAE,QAAQ;QAEvD,OAAO,CAAA,GAAA,wJAAA,CAAA,YAAS,AAAT,EAAU,QAAQ;IAC3B,EAAE,OAAO,OAAO;QACd,+DAA+D;QAC/D,IAAI;YACF,MAAM,WAAW,CAAA,GAAA,8JAAA,CAAA,iBAAc,AAAd,EACf,CAAA,GAAA,0JAAA,CAAA,aAAU,AAAV,EAAW,UACX,MAAM,CAAA,GAAA,gKAAA,CAAA,iBAAc,AAAd,EAAe;gBAAE;gBAAM;YAAS;YAExC,IAAI,UAAU,OAAO;QACvB,EAAE,OAAM,CAAC;QAET,IAAI,iBAAiB,8IAAA,CAAA,qBAAkB,EAAE;YACvC,8GAA8G;YAC9G,kGAAkG;YAClG,0CAA0C;YAC1C,OAAO;QACT;QAEA,MAAM;IACR;AACF"}},
    {"offset": {"line": 10660, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10665, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/actions/public/verifyMessage.ts"],"sourcesContent":["import type { Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type {\n  ByteArray,\n  Hex,\n  SignableMessage,\n  Signature,\n} from '../../types/misc.js'\nimport type { Prettify } from '../../types/utils.js'\nimport { hashMessage } from '../../utils/signature/hashMessage.js'\nimport type { HashMessageErrorType } from '../../utils/signature/hashMessage.js'\nimport {\n  type VerifyHashErrorType,\n  type VerifyHashParameters,\n  verifyHash,\n} from './verifyHash.js'\n\nexport type VerifyMessageParameters = Prettify<\n  Omit<VerifyHashParameters, 'hash'> & {\n    /** The address that signed the original message. */\n    address: Address\n    /** The message to be verified. */\n    message: SignableMessage\n    /** The signature that was generated by signing the message with the address's private key. */\n    signature: Hex | ByteArray | Signature\n  }\n>\n\nexport type VerifyMessageReturnType = boolean\n\nexport type VerifyMessageErrorType =\n  | HashMessageErrorType\n  | VerifyHashErrorType\n  | ErrorType\n\n/**\n * Verify that a message was signed by the provided address.\n *\n * Compatible with Smart Contract Accounts & Externally Owned Accounts via [ERC-6492](https://eips.ethereum.org/EIPS/eip-6492).\n *\n * - Docs {@link https://viem.sh/docs/actions/public/verifyMessage}\n *\n * @param client - Client to use.\n * @param parameters - {@link VerifyMessageParameters}\n * @returns Whether or not the signature is valid. {@link VerifyMessageReturnType}\n */\nexport async function verifyMessage<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n  {\n    address,\n    message,\n    factory,\n    factoryData,\n    signature,\n    ...callRequest\n  }: VerifyMessageParameters,\n): Promise<VerifyMessageReturnType> {\n  const hash = hashMessage(message)\n  return verifyHash(client, {\n    address,\n    factory: factory!,\n    factoryData: factoryData!,\n    hash,\n    signature,\n    ...callRequest,\n  })\n}\n"],"names":[],"mappings":";;;;;;;;AAkDO,eAAe,cACpB,MAAgC,EAChC,EACE,OAAO,EACP,OAAO,EACP,OAAO,EACP,WAAW,EACX,SAAS,EACT,GAAG,aACqB;IAE1B,MAAM,OAAO,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAX,EAAY;IACzB,OAAO,CAAA,GAAA,2JAAA,CAAA,aAAU,AAAV,EAAW,QAAQ;QACxB;QACA,SAAS;QACT,aAAa;QACb;QACA;QACA,GAAG,WAAW;;AAElB"}},
    {"offset": {"line": 10684, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10689, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/errors/typedData.ts"],"sourcesContent":["import { BaseError } from './base.js'\n\nexport type InvalidStructTypeErrorType = InvalidStructTypeError & {\n  name: 'InvalidStructTypeError'\n}\nexport class InvalidStructTypeError extends BaseError {\n  constructor({ type }: { type: string }) {\n    super(`Struct type \"${type}\" is invalid.`, {\n      metaMessages: ['Struct type must not be a Solidity type.'],\n      name: 'InvalidStructTypeError',\n    })\n  }\n}\n"],"names":[],"mappings":";;;;;;AAKM,MAAO,+BAA+B,0IAAA,CAAA,YAAS;IACnD,YAAY,EAAE,IAAI,EAAoB,CAAA;QACpC,KAAK,CAAC,CAAA,aAAA,EAAgB,KAAI,aAAA,CAAe,EAAE;YACzC,cAAc;gBAAC;aAA2C;YAC1D,MAAM;;IAEV"}},
    {"offset": {"line": 10705, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10710, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/regex.ts"],"sourcesContent":["export const arrayRegex = /^(.*)\\[([0-9]*)\\]$/\n\n// `bytes<M>`: binary type of `M` bytes, `0 < M <= 32`\n// https://regexr.com/6va55\nexport const bytesRegex = /^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/\n\n// `(u)int<M>`: (un)signed integer type of `M` bits, `0 < M <= 256`, `M % 8 == 0`\n// https://regexr.com/6v8hp\nexport const integerRegex =\n  /^(u?int)(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/\n"],"names":[],"mappings":";;;;;AAAO,MAAM,aAAa;AAInB,MAAM,aAAa;AAInB,MAAM,eACX"}},
    {"offset": {"line": 10718, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10723, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/typedData.ts"],"sourcesContent":["import type { TypedData, TypedDataDomain, TypedDataParameter } from 'abitype'\n\nimport { BytesSizeMismatchError } from '../errors/abi.js'\nimport { InvalidAddressError } from '../errors/address.js'\nimport { InvalidStructTypeError } from '../errors/typedData.js'\nimport type { ErrorType } from '../errors/utils.js'\nimport type { Hex } from '../types/misc.js'\nimport type { TypedDataDefinition } from '../types/typedData.js'\nimport { type IsAddressErrorType, isAddress } from './address/isAddress.js'\nimport { type SizeErrorType, size } from './data/size.js'\nimport { type NumberToHexErrorType, numberToHex } from './encoding/toHex.js'\nimport { bytesRegex, integerRegex } from './regex.js'\nimport {\n  type HashDomainErrorType,\n  hashDomain,\n} from './signature/hashTypedData.js'\nimport { stringify } from './stringify.js'\n\nexport type SerializeTypedDataErrorType =\n  | HashDomainErrorType\n  | IsAddressErrorType\n  | NumberToHexErrorType\n  | SizeErrorType\n  | ErrorType\n\nexport function serializeTypedData<\n  const typedData extends TypedData | Record<string, unknown>,\n  primaryType extends keyof typedData | 'EIP712Domain',\n>(parameters: TypedDataDefinition<typedData, primaryType>) {\n  const {\n    domain: domain_,\n    message: message_,\n    primaryType,\n    types,\n  } = parameters as unknown as TypedDataDefinition\n\n  const normalizeData = (\n    struct: readonly TypedDataParameter[],\n    data_: Record<string, unknown>,\n  ) => {\n    const data = { ...data_ }\n    for (const param of struct) {\n      const { name, type } = param\n      if (type === 'address') data[name] = (data[name] as string).toLowerCase()\n    }\n    return data\n  }\n\n  const domain = (() => {\n    if (!types.EIP712Domain) return {}\n    if (!domain_) return {}\n    return normalizeData(types.EIP712Domain, domain_)\n  })()\n\n  const message = (() => {\n    if (primaryType === 'EIP712Domain') return undefined\n    return normalizeData(types[primaryType], message_)\n  })()\n\n  return stringify({ domain, message, primaryType, types })\n}\n\nexport type ValidateTypedDataErrorType =\n  | HashDomainErrorType\n  | IsAddressErrorType\n  | NumberToHexErrorType\n  | SizeErrorType\n  | ErrorType\n\nexport function validateTypedData<\n  const typedData extends TypedData | Record<string, unknown>,\n  primaryType extends keyof typedData | 'EIP712Domain',\n>(parameters: TypedDataDefinition<typedData, primaryType>) {\n  const { domain, message, primaryType, types } =\n    parameters as unknown as TypedDataDefinition\n\n  const validateData = (\n    struct: readonly TypedDataParameter[],\n    data: Record<string, unknown>,\n  ) => {\n    for (const param of struct) {\n      const { name, type } = param\n      const value = data[name]\n\n      const integerMatch = type.match(integerRegex)\n      if (\n        integerMatch &&\n        (typeof value === 'number' || typeof value === 'bigint')\n      ) {\n        const [_type, base, size_] = integerMatch\n        // If number cannot be cast to a sized hex value, it is out of range\n        // and will throw.\n        numberToHex(value, {\n          signed: base === 'int',\n          size: Number.parseInt(size_) / 8,\n        })\n      }\n\n      if (type === 'address' && typeof value === 'string' && !isAddress(value))\n        throw new InvalidAddressError({ address: value })\n\n      const bytesMatch = type.match(bytesRegex)\n      if (bytesMatch) {\n        const [_type, size_] = bytesMatch\n        if (size_ && size(value as Hex) !== Number.parseInt(size_))\n          throw new BytesSizeMismatchError({\n            expectedSize: Number.parseInt(size_),\n            givenSize: size(value as Hex),\n          })\n      }\n\n      const struct = types[type]\n      if (struct) {\n        validateReference(type)\n        validateData(struct, value as Record<string, unknown>)\n      }\n    }\n  }\n\n  // Validate domain types.\n  if (types.EIP712Domain && domain) validateData(types.EIP712Domain, domain)\n\n  // Validate message types.\n  if (primaryType !== 'EIP712Domain') validateData(types[primaryType], message)\n}\n\nexport type GetTypesForEIP712DomainErrorType = ErrorType\n\nexport function getTypesForEIP712Domain({\n  domain,\n}: { domain?: TypedDataDomain | undefined }): TypedDataParameter[] {\n  return [\n    typeof domain?.name === 'string' && { name: 'name', type: 'string' },\n    domain?.version && { name: 'version', type: 'string' },\n    typeof domain?.chainId === 'number' && {\n      name: 'chainId',\n      type: 'uint256',\n    },\n    domain?.verifyingContract && {\n      name: 'verifyingContract',\n      type: 'address',\n    },\n    domain?.salt && { name: 'salt', type: 'bytes32' },\n  ].filter(Boolean) as TypedDataParameter[]\n}\n\nexport type DomainSeparatorErrorType =\n  | GetTypesForEIP712DomainErrorType\n  | HashDomainErrorType\n  | ErrorType\n\nexport function domainSeparator({ domain }: { domain: TypedDataDomain }): Hex {\n  return hashDomain({\n    domain,\n    types: {\n      EIP712Domain: getTypesForEIP712Domain({ domain }),\n    },\n  })\n}\n\n/** @internal */\nfunction validateReference(type: string) {\n  // Struct type must not be a Solidity type.\n  if (\n    type === 'address' ||\n    type === 'bool' ||\n    type === 'string' ||\n    type.startsWith('bytes') ||\n    type.startsWith('uint') ||\n    type.startsWith('int')\n  )\n    throw new InvalidStructTypeError({ type })\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 10855, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10860, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/signature/hashTypedData.ts"],"sourcesContent":["// Implementation forked and adapted from https://github.com/MetaMask/eth-sig-util/blob/main/src/sign-typed-data.ts\n\nimport type { AbiParameter, TypedData, TypedDataDomain } from 'abitype'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { TypedDataDefinition } from '../../types/typedData.js'\nimport {\n  type EncodeAbiParametersErrorType,\n  encodeAbiParameters,\n} from '../abi/encodeAbiParameters.js'\nimport { concat } from '../data/concat.js'\nimport { type ToHexErrorType, toHex } from '../encoding/toHex.js'\nimport { type Keccak256ErrorType, keccak256 } from '../hash/keccak256.js'\nimport {\n  type GetTypesForEIP712DomainErrorType,\n  type ValidateTypedDataErrorType,\n  getTypesForEIP712Domain,\n  validateTypedData,\n} from '../typedData.js'\n\ntype MessageTypeProperty = {\n  name: string\n  type: string\n}\n\nexport type HashTypedDataParameters<\n  typedData extends TypedData | Record<string, unknown> = TypedData,\n  primaryType extends keyof typedData | 'EIP712Domain' = keyof typedData,\n> = TypedDataDefinition<typedData, primaryType>\n\nexport type HashTypedDataReturnType = Hex\n\nexport type HashTypedDataErrorType =\n  | GetTypesForEIP712DomainErrorType\n  | HashDomainErrorType\n  | HashStructErrorType\n  | ValidateTypedDataErrorType\n  | ErrorType\n\nexport function hashTypedData<\n  const typedData extends TypedData | Record<string, unknown>,\n  primaryType extends keyof typedData | 'EIP712Domain',\n>(\n  parameters: HashTypedDataParameters<typedData, primaryType>,\n): HashTypedDataReturnType {\n  const {\n    domain = {},\n    message,\n    primaryType,\n  } = parameters as HashTypedDataParameters\n  const types = {\n    EIP712Domain: getTypesForEIP712Domain({ domain }),\n    ...parameters.types,\n  }\n\n  // Need to do a runtime validation check on addresses, byte ranges, integer ranges, etc\n  // as we can't statically check this with TypeScript.\n  validateTypedData({\n    domain,\n    message,\n    primaryType,\n    types,\n  })\n\n  const parts: Hex[] = ['0x1901']\n  if (domain)\n    parts.push(\n      hashDomain({\n        domain,\n        types: types as Record<string, MessageTypeProperty[]>,\n      }),\n    )\n\n  if (primaryType !== 'EIP712Domain')\n    parts.push(\n      hashStruct({\n        data: message,\n        primaryType,\n        types: types as Record<string, MessageTypeProperty[]>,\n      }),\n    )\n\n  return keccak256(concat(parts))\n}\n\nexport type HashDomainErrorType = HashStructErrorType | ErrorType\n\nexport function hashDomain({\n  domain,\n  types,\n}: {\n  domain: TypedDataDomain\n  types: Record<string, MessageTypeProperty[]>\n}) {\n  return hashStruct({\n    data: domain,\n    primaryType: 'EIP712Domain',\n    types,\n  })\n}\n\ntype HashStructErrorType = EncodeDataErrorType | Keccak256ErrorType | ErrorType\n\nexport function hashStruct({\n  data,\n  primaryType,\n  types,\n}: {\n  data: Record<string, unknown>\n  primaryType: string\n  types: Record<string, readonly MessageTypeProperty[]>\n}) {\n  const encoded = encodeData({\n    data,\n    primaryType,\n    types,\n  })\n  return keccak256(encoded)\n}\n\ntype EncodeDataErrorType =\n  | EncodeAbiParametersErrorType\n  | EncodeFieldErrorType\n  | HashTypeErrorType\n  | ErrorType\n\nfunction encodeData({\n  data,\n  primaryType,\n  types,\n}: {\n  data: Record<string, unknown>\n  primaryType: string\n  types: Record<string, readonly MessageTypeProperty[]>\n}) {\n  const encodedTypes: AbiParameter[] = [{ type: 'bytes32' }]\n  const encodedValues: unknown[] = [hashType({ primaryType, types })]\n\n  for (const field of types[primaryType]) {\n    const [type, value] = encodeField({\n      types,\n      name: field.name,\n      type: field.type,\n      value: data[field.name],\n    })\n    encodedTypes.push(type)\n    encodedValues.push(value)\n  }\n\n  return encodeAbiParameters(encodedTypes, encodedValues)\n}\n\ntype HashTypeErrorType =\n  | ToHexErrorType\n  | EncodeTypeErrorType\n  | Keccak256ErrorType\n  | ErrorType\n\nfunction hashType({\n  primaryType,\n  types,\n}: {\n  primaryType: string\n  types: Record<string, readonly MessageTypeProperty[]>\n}) {\n  const encodedHashType = toHex(encodeType({ primaryType, types }))\n  return keccak256(encodedHashType)\n}\n\ntype EncodeTypeErrorType = FindTypeDependenciesErrorType\n\nexport function encodeType({\n  primaryType,\n  types,\n}: {\n  primaryType: string\n  types: Record<string, readonly MessageTypeProperty[]>\n}) {\n  let result = ''\n  const unsortedDeps = findTypeDependencies({ primaryType, types })\n  unsortedDeps.delete(primaryType)\n\n  const deps = [primaryType, ...Array.from(unsortedDeps).sort()]\n  for (const type of deps) {\n    result += `${type}(${types[type]\n      .map(({ name, type: t }) => `${t} ${name}`)\n      .join(',')})`\n  }\n\n  return result\n}\n\ntype FindTypeDependenciesErrorType = ErrorType\n\nfunction findTypeDependencies(\n  {\n    primaryType: primaryType_,\n    types,\n  }: {\n    primaryType: string\n    types: Record<string, readonly MessageTypeProperty[]>\n  },\n  results: Set<string> = new Set(),\n): Set<string> {\n  const match = primaryType_.match(/^\\w*/u)\n  const primaryType = match?.[0]!\n  if (results.has(primaryType) || types[primaryType] === undefined) {\n    return results\n  }\n\n  results.add(primaryType)\n\n  for (const field of types[primaryType]) {\n    findTypeDependencies({ primaryType: field.type, types }, results)\n  }\n  return results\n}\n\ntype EncodeFieldErrorType =\n  | Keccak256ErrorType\n  | EncodeAbiParametersErrorType\n  | ToHexErrorType\n  | ErrorType\n\nfunction encodeField({\n  types,\n  name,\n  type,\n  value,\n}: {\n  types: Record<string, readonly MessageTypeProperty[]>\n  name: string\n  type: string\n  value: any\n}): [type: AbiParameter, value: any] {\n  if (types[type] !== undefined) {\n    return [\n      { type: 'bytes32' },\n      keccak256(encodeData({ data: value, primaryType: type, types })),\n    ]\n  }\n\n  if (type === 'bytes') {\n    const prepend = value.length % 2 ? '0' : ''\n    value = `0x${prepend + value.slice(2)}`\n    return [{ type: 'bytes32' }, keccak256(value)]\n  }\n\n  if (type === 'string') return [{ type: 'bytes32' }, keccak256(toHex(value))]\n\n  if (type.lastIndexOf(']') === type.length - 1) {\n    const parsedType = type.slice(0, type.lastIndexOf('['))\n    const typeValuePairs = (value as [AbiParameter, any][]).map((item) =>\n      encodeField({\n        name,\n        type: parsedType,\n        types,\n        value: item,\n      }),\n    )\n    return [\n      { type: 'bytes32' },\n      keccak256(\n        encodeAbiParameters(\n          typeValuePairs.map(([t]) => t),\n          typeValuePairs.map(([, v]) => v),\n        ),\n      ),\n    ]\n  }\n\n  return [{ type }, value]\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 11036, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11041, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/actions/public/verifyTypedData.ts"],"sourcesContent":["import type { Address, TypedData } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { ByteArray, Hex, Signature } from '../../types/misc.js'\nimport type { TypedDataDefinition } from '../../types/typedData.js'\nimport {\n  type HashTypedDataErrorType,\n  hashTypedData,\n} from '../../utils/signature/hashTypedData.js'\nimport {\n  type VerifyHashErrorType,\n  type VerifyHashParameters,\n  verifyHash,\n} from './verifyHash.js'\n\nexport type VerifyTypedDataParameters<\n  typedData extends TypedData | Record<string, unknown> = TypedData,\n  primaryType extends keyof typedData | 'EIP712Domain' = keyof typedData,\n> = Omit<VerifyHashParameters, 'hash'> &\n  TypedDataDefinition<typedData, primaryType> & {\n    /** The address to verify the typed data for. */\n    address: Address\n    /** The signature to verify */\n    signature: Hex | ByteArray | Signature\n  }\n\nexport type VerifyTypedDataReturnType = boolean\n\nexport type VerifyTypedDataErrorType =\n  | HashTypedDataErrorType\n  | VerifyHashErrorType\n  | ErrorType\n\n/**\n * Verify that typed data was signed by the provided address.\n *\n * - Docs {@link https://viem.sh/docs/actions/public/verifyTypedData}\n *\n * @param client - Client to use.\n * @param parameters - {@link VerifyTypedDataParameters}\n * @returns Whether or not the signature is valid. {@link VerifyTypedDataReturnType}\n */\nexport async function verifyTypedData<\n  const typedData extends TypedData | Record<string, unknown>,\n  primaryType extends keyof typedData | 'EIP712Domain',\n  chain extends Chain | undefined,\n>(\n  client: Client<Transport, chain>,\n  parameters: VerifyTypedDataParameters<typedData, primaryType>,\n): Promise<VerifyTypedDataReturnType> {\n  const {\n    address,\n    factory,\n    factoryData,\n    signature,\n    message,\n    primaryType,\n    types,\n    domain,\n    ...callRequest\n  } = parameters as VerifyTypedDataParameters\n  const hash = hashTypedData({ message, primaryType, types, domain })\n  return verifyHash(client, {\n    address,\n    factory: factory!,\n    factoryData: factoryData!,\n    hash,\n    signature,\n    ...callRequest,\n  })\n}\n"],"names":[],"mappings":";;;;;;;;AA6CO,eAAe,gBAKpB,MAAgC,EAChC,UAA6D;IAE7D,MAAM,EACJ,OAAO,EACP,OAAO,EACP,WAAW,EACX,SAAS,EACT,OAAO,EACP,WAAW,EACX,KAAK,EACL,MAAM,EACN,GAAG,aACJ,GAAG;IACJ,MAAM,OAAO,CAAA,GAAA,+JAAA,CAAA,gBAAa,AAAb,EAAc;QAAE;QAAS;QAAa;QAAO;IAAM;IAChE,OAAO,CAAA,GAAA,2JAAA,CAAA,aAAU,AAAV,EAAW,QAAQ;QACxB;QACA,SAAS;QACT,aAAa;QACb;QACA;QACA,GAAG,WAAW;;AAElB"}},
    {"offset": {"line": 11066, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11071, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/observe.ts"],"sourcesContent":["import type { ErrorType } from '../errors/utils.js'\nimport type { MaybePromise } from '../types/utils.js'\n\ntype Callback = ((...args: any[]) => any) | undefined\ntype Callbacks = Record<string, Callback>\n\nexport type ObserveErrorType = ErrorType\n\n/** @internal */\nexport const listenersCache = /*#__PURE__*/ new Map<\n  string,\n  { id: number; fns: Callbacks }[]\n>()\n/** @internal */\nexport const cleanupCache = /*#__PURE__*/ new Map<string, () => void>()\n\ntype EmitFunction<callbacks extends Callbacks> = (\n  emit: callbacks,\n) => MaybePromise<void | (() => void)>\n\nlet callbackCount = 0\n\n/**\n * @description Sets up an observer for a given function. If another function\n * is set up under the same observer id, the function will only be called once\n * for both instances of the observer.\n */\nexport function observe<callbacks extends Callbacks>(\n  observerId: string,\n  callbacks: callbacks,\n  fn: EmitFunction<callbacks>,\n) {\n  const callbackId = ++callbackCount\n\n  const getListeners = () => listenersCache.get(observerId) || []\n\n  const unsubscribe = () => {\n    const listeners = getListeners()\n    listenersCache.set(\n      observerId,\n      listeners.filter((cb: any) => cb.id !== callbackId),\n    )\n  }\n\n  const unwatch = () => {\n    const cleanup = cleanupCache.get(observerId)\n    if (getListeners().length === 1 && cleanup) cleanup()\n    unsubscribe()\n  }\n\n  const listeners = getListeners()\n  listenersCache.set(observerId, [\n    ...listeners,\n    { id: callbackId, fns: callbacks },\n  ])\n\n  if (listeners && listeners.length > 0) return unwatch\n\n  const emit: callbacks = {} as callbacks\n  for (const key in callbacks) {\n    emit[key] = ((\n      ...args: Parameters<NonNullable<callbacks[keyof callbacks]>>\n    ) => {\n      const listeners = getListeners()\n      if (listeners.length === 0) return\n      for (const listener of listeners) listener.fns[key]?.(...args)\n    }) as callbacks[Extract<keyof callbacks, string>]\n  }\n\n  const cleanup = fn(emit)\n  if (typeof cleanup === 'function') cleanupCache.set(observerId, cleanup)\n\n  return unwatch\n}\n"],"names":[],"mappings":"AAQA,cAAA;;;;;AACO,MAAM,iBAAiB,WAAA,GAAc,IAAI;AAKzC,MAAM,eAAe,WAAA,GAAc,IAAI;AAM9C,IAAI,gBAAgB;AAOd,SAAU,QACd,UAAkB,EAClB,SAAoB,EACpB,EAA2B;IAE3B,MAAM,aAAa,EAAE;IAErB,MAAM,eAAe,IAAM,eAAe,GAAG,CAAC,eAAe,EAAE;IAE/D,MAAM,cAAc;QAClB,MAAM,YAAY;QAClB,eAAe,GAAG,CAChB,YACA,UAAU,MAAM,CAAC,CAAC,KAAY,GAAG,EAAE,KAAK;IAE5C;IAEA,MAAM,UAAU;QACd,MAAM,UAAU,aAAa,GAAG,CAAC;QACjC,IAAI,eAAe,MAAM,KAAK,KAAK,SAAS;QAC5C;IACF;IAEA,MAAM,YAAY;IAClB,eAAe,GAAG,CAAC,YAAY;WAC1B;QACH;YAAE,IAAI;YAAY,KAAK;QAAS;KACjC;IAED,IAAI,aAAa,UAAU,MAAM,GAAG,GAAG,OAAO;IAE9C,MAAM,OAAkB,CAAA;IACxB,IAAK,MAAM,OAAO,UAAW;QAC3B,IAAI,CAAC,IAAI,GAAI,CACX,GAAG;YAEH,MAAM,YAAY;YAClB,IAAI,UAAU,MAAM,KAAK,GAAG;YAC5B,KAAK,MAAM,YAAY,UAAW,SAAS,GAAG,CAAC,IAAI,MAAM;QAC3D;IACF;IAEA,MAAM,UAAU,GAAG;IACnB,IAAI,OAAO,YAAY,YAAY,aAAa,GAAG,CAAC,YAAY;IAEhE,OAAO;AACT"}},
    {"offset": {"line": 11112, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11117, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/wait.ts"],"sourcesContent":["export async function wait(time: number) {\n  return new Promise((res) => setTimeout(res, time))\n}\n"],"names":[],"mappings":";;;AAAO,eAAe,KAAK,IAAY;IACrC,OAAO,IAAI,QAAQ,CAAC,MAAQ,WAAW,KAAK;AAC9C"}},
    {"offset": {"line": 11123, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11128, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/promise/withRetry.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\nimport { wait } from '../wait.js'\n\nexport type WithRetryParameters = {\n  // The delay (in ms) between retries.\n  delay?:\n    | ((config: { count: number; error: Error }) => number)\n    | number\n    | undefined\n  // The max number of times to retry.\n  retryCount?: number | undefined\n  // Whether or not to retry when an error is thrown.\n  shouldRetry?:\n    | (({\n        count,\n        error,\n      }: {\n        count: number\n        error: Error\n      }) => Promise<boolean> | boolean)\n    | undefined\n}\n\nexport type WithRetryErrorType = ErrorType\n\nexport function withRetry<data>(\n  fn: () => Promise<data>,\n  {\n    delay: delay_ = 100,\n    retryCount = 2,\n    shouldRetry = () => true,\n  }: WithRetryParameters = {},\n) {\n  return new Promise<data>((resolve, reject) => {\n    const attemptRetry = async ({ count = 0 } = {}) => {\n      const retry = async ({ error }: { error: Error }) => {\n        const delay =\n          typeof delay_ === 'function' ? delay_({ count, error }) : delay_\n        if (delay) await wait(delay)\n        attemptRetry({ count: count + 1 })\n      }\n\n      try {\n        const data = await fn()\n        resolve(data)\n      } catch (err) {\n        if (\n          count < retryCount &&\n          (await shouldRetry({ count, error: err as Error }))\n        )\n          return retry({ error: err as Error })\n        reject(err)\n      }\n    }\n    attemptRetry()\n  })\n}\n"],"names":[],"mappings":";;;;;;AAyBM,SAAU,UACd,EAAuB,EACvB,EACE,OAAO,SAAS,GAAG,EACnB,aAAa,CAAC,EACd,cAAc,IAAM,IAAI,EAAA,GACD,CAAA,CAAE;IAE3B,OAAO,IAAI,QAAc,CAAC,SAAS;QACjC,MAAM,eAAe,OAAO,EAAE,QAAQ,CAAC,EAAE,GAAG,CAAA,CAAE;YAC5C,MAAM,QAAQ,OAAO,EAAE,KAAK,EAAoB;gBAC9C,MAAM,QACJ,OAAO,WAAW,aAAa,OAAO;oBAAE;oBAAO;gBAAK,KAAM;gBAC5D,IAAI,OAAO,MAAM,CAAA,GAAA,yIAAA,CAAA,OAAI,AAAJ,EAAK;gBACtB,aAAa;oBAAE,OAAO,QAAQ;gBAAC;YACjC;YAEA,IAAI;gBACF,MAAM,OAAO,MAAM;gBACnB,QAAQ;YACV,EAAE,OAAO,KAAK;gBACZ,IACE,QAAQ,cACP,MAAM,YAAY;oBAAE;oBAAO,OAAO;gBAAY,IAE/C,OAAO,MAAM;oBAAE,OAAO;gBAAY;gBACpC,OAAO;YACT;QACF;QACA;IACF;AACF"}},
    {"offset": {"line": 11163, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11168, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/poll.ts"],"sourcesContent":["import type { ErrorType } from '../errors/utils.js'\nimport { wait } from './wait.js'\n\ntype PollOptions<data> = {\n  // Whether or not to emit when the polling starts.\n  emitOnBegin?: boolean | undefined\n  // The initial wait time (in ms) before polling.\n  initialWaitTime?: ((data: data | void) => Promise<number>) | undefined\n  // The interval (in ms).\n  interval: number\n}\n\nexport type PollErrorType = ErrorType\n\n/**\n * @description Polls a function at a specified interval.\n */\nexport function poll<data>(\n  fn: ({ unpoll }: { unpoll: () => void }) => Promise<data | void>,\n  { emitOnBegin, initialWaitTime, interval }: PollOptions<data>,\n) {\n  let active = true\n\n  const unwatch = () => (active = false)\n\n  const watch = async () => {\n    let data: data | void = undefined\n    if (emitOnBegin) data = await fn({ unpoll: unwatch })\n\n    const initialWait = (await initialWaitTime?.(data)) ?? interval\n    await wait(initialWait)\n\n    const poll = async () => {\n      if (!active) return\n      await fn({ unpoll: unwatch })\n      await wait(interval)\n      poll()\n    }\n\n    poll()\n  }\n  watch()\n\n  return unwatch\n}\n"],"names":[],"mappings":";;;;;;AAiBM,SAAU,KACd,EAAgE,EAChE,EAAE,WAAW,EAAE,eAAe,EAAE,QAAQ,EAAqB;IAE7D,IAAI,SAAS;IAEb,MAAM,UAAU,IAAO,SAAS;IAEhC,MAAM,QAAQ;QACZ,IAAI,OAAoB;QACxB,IAAI,aAAa,OAAO,MAAM,GAAG;YAAE,QAAQ;QAAO;QAElD,MAAM,cAAc,AAAC,MAAM,kBAAkB,SAAU;QACvD,MAAM,CAAA,GAAA,yIAAA,CAAA,OAAI,AAAJ,EAAK;QAEX,MAAM,OAAO;YACX,IAAI,CAAC,QAAQ;YACb,MAAM,GAAG;gBAAE,QAAQ;YAAO;YAC1B,MAAM,CAAA,GAAA,yIAAA,CAAA,OAAI,AAAJ,EAAK;YACX;QACF;QAEA;IACF;IACA;IAEA,OAAO;AACT"}},
    {"offset": {"line": 11197, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11202, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/actions/public/watchBlockNumber.ts"],"sourcesContent":["import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { HasTransportType } from '../../types/transport.js'\nimport { hexToBigInt } from '../../utils/encoding/fromHex.js'\nimport { getAction } from '../../utils/getAction.js'\nimport { observe } from '../../utils/observe.js'\nimport { type PollErrorType, poll } from '../../utils/poll.js'\nimport { stringify } from '../../utils/stringify.js'\n\nimport {\n  type GetBlockNumberReturnType,\n  getBlockNumber,\n} from './getBlockNumber.js'\n\nexport type OnBlockNumberParameter = GetBlockNumberReturnType\nexport type OnBlockNumberFn = (\n  blockNumber: OnBlockNumberParameter,\n  prevBlockNumber: OnBlockNumberParameter | undefined,\n) => void\n\nexport type WatchBlockNumberParameters<\n  transport extends Transport = Transport,\n> = {\n  /** The callback to call when a new block number is received. */\n  onBlockNumber: OnBlockNumberFn\n  /** The callback to call when an error occurred when trying to get for a new block. */\n  onError?: ((error: Error) => void) | undefined\n} & (\n  | (HasTransportType<transport, 'webSocket'> extends true\n      ? {\n          emitMissed?: undefined\n          emitOnBegin?: undefined\n          /** Whether or not the WebSocket Transport should poll the JSON-RPC, rather than using `eth_subscribe`. */\n          poll?: false | undefined\n          pollingInterval?: undefined\n        }\n      : never)\n  | {\n      /** Whether or not to emit the missed block numbers to the callback. */\n      emitMissed?: boolean | undefined\n      /** Whether or not to emit the latest block number to the callback when the subscription opens. */\n      emitOnBegin?: boolean | undefined\n      poll?: true | undefined\n      /** Polling frequency (in ms). Defaults to Client's pollingInterval config. */\n      pollingInterval?: number | undefined\n    }\n)\n\nexport type WatchBlockNumberReturnType = () => void\n\nexport type WatchBlockNumberErrorType = PollErrorType | ErrorType\n\n/**\n * Watches and returns incoming block numbers.\n *\n * - Docs: https://viem.sh/docs/actions/public/watchBlockNumber\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/blocks/watching-blocks\n * - JSON-RPC Methods:\n *   - When `poll: true`, calls [`eth_blockNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_blocknumber) on a polling interval.\n *   - When `poll: false` & WebSocket Transport, uses a WebSocket subscription via [`eth_subscribe`](https://docs.alchemy.com/reference/eth-subscribe-polygon) and the `\"newHeads\"` event.\n *\n * @param client - Client to use\n * @param parameters - {@link WatchBlockNumberParameters}\n * @returns A function that can be invoked to stop watching for new block numbers. {@link WatchBlockNumberReturnType}\n *\n * @example\n * import { createPublicClient, watchBlockNumber, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const unwatch = watchBlockNumber(client, {\n *   onBlockNumber: (blockNumber) => console.log(blockNumber),\n * })\n */\nexport function watchBlockNumber<\n  chain extends Chain | undefined,\n  transport extends Transport,\n>(\n  client: Client<transport, chain>,\n  {\n    emitOnBegin = false,\n    emitMissed = false,\n    onBlockNumber,\n    onError,\n    poll: poll_,\n    pollingInterval = client.pollingInterval,\n  }: WatchBlockNumberParameters<transport>,\n): WatchBlockNumberReturnType {\n  const enablePolling = (() => {\n    if (typeof poll_ !== 'undefined') return poll_\n    if (client.transport.type === 'webSocket') return false\n    if (\n      client.transport.type === 'fallback' &&\n      client.transport.transports[0].config.type === 'webSocket'\n    )\n      return false\n    return true\n  })()\n\n  let prevBlockNumber: GetBlockNumberReturnType | undefined\n\n  const pollBlockNumber = () => {\n    const observerId = stringify([\n      'watchBlockNumber',\n      client.uid,\n      emitOnBegin,\n      emitMissed,\n      pollingInterval,\n    ])\n\n    return observe(observerId, { onBlockNumber, onError }, (emit) =>\n      poll(\n        async () => {\n          try {\n            const blockNumber = await getAction(\n              client,\n              getBlockNumber,\n              'getBlockNumber',\n            )({ cacheTime: 0 })\n\n            if (prevBlockNumber) {\n              // If the current block number is the same as the previous,\n              // we can skip.\n              if (blockNumber === prevBlockNumber) return\n\n              // If we have missed out on some previous blocks, and the\n              // `emitMissed` flag is truthy, let's emit those blocks.\n              if (blockNumber - prevBlockNumber > 1 && emitMissed) {\n                for (let i = prevBlockNumber + 1n; i < blockNumber; i++) {\n                  emit.onBlockNumber(i, prevBlockNumber)\n                  prevBlockNumber = i\n                }\n              }\n            }\n\n            // If the next block number is greater than the previous,\n            // it is not in the past, and we can emit the new block number.\n            if (!prevBlockNumber || blockNumber > prevBlockNumber) {\n              emit.onBlockNumber(blockNumber, prevBlockNumber)\n              prevBlockNumber = blockNumber\n            }\n          } catch (err) {\n            emit.onError?.(err as Error)\n          }\n        },\n        {\n          emitOnBegin,\n          interval: pollingInterval,\n        },\n      ),\n    )\n  }\n\n  const subscribeBlockNumber = () => {\n    const observerId = stringify([\n      'watchBlockNumber',\n      client.uid,\n      emitOnBegin,\n      emitMissed,\n    ])\n\n    return observe(observerId, { onBlockNumber, onError }, (emit) => {\n      let active = true\n      let unsubscribe = () => (active = false)\n      ;(async () => {\n        try {\n          const transport = (() => {\n            if (client.transport.type === 'fallback') {\n              const transport = client.transport.transports.find(\n                (transport: ReturnType<Transport>) =>\n                  transport.config.type === 'webSocket',\n              )\n              if (!transport) return client.transport\n              return transport.value\n            }\n            return client.transport\n          })()\n\n          const { unsubscribe: unsubscribe_ } = await transport.subscribe({\n            params: ['newHeads'],\n            onData(data: any) {\n              if (!active) return\n              const blockNumber = hexToBigInt(data.result?.number)\n              emit.onBlockNumber(blockNumber, prevBlockNumber)\n              prevBlockNumber = blockNumber\n            },\n            onError(error: Error) {\n              emit.onError?.(error)\n            },\n          })\n          unsubscribe = unsubscribe_\n          if (!active) unsubscribe()\n        } catch (err) {\n          onError?.(err as Error)\n        }\n      })()\n      return () => unsubscribe()\n    })\n  }\n\n  return enablePolling ? pollBlockNumber() : subscribeBlockNumber()\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 11317, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11322, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/actions/public/waitForTransactionReceipt.ts"],"sourcesContent":["import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport { BlockNotFoundError } from '../../errors/block.js'\nimport {\n  TransactionNotFoundError,\n  TransactionReceiptNotFoundError,\n  WaitForTransactionReceiptTimeoutError,\n} from '../../errors/transaction.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { Transaction } from '../../types/transaction.js'\nimport { getAction } from '../../utils/getAction.js'\nimport { type ObserveErrorType, observe } from '../../utils/observe.js'\nimport {\n  type WithRetryParameters,\n  withRetry,\n} from '../../utils/promise/withRetry.js'\nimport { stringify } from '../../utils/stringify.js'\n\nimport { type GetBlockErrorType, getBlock } from './getBlock.js'\nimport {\n  type GetTransactionErrorType,\n  type GetTransactionReturnType,\n  getTransaction,\n} from './getTransaction.js'\nimport {\n  type GetTransactionReceiptErrorType,\n  type GetTransactionReceiptReturnType,\n  getTransactionReceipt,\n} from './getTransactionReceipt.js'\nimport {\n  type WatchBlockNumberErrorType,\n  watchBlockNumber,\n} from './watchBlockNumber.js'\n\nexport type ReplacementReason = 'cancelled' | 'replaced' | 'repriced'\nexport type ReplacementReturnType<\n  chain extends Chain | undefined = Chain | undefined,\n> = {\n  reason: ReplacementReason\n  replacedTransaction: Transaction\n  transaction: Transaction\n  transactionReceipt: GetTransactionReceiptReturnType<chain>\n}\n\nexport type WaitForTransactionReceiptReturnType<\n  chain extends Chain | undefined = Chain | undefined,\n> = GetTransactionReceiptReturnType<chain>\n\nexport type WaitForTransactionReceiptParameters<\n  chain extends Chain | undefined = Chain | undefined,\n> = {\n  /**\n   * The number of confirmations (blocks that have passed) to wait before resolving.\n   * @default 1\n   */\n  confirmations?: number | undefined\n  /** The hash of the transaction. */\n  hash: Hash\n  /** Optional callback to emit if the transaction has been replaced. */\n  onReplaced?: ((response: ReplacementReturnType<chain>) => void) | undefined\n  /**\n   * Polling frequency (in ms). Defaults to the client's pollingInterval config.\n   * @default client.pollingInterval\n   */\n  pollingInterval?: number | undefined\n  /**\n   * Number of times to retry if the transaction or block is not found.\n   * @default 6 (exponential backoff)\n   */\n  retryCount?: WithRetryParameters['retryCount'] | undefined\n  /**\n   * Time to wait (in ms) between retries.\n   * @default `({ count }) => ~~(1 << count) * 200` (exponential backoff)\n   */\n  retryDelay?: WithRetryParameters['delay'] | undefined\n  /**\n   * Optional timeout (in milliseconds) to wait before stopping polling.\n   * @default 180_000\n   */\n  timeout?: number | undefined\n}\n\nexport type WaitForTransactionReceiptErrorType =\n  | ObserveErrorType\n  | GetBlockErrorType\n  | GetTransactionErrorType\n  | GetTransactionReceiptErrorType\n  | WatchBlockNumberErrorType\n  | ErrorType\n\n/**\n * Waits for the [Transaction](https://viem.sh/docs/glossary/terms#transaction) to be included on a [Block](https://viem.sh/docs/glossary/terms#block) (one confirmation), and then returns the [Transaction Receipt](https://viem.sh/docs/glossary/terms#transaction-receipt).\n *\n * - Docs: https://viem.sh/docs/actions/public/waitForTransactionReceipt\n * - Example: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions/sending-transactions\n * - JSON-RPC Methods:\n *   - Polls [`eth_getTransactionReceipt`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionReceipt) on each block until it has been processed.\n *   - If a Transaction has been replaced:\n *     - Calls [`eth_getBlockByNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblockbynumber) and extracts the transactions\n *     - Checks if one of the Transactions is a replacement\n *     - If so, calls [`eth_getTransactionReceipt`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionReceipt).\n *\n * The `waitForTransactionReceipt` action additionally supports Replacement detection (e.g. sped up Transactions).\n *\n * Transactions can be replaced when a user modifies their transaction in their wallet (to speed up or cancel). Transactions are replaced when they are sent from the same nonce.\n *\n * There are 3 types of Transaction Replacement reasons:\n *\n * - `repriced`: The gas price has been modified (e.g. different `maxFeePerGas`)\n * - `cancelled`: The Transaction has been cancelled (e.g. `value === 0n`)\n * - `replaced`: The Transaction has been replaced (e.g. different `value` or `data`)\n *\n * @param client - Client to use\n * @param parameters - {@link WaitForTransactionReceiptParameters}\n * @returns The transaction receipt. {@link WaitForTransactionReceiptReturnType}\n *\n * @example\n * import { createPublicClient, waitForTransactionReceipt, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const transactionReceipt = await waitForTransactionReceipt(client, {\n *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n * })\n */\nexport async function waitForTransactionReceipt<\n  chain extends Chain | undefined,\n>(\n  client: Client<Transport, chain>,\n  {\n    confirmations = 1,\n    hash,\n    onReplaced,\n    pollingInterval = client.pollingInterval,\n    retryCount = 6,\n    retryDelay = ({ count }) => ~~(1 << count) * 200, // exponential backoff\n    timeout = 180_000,\n  }: WaitForTransactionReceiptParameters<chain>,\n): Promise<WaitForTransactionReceiptReturnType<chain>> {\n  const observerId = stringify(['waitForTransactionReceipt', client.uid, hash])\n\n  let transaction: GetTransactionReturnType<chain> | undefined\n  let replacedTransaction: GetTransactionReturnType<chain> | undefined\n  let receipt: GetTransactionReceiptReturnType<chain>\n  let retrying = false\n\n  return new Promise((resolve, reject) => {\n    if (timeout)\n      setTimeout(\n        () => reject(new WaitForTransactionReceiptTimeoutError({ hash })),\n        timeout,\n      )\n\n    const _unobserve = observe(\n      observerId,\n      { onReplaced, resolve, reject },\n      (emit) => {\n        const _unwatch = getAction(\n          client,\n          watchBlockNumber,\n          'watchBlockNumber',\n        )({\n          emitMissed: true,\n          emitOnBegin: true,\n          poll: true,\n          pollingInterval,\n          async onBlockNumber(blockNumber_) {\n            const done = (fn: () => void) => {\n              _unwatch()\n              fn()\n              _unobserve()\n            }\n\n            let blockNumber = blockNumber_\n\n            if (retrying) return\n\n            try {\n              // If we already have a valid receipt, let's check if we have enough\n              // confirmations. If we do, then we can resolve.\n              if (receipt) {\n                if (\n                  confirmations > 1 &&\n                  (!receipt.blockNumber ||\n                    blockNumber - receipt.blockNumber + 1n < confirmations)\n                )\n                  return\n\n                done(() => emit.resolve(receipt))\n                return\n              }\n\n              // Get the transaction to check if it's been replaced.\n              // We need to retry as some RPC Providers may be slow to sync\n              // up mined transactions.\n              if (!transaction) {\n                retrying = true\n                await withRetry(\n                  async () => {\n                    transaction = (await getAction(\n                      client,\n                      getTransaction,\n                      'getTransaction',\n                    )({ hash })) as GetTransactionReturnType<chain>\n                    if (transaction.blockNumber)\n                      blockNumber = transaction.blockNumber\n                  },\n                  {\n                    delay: retryDelay,\n                    retryCount,\n                  },\n                )\n                retrying = false\n              }\n\n              // Get the receipt to check if it's been processed.\n              receipt = await getAction(\n                client,\n                getTransactionReceipt,\n                'getTransactionReceipt',\n              )({ hash })\n\n              // Check if we have enough confirmations. If not, continue polling.\n              if (\n                confirmations > 1 &&\n                (!receipt.blockNumber ||\n                  blockNumber - receipt.blockNumber + 1n < confirmations)\n              )\n                return\n\n              done(() => emit.resolve(receipt))\n            } catch (err) {\n              // If the receipt is not found, the transaction will be pending.\n              // We need to check if it has potentially been replaced.\n              if (\n                err instanceof TransactionNotFoundError ||\n                err instanceof TransactionReceiptNotFoundError\n              ) {\n                if (!transaction) {\n                  retrying = false\n                  return\n                }\n\n                try {\n                  replacedTransaction = transaction\n\n                  // Let's retrieve the transactions from the current block.\n                  // We need to retry as some RPC Providers may be slow to sync\n                  // up mined blocks.\n                  retrying = true\n                  const block = await withRetry(\n                    () =>\n                      getAction(\n                        client,\n                        getBlock,\n                        'getBlock',\n                      )({\n                        blockNumber,\n                        includeTransactions: true,\n                      }),\n                    {\n                      delay: retryDelay,\n                      retryCount,\n                      shouldRetry: ({ error }) =>\n                        error instanceof BlockNotFoundError,\n                    },\n                  )\n                  retrying = false\n\n                  const replacementTransaction = (\n                    block.transactions as {} as Transaction[]\n                  ).find(\n                    ({ from, nonce }) =>\n                      from === replacedTransaction!.from &&\n                      nonce === replacedTransaction!.nonce,\n                  )\n\n                  // If we couldn't find a replacement transaction, continue polling.\n                  if (!replacementTransaction) return\n\n                  // If we found a replacement transaction, return it's receipt.\n                  receipt = await getAction(\n                    client,\n                    getTransactionReceipt,\n                    'getTransactionReceipt',\n                  )({\n                    hash: replacementTransaction.hash,\n                  })\n\n                  // Check if we have enough confirmations. If not, continue polling.\n                  if (\n                    confirmations > 1 &&\n                    (!receipt.blockNumber ||\n                      blockNumber - receipt.blockNumber + 1n < confirmations)\n                  )\n                    return\n\n                  let reason: ReplacementReason = 'replaced'\n                  if (\n                    replacementTransaction.to === replacedTransaction.to &&\n                    replacementTransaction.value === replacedTransaction.value\n                  ) {\n                    reason = 'repriced'\n                  } else if (\n                    replacementTransaction.from === replacementTransaction.to &&\n                    replacementTransaction.value === 0n\n                  ) {\n                    reason = 'cancelled'\n                  }\n\n                  done(() => {\n                    emit.onReplaced?.({\n                      reason,\n                      replacedTransaction: replacedTransaction! as any,\n                      transaction: replacementTransaction,\n                      transactionReceipt: receipt,\n                    })\n                    emit.resolve(receipt)\n                  })\n                } catch (err_) {\n                  done(() => emit.reject(err_))\n                }\n              } else {\n                done(() => emit.reject(err))\n              }\n            }\n          },\n        })\n      },\n    )\n  })\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAkIO,eAAe,0BAGpB,MAAgC,EAChC,EACE,gBAAgB,CAAC,EACjB,IAAI,EACJ,UAAU,EACV,kBAAkB,OAAO,eAAe,EACxC,aAAa,CAAC,EACd,aAAa,CAAC,EAAE,KAAK,EAAE,GAAK,CAAC,CAAC,CAAC,KAAK,KAAK,IAAI,GAAG,EAChD,UAAU,OAAO,EAC0B;IAE7C,MAAM,aAAa,CAAA,GAAA,8IAAA,CAAA,YAAS,AAAT,EAAU;QAAC;QAA6B,OAAO,GAAG;QAAE;KAAK;IAE5E,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI,WAAW;IAEf,OAAO,IAAI,QAAQ,CAAC,SAAS;QAC3B,IAAI,SACF,WACE,IAAM,OAAO,IAAI,iJAAA,CAAA,wCAAqC,CAAC;gBAAE;YAAI,KAC7D;QAGJ,MAAM,aAAa,CAAA,GAAA,4IAAA,CAAA,UAAO,AAAP,EACjB,YACA;YAAE;YAAY;YAAS;QAAM,GAC7B,CAAC;YACC,MAAM,WAAW,CAAA,GAAA,8IAAA,CAAA,YAAS,AAAT,EACf,QACA,iKAAA,CAAA,mBAAgB,EAChB,oBACA;gBACA,YAAY;gBACZ,aAAa;gBACb,MAAM;gBACN;gBACA,MAAM,eAAc,YAAY;oBAC9B,MAAM,OAAO,CAAC;wBACZ;wBACA;wBACA;oBACF;oBAEA,IAAI,cAAc;oBAElB,IAAI,UAAU;oBAEd,IAAI;wBACF,oEAAoE;wBACpE,gDAAgD;wBAChD,IAAI,SAAS;4BACX,IACE,gBAAgB,KAChB,CAAC,CAAC,QAAQ,WAAW,IACnB,cAAc,QAAQ,WAAW,GAAG,EAAE,GAAG,aAAa,GAExD;4BAEF,KAAK,IAAM,KAAK,OAAO,CAAC;4BACxB;wBACF;wBAEA,sDAAsD;wBACtD,6DAA6D;wBAC7D,yBAAyB;wBACzB,IAAI,CAAC,aAAa;4BAChB,WAAW;4BACX,MAAM,CAAA,GAAA,yJAAA,CAAA,YAAS,AAAT,EACJ;gCACE,cAAe,MAAM,CAAA,GAAA,8IAAA,CAAA,YAAS,AAAT,EACnB,QACA,+JAAA,CAAA,iBAAc,EACd,kBACA;oCAAE;gCAAI;gCACR,IAAI,YAAY,WAAW,EACzB,cAAc,YAAY,WAAW;4BACzC,GACA;gCACE,OAAO;gCACP;;4BAGJ,WAAW;wBACb;wBAEA,mDAAmD;wBACnD,UAAU,MAAM,CAAA,GAAA,8IAAA,CAAA,YAAS,AAAT,EACd,QACA,sKAAA,CAAA,wBAAqB,EACrB,yBACA;4BAAE;wBAAI;wBAER,mEAAmE;wBACnE,IACE,gBAAgB,KAChB,CAAC,CAAC,QAAQ,WAAW,IACnB,cAAc,QAAQ,WAAW,GAAG,EAAE,GAAG,aAAa,GAExD;wBAEF,KAAK,IAAM,KAAK,OAAO,CAAC;oBAC1B,EAAE,OAAO,KAAK;wBACZ,gEAAgE;wBAChE,wDAAwD;wBACxD,IACE,eAAe,iJAAA,CAAA,2BAAwB,IACvC,eAAe,iJAAA,CAAA,kCAA+B,EAC9C;4BACA,IAAI,CAAC,aAAa;gCAChB,WAAW;gCACX;4BACF;4BAEA,IAAI;gCACF,sBAAsB;gCAEtB,0DAA0D;gCAC1D,6DAA6D;gCAC7D,mBAAmB;gCACnB,WAAW;gCACX,MAAM,QAAQ,MAAM,CAAA,GAAA,yJAAA,CAAA,YAAS,AAAT,EAClB,IACE,CAAA,GAAA,8IAAA,CAAA,YAAS,AAAT,EACE,QACA,yJAAA,CAAA,WAAQ,EACR,YACA;wCACA;wCACA,qBAAqB;wCAEzB;oCACE,OAAO;oCACP;oCACA,aAAa,CAAC,EAAE,KAAK,EAAE,GACrB,iBAAiB,2IAAA,CAAA,qBAAkB;;gCAGzC,WAAW;gCAEX,MAAM,yBACJ,MAAM,YACP,CAAC,IAAI,CACJ,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,GACd,SAAS,oBAAqB,IAAI,IAClC,UAAU,oBAAqB,KAAK;gCAGxC,mEAAmE;gCACnE,IAAI,CAAC,wBAAwB;gCAE7B,8DAA8D;gCAC9D,UAAU,MAAM,CAAA,GAAA,8IAAA,CAAA,YAAS,AAAT,EACd,QACA,sKAAA,CAAA,wBAAqB,EACrB,yBACA;oCACA,MAAM,uBAAuB,IAAI;;gCAGnC,mEAAmE;gCACnE,IACE,gBAAgB,KAChB,CAAC,CAAC,QAAQ,WAAW,IACnB,cAAc,QAAQ,WAAW,GAAG,EAAE,GAAG,aAAa,GAExD;gCAEF,IAAI,SAA4B;gCAChC,IACE,uBAAuB,EAAE,KAAK,oBAAoB,EAAE,IACpD,uBAAuB,KAAK,KAAK,oBAAoB,KAAK,EAC1D;oCACA,SAAS;gCACX,OAAO,IACL,uBAAuB,IAAI,KAAK,uBAAuB,EAAE,IACzD,uBAAuB,KAAK,KAAK,EAAE,EACnC;oCACA,SAAS;gCACX;gCAEA,KAAK;oCACH,KAAK,UAAU,GAAG;wCAChB;wCACA,qBAAqB;wCACrB,aAAa;wCACb,oBAAoB;;oCAEtB,KAAK,OAAO,CAAC;gCACf;4BACF,EAAE,OAAO,MAAM;gCACb,KAAK,IAAM,KAAK,MAAM,CAAC;4BACzB;wBACF,OAAO;4BACL,KAAK,IAAM,KAAK,MAAM,CAAC;wBACzB;oBACF;gBACF;;QAEJ;IAEJ;AACF"}},
    {"offset": {"line": 11468, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11473, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/actions/public/watchBlocks.ts"],"sourcesContent":["import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { HasTransportType } from '../../types/transport.js'\nimport { formatBlock } from '../../utils/formatters/block.js'\nimport { getAction } from '../../utils/getAction.js'\nimport { observe } from '../../utils/observe.js'\nimport { type PollErrorType, poll } from '../../utils/poll.js'\nimport { type StringifyErrorType, stringify } from '../../utils/stringify.js'\n\nimport { type GetBlockReturnType, getBlock } from './getBlock.js'\n\nexport type OnBlockParameter<\n  chain extends Chain | undefined = Chain,\n  includeTransactions extends boolean = false,\n  blockTag extends BlockTag = 'latest',\n> = GetBlockReturnType<chain, includeTransactions, blockTag>\n\nexport type OnBlock<\n  chain extends Chain | undefined = Chain,\n  includeTransactions extends boolean = false,\n  blockTag extends BlockTag = 'latest',\n> = (\n  block: OnBlockParameter<chain, includeTransactions, blockTag>,\n  prevBlock: OnBlockParameter<chain, includeTransactions, blockTag> | undefined,\n) => void\n\nexport type WatchBlocksParameters<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain,\n  includeTransactions extends boolean = false,\n  blockTag extends BlockTag = 'latest',\n> = {\n  /** The callback to call when a new block is received. */\n  onBlock: OnBlock<chain, includeTransactions, blockTag>\n  /** The callback to call when an error occurred when trying to get for a new block. */\n  onError?: ((error: Error) => void) | undefined\n} & (\n  | (HasTransportType<transport, 'webSocket'> extends true\n      ? {\n          blockTag?: undefined\n          emitMissed?: undefined\n          emitOnBegin?: undefined\n          includeTransactions?: undefined\n          /** Whether or not the WebSocket Transport should poll the JSON-RPC, rather than using `eth_subscribe`. */\n          poll?: false | undefined\n          pollingInterval?: undefined\n        }\n      : never)\n  | {\n      /** The block tag. Defaults to \"latest\". */\n      blockTag?: blockTag | BlockTag | undefined\n      /** Whether or not to emit the missed blocks to the callback. */\n      emitMissed?: boolean | undefined\n      /** Whether or not to emit the block to the callback when the subscription opens. */\n      emitOnBegin?: boolean | undefined\n      /** Whether or not to include transaction data in the response. */\n      includeTransactions?: includeTransactions | undefined\n      poll?: true | undefined\n      /** Polling frequency (in ms). Defaults to the client's pollingInterval config. */\n      pollingInterval?: number | undefined\n    }\n)\n\nexport type WatchBlocksReturnType = () => void\n\nexport type WatchBlocksErrorType =\n  | StringifyErrorType\n  | PollErrorType\n  | ErrorType\n\n/**\n * Watches and returns information for incoming blocks.\n *\n * - Docs: https://viem.sh/docs/actions/public/watchBlocks\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/blocks/watching-blocks\n * - JSON-RPC Methods:\n *   - When `poll: true`, calls [`eth_getBlockByNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getBlockByNumber) on a polling interval.\n *   - When `poll: false` & WebSocket Transport, uses a WebSocket subscription via [`eth_subscribe`](https://docs.alchemy.com/reference/eth-subscribe-polygon) and the `\"newHeads\"` event.\n *\n * @param client - Client to use\n * @param parameters - {@link WatchBlocksParameters}\n * @returns A function that can be invoked to stop watching for new block numbers. {@link WatchBlocksReturnType}\n *\n * @example\n * import { createPublicClient, watchBlocks, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const unwatch = watchBlocks(client, {\n *   onBlock: (block) => console.log(block),\n * })\n */\nexport function watchBlocks<\n  transport extends Transport,\n  chain extends Chain | undefined,\n  includeTransactions extends boolean = false,\n  blockTag extends BlockTag = 'latest',\n>(\n  client: Client<transport, chain>,\n  {\n    blockTag = 'latest',\n    emitMissed = false,\n    emitOnBegin = false,\n    onBlock,\n    onError,\n    includeTransactions: includeTransactions_,\n    poll: poll_,\n    pollingInterval = client.pollingInterval,\n  }: WatchBlocksParameters<transport, chain, includeTransactions, blockTag>,\n): WatchBlocksReturnType {\n  const enablePolling = (() => {\n    if (typeof poll_ !== 'undefined') return poll_\n    if (client.transport.type === 'webSocket') return false\n    if (\n      client.transport.type === 'fallback' &&\n      client.transport.transports[0].config.type === 'webSocket'\n    )\n      return false\n    return true\n  })()\n  const includeTransactions = includeTransactions_ ?? false\n\n  let prevBlock:\n    | GetBlockReturnType<chain, false | includeTransactions, 'latest'>\n    | undefined\n\n  const pollBlocks = () => {\n    const observerId = stringify([\n      'watchBlocks',\n      client.uid,\n      blockTag,\n      emitMissed,\n      emitOnBegin,\n      includeTransactions,\n      pollingInterval,\n    ])\n\n    return observe(observerId, { onBlock, onError }, (emit) =>\n      poll(\n        async () => {\n          try {\n            const block = await getAction(\n              client,\n              getBlock,\n              'getBlock',\n            )({\n              blockTag,\n              includeTransactions,\n            })\n            if (block.number && prevBlock?.number) {\n              // If the current block number is the same as the previous,\n              // we can skip.\n              if (block.number === prevBlock.number) return\n\n              // If we have missed out on some previous blocks, and the\n              // `emitMissed` flag is truthy, let's emit those blocks.\n              if (block.number - prevBlock.number > 1 && emitMissed) {\n                for (let i = prevBlock?.number + 1n; i < block.number; i++) {\n                  const block = (await getAction(\n                    client,\n                    getBlock,\n                    'getBlock',\n                  )({\n                    blockNumber: i,\n                    includeTransactions,\n                  })) as GetBlockReturnType<chain>\n                  emit.onBlock(block as any, prevBlock as any)\n                  prevBlock = block\n                }\n              }\n            }\n\n            if (\n              // If no previous block exists, emit.\n              !prevBlock?.number ||\n              // If the block tag is \"pending\" with no block number, emit.\n              (blockTag === 'pending' && !block?.number) ||\n              // If the next block number is greater than the previous block number, emit.\n              // We don't want to emit blocks in the past.\n              (block.number && block.number > prevBlock.number)\n            ) {\n              emit.onBlock(block as any, prevBlock as any)\n              prevBlock = block as any\n            }\n          } catch (err) {\n            emit.onError?.(err as Error)\n          }\n        },\n        {\n          emitOnBegin,\n          interval: pollingInterval,\n        },\n      ),\n    )\n  }\n\n  const subscribeBlocks = () => {\n    let active = true\n    let emitFetched = true\n    let unsubscribe = () => (active = false)\n    ;(async () => {\n      try {\n        if (emitOnBegin) {\n          getAction(\n            client,\n            getBlock,\n            'getBlock',\n          )({\n            blockTag,\n            includeTransactions,\n          }).then((block) => {\n            if (!active) return\n            if (!emitFetched) return\n            onBlock(block as any, undefined)\n            emitFetched = false\n          })\n        }\n\n        const transport = (() => {\n          if (client.transport.type === 'fallback') {\n            const transport = client.transport.transports.find(\n              (transport: ReturnType<Transport>) =>\n                transport.config.type === 'webSocket',\n            )\n            if (!transport) return client.transport\n            return transport.value\n          }\n          return client.transport\n        })()\n\n        const { unsubscribe: unsubscribe_ } = await transport.subscribe({\n          params: ['newHeads'],\n          onData(data: any) {\n            if (!active) return\n            const format =\n              client.chain?.formatters?.block?.format || formatBlock\n            const block = format(data.result)\n            onBlock(block, prevBlock as any)\n            emitFetched = false\n            prevBlock = block\n          },\n          onError(error: Error) {\n            onError?.(error)\n          },\n        })\n        unsubscribe = unsubscribe_\n        if (!active) unsubscribe()\n      } catch (err) {\n        onError?.(err as Error)\n      }\n    })()\n    return () => unsubscribe()\n  }\n\n  return enablePolling ? pollBlocks() : subscribeBlocks()\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 11598, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11603, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/actions/public/watchContractEvent.ts"],"sourcesContent":["import type { Abi, Address, ExtractAbiEvent } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Filter } from '../../types/filter.js'\nimport type { Log } from '../../types/log.js'\n\nimport {\n  DecodeLogDataMismatch,\n  DecodeLogTopicsMismatch,\n} from '../../errors/abi.js'\nimport { InvalidInputRpcError } from '../../errors/rpc.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockNumber } from '../../types/block.js'\nimport type {\n  ContractEventArgs,\n  ContractEventName,\n} from '../../types/contract.js'\nimport type { LogTopic } from '../../types/misc.js'\nimport type { GetPollOptions } from '../../types/transport.js'\nimport { decodeEventLog } from '../../utils/abi/decodeEventLog.js'\nimport {\n  type EncodeEventTopicsParameters,\n  encodeEventTopics,\n} from '../../utils/abi/encodeEventTopics.js'\nimport { formatLog } from '../../utils/formatters/log.js'\nimport { getAction } from '../../utils/getAction.js'\nimport { type ObserveErrorType, observe } from '../../utils/observe.js'\nimport { poll } from '../../utils/poll.js'\nimport { type StringifyErrorType, stringify } from '../../utils/stringify.js'\nimport { createContractEventFilter } from './createContractEventFilter.js'\nimport { getBlockNumber } from './getBlockNumber.js'\nimport {\n  type GetContractEventsParameters,\n  getContractEvents,\n} from './getContractEvents.js'\nimport { getFilterChanges } from './getFilterChanges.js'\nimport { uninstallFilter } from './uninstallFilter.js'\n\nexport type WatchContractEventOnLogsParameter<\n  abi extends Abi | readonly unknown[] = Abi,\n  eventName extends ContractEventName<abi> = ContractEventName<abi>,\n  strict extends boolean | undefined = undefined,\n> = abi extends Abi\n  ? Abi extends abi\n    ? Log[]\n    : Log<bigint, number, false, ExtractAbiEvent<abi, eventName>, strict>[]\n  : Log[]\n\nexport type WatchContractEventOnLogsFn<\n  abi extends Abi | readonly unknown[] = Abi,\n  eventName extends ContractEventName<abi> = ContractEventName<abi>,\n  strict extends boolean | undefined = undefined,\n> = (logs: WatchContractEventOnLogsParameter<abi, eventName, strict>) => void\n\nexport type WatchContractEventParameters<\n  abi extends Abi | readonly unknown[] = Abi,\n  eventName extends ContractEventName<abi> | undefined = ContractEventName<abi>,\n  strict extends boolean | undefined = undefined,\n  transport extends Transport = Transport,\n> = {\n  /** The address of the contract. */\n  address?: Address | Address[] | undefined\n  /** Contract ABI. */\n  abi: abi\n  args?:\n    | ContractEventArgs<\n        abi,\n        eventName extends ContractEventName<abi>\n          ? eventName\n          : ContractEventName<abi>\n      >\n    | undefined\n  /** Contract event. */\n  eventName?: eventName | ContractEventName<abi> | undefined\n  /** Block to start listening from. */\n  fromBlock?: BlockNumber<bigint> | undefined\n  /** The callback to call when an error occurred when trying to get for a new block. */\n  onError?: ((error: Error) => void) | undefined\n  /** The callback to call when new event logs are received. */\n  onLogs: WatchContractEventOnLogsFn<\n    abi,\n    eventName extends ContractEventName<abi>\n      ? eventName\n      : ContractEventName<abi>,\n    strict\n  >\n  /**\n   * Whether or not the logs must match the indexed/non-indexed arguments on `event`.\n   * @default false\n   */\n  strict?: strict | boolean | undefined\n} & GetPollOptions<transport>\n\nexport type WatchContractEventReturnType = () => void\n\nexport type WatchContractEventErrorType =\n  | StringifyErrorType\n  | ObserveErrorType\n  | ErrorType\n\n/**\n * Watches and returns emitted contract event logs.\n *\n * - Docs: https://viem.sh/docs/contract/watchContractEvent\n *\n * This Action will batch up all the event logs found within the [`pollingInterval`](https://viem.sh/docs/contract/watchContractEvent#pollinginterval-optional), and invoke them via [`onLogs`](https://viem.sh/docs/contract/watchContractEvent#onLogs).\n *\n * `watchContractEvent` will attempt to create an [Event Filter](https://viem.sh/docs/contract/createContractEventFilter) and listen to changes to the Filter per polling interval, however, if the RPC Provider does not support Filters (e.g. `eth_newFilter`), then `watchContractEvent` will fall back to using [`getLogs`](https://viem.sh/docs/actions/public/getLogs) instead.\n *\n * @param client - Client to use\n * @param parameters - {@link WatchContractEventParameters}\n * @returns A function that can be invoked to stop watching for new event logs. {@link WatchContractEventReturnType}\n *\n * @example\n * import { createPublicClient, http, parseAbi } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { watchContractEvent } from 'viem/contract'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const unwatch = watchContractEvent(client, {\n *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *   abi: parseAbi(['event Transfer(address indexed from, address indexed to, uint256 value)']),\n *   eventName: 'Transfer',\n *   args: { from: '0xc961145a54C96E3aE9bAA048c4F4D6b04C13916b' },\n *   onLogs: (logs) => console.log(logs),\n * })\n */\nexport function watchContractEvent<\n  chain extends Chain | undefined,\n  const abi extends Abi | readonly unknown[],\n  eventName extends ContractEventName<abi> | undefined = undefined,\n  strict extends boolean | undefined = undefined,\n  transport extends Transport = Transport,\n>(\n  client: Client<transport, chain>,\n  parameters: WatchContractEventParameters<abi, eventName, strict, transport>,\n): WatchContractEventReturnType {\n  const {\n    abi,\n    address,\n    args,\n    batch = true,\n    eventName,\n    fromBlock,\n    onError,\n    onLogs,\n    poll: poll_,\n    pollingInterval = client.pollingInterval,\n    strict: strict_,\n  } = parameters\n\n  const enablePolling = (() => {\n    if (typeof poll_ !== 'undefined') return poll_\n    if (typeof fromBlock === 'bigint') return true\n    if (client.transport.type === 'webSocket') return false\n    if (\n      client.transport.type === 'fallback' &&\n      client.transport.transports[0].config.type === 'webSocket'\n    )\n      return false\n    return true\n  })()\n\n  const pollContractEvent = () => {\n    const strict = strict_ ?? false\n    const observerId = stringify([\n      'watchContractEvent',\n      address,\n      args,\n      batch,\n      client.uid,\n      eventName,\n      pollingInterval,\n      strict,\n      fromBlock,\n    ])\n\n    return observe(observerId, { onLogs, onError }, (emit) => {\n      let previousBlockNumber: bigint\n      if (fromBlock !== undefined) previousBlockNumber = fromBlock - 1n\n      let filter: Filter<'event', abi, eventName> | undefined\n      let initialized = false\n\n      const unwatch = poll(\n        async () => {\n          if (!initialized) {\n            try {\n              filter = (await getAction(\n                client,\n                createContractEventFilter,\n                'createContractEventFilter',\n              )({\n                abi,\n                address,\n                args: args as any,\n                eventName: eventName as any,\n                strict: strict as any,\n                fromBlock,\n              })) as Filter<'event', abi, eventName>\n            } catch {}\n            initialized = true\n            return\n          }\n\n          try {\n            let logs: Log[]\n            if (filter) {\n              logs = await getAction(\n                client,\n                getFilterChanges,\n                'getFilterChanges',\n              )({ filter })\n            } else {\n              // If the filter doesn't exist, we will fall back to use `getLogs`.\n              // The fall back exists because some RPC Providers do not support filters.\n\n              // Fetch the block number to use for `getLogs`.\n              const blockNumber = await getAction(\n                client,\n                getBlockNumber,\n                'getBlockNumber',\n              )({})\n\n              // If the block number has changed, we will need to fetch the logs.\n              // If the block number doesn't exist, we are yet to reach the first poll interval,\n              // so do not emit any logs.\n              if (previousBlockNumber && previousBlockNumber < blockNumber) {\n                logs = await getAction(\n                  client,\n                  getContractEvents,\n                  'getContractEvents',\n                )({\n                  abi,\n                  address,\n                  args,\n                  eventName,\n                  fromBlock: previousBlockNumber + 1n,\n                  toBlock: blockNumber,\n                  strict,\n                } as {} as GetContractEventsParameters)\n              } else {\n                logs = []\n              }\n              previousBlockNumber = blockNumber\n            }\n\n            if (logs.length === 0) return\n            if (batch) emit.onLogs(logs as any)\n            else for (const log of logs) emit.onLogs([log] as any)\n          } catch (err) {\n            // If a filter has been set and gets uninstalled, providers will throw an InvalidInput error.\n            // Reinitialize the filter when this occurs\n            if (filter && err instanceof InvalidInputRpcError)\n              initialized = false\n            emit.onError?.(err as Error)\n          }\n        },\n        {\n          emitOnBegin: true,\n          interval: pollingInterval,\n        },\n      )\n\n      return async () => {\n        if (filter)\n          await getAction(\n            client,\n            uninstallFilter,\n            'uninstallFilter',\n          )({ filter })\n        unwatch()\n      }\n    })\n  }\n\n  const subscribeContractEvent = () => {\n    const strict = strict_ ?? false\n    const observerId = stringify([\n      'watchContractEvent',\n      address,\n      args,\n      batch,\n      client.uid,\n      eventName,\n      pollingInterval,\n      strict,\n    ])\n\n    let active = true\n    let unsubscribe = () => (active = false)\n    return observe(observerId, { onLogs, onError }, (emit) => {\n      ;(async () => {\n        try {\n          const transport = (() => {\n            if (client.transport.type === 'fallback') {\n              const transport = client.transport.transports.find(\n                (transport: ReturnType<Transport>) =>\n                  transport.config.type === 'webSocket',\n              )\n              if (!transport) return client.transport\n              return transport.value\n            }\n            return client.transport\n          })()\n\n          const topics: LogTopic[] = eventName\n            ? encodeEventTopics({\n                abi: abi,\n                eventName: eventName,\n                args,\n              } as EncodeEventTopicsParameters)\n            : []\n\n          const { unsubscribe: unsubscribe_ } = await transport.subscribe({\n            params: ['logs', { address, topics }],\n            onData(data: any) {\n              if (!active) return\n              const log = data.result\n              try {\n                const { eventName, args } = decodeEventLog({\n                  abi: abi,\n                  data: log.data,\n                  topics: log.topics as any,\n                  strict: strict_,\n                })\n                const formatted = formatLog(log, {\n                  args,\n                  eventName: eventName as string,\n                })\n                emit.onLogs([formatted] as any)\n              } catch (err) {\n                let eventName: string | undefined\n                let isUnnamed: boolean | undefined\n                if (\n                  err instanceof DecodeLogDataMismatch ||\n                  err instanceof DecodeLogTopicsMismatch\n                ) {\n                  // If strict mode is on, and log data/topics do not match event definition, skip.\n                  if (strict_) return\n                  eventName = err.abiItem.name\n                  isUnnamed = err.abiItem.inputs?.some(\n                    (x) => !('name' in x && x.name),\n                  )\n                }\n\n                // Set args to empty if there is an error decoding (e.g. indexed/non-indexed params mismatch).\n                const formatted = formatLog(log, {\n                  args: isUnnamed ? [] : {},\n                  eventName,\n                })\n                emit.onLogs([formatted] as any)\n              }\n            },\n            onError(error: Error) {\n              emit.onError?.(error)\n            },\n          })\n          unsubscribe = unsubscribe_\n          if (!active) unsubscribe()\n        } catch (err) {\n          onError?.(err as Error)\n        }\n      })()\n      return () => unsubscribe()\n    })\n  }\n\n  return enablePolling ? pollContractEvent() : subscribeContractEvent()\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 11825, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11830, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/actions/public/watchEvent.ts"],"sourcesContent":["import type { AbiEvent, Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { Chain } from '../../types/chain.js'\nimport type {\n  MaybeAbiEventName,\n  MaybeExtractEventArgsFromAbi,\n} from '../../types/contract.js'\nimport type { Filter } from '../../types/filter.js'\nimport type { Log } from '../../types/log.js'\nimport type { LogTopic } from '../../types/misc.js'\nimport type { GetPollOptions } from '../../types/transport.js'\nimport {\n  type EncodeEventTopicsParameters,\n  encodeEventTopics,\n} from '../../utils/abi/encodeEventTopics.js'\nimport { type ObserveErrorType, observe } from '../../utils/observe.js'\nimport { poll } from '../../utils/poll.js'\nimport { type StringifyErrorType, stringify } from '../../utils/stringify.js'\n\nimport {\n  DecodeLogDataMismatch,\n  DecodeLogTopicsMismatch,\n} from '../../errors/abi.js'\nimport { InvalidInputRpcError } from '../../errors/rpc.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockNumber } from '../../types/block.js'\nimport { decodeEventLog } from '../../utils/abi/decodeEventLog.js'\nimport { formatLog } from '../../utils/formatters/log.js'\nimport { getAction } from '../../utils/getAction.js'\nimport {\n  type CreateEventFilterParameters,\n  createEventFilter,\n} from './createEventFilter.js'\nimport { getBlockNumber } from './getBlockNumber.js'\nimport { getFilterChanges } from './getFilterChanges.js'\nimport { type GetLogsParameters, getLogs } from './getLogs.js'\nimport { uninstallFilter } from './uninstallFilter.js'\n\nexport type WatchEventOnLogsParameter<\n  abiEvent extends AbiEvent | undefined = undefined,\n  abiEvents extends\n    | readonly AbiEvent[]\n    | readonly unknown[]\n    | undefined = abiEvent extends AbiEvent ? [abiEvent] : undefined,\n  strict extends boolean | undefined = undefined,\n  eventName extends string | undefined = MaybeAbiEventName<abiEvent>,\n> = Log<bigint, number, false, abiEvent, strict, abiEvents, eventName>[]\nexport type WatchEventOnLogsFn<\n  abiEvent extends AbiEvent | undefined = undefined,\n  abiEvents extends\n    | readonly AbiEvent[]\n    | readonly unknown[]\n    | undefined = abiEvent extends AbiEvent ? [abiEvent] : undefined,\n  strict extends boolean | undefined = undefined,\n  //\n  _eventName extends string | undefined = MaybeAbiEventName<abiEvent>,\n> = (\n  logs: WatchEventOnLogsParameter<abiEvent, abiEvents, strict, _eventName>,\n) => void\n\nexport type WatchEventParameters<\n  abiEvent extends AbiEvent | undefined = undefined,\n  abiEvents extends\n    | readonly AbiEvent[]\n    | readonly unknown[]\n    | undefined = abiEvent extends AbiEvent ? [abiEvent] : undefined,\n  strict extends boolean | undefined = undefined,\n  transport extends Transport = Transport,\n  //\n  _eventName extends string | undefined = MaybeAbiEventName<abiEvent>,\n> = {\n  /** The address of the contract. */\n  address?: Address | Address[] | undefined\n  /** Block to start listening from. */\n  fromBlock?: BlockNumber<bigint> | undefined\n  /** The callback to call when an error occurred when trying to get for a new block. */\n  onError?: ((error: Error) => void) | undefined\n  /** The callback to call when new event logs are received. */\n  onLogs: WatchEventOnLogsFn<abiEvent, abiEvents, strict, _eventName>\n} & GetPollOptions<transport> &\n  (\n    | {\n        event: abiEvent\n        events?: undefined\n        args?: MaybeExtractEventArgsFromAbi<abiEvents, _eventName> | undefined\n        /**\n         * Whether or not the logs must match the indexed/non-indexed arguments on `event`.\n         * @default false\n         */\n        strict?: strict | undefined\n      }\n    | {\n        event?: undefined\n        events?: abiEvents | undefined\n        args?: undefined\n        /**\n         * Whether or not the logs must match the indexed/non-indexed arguments on `event`.\n         * @default false\n         */\n        strict?: strict | undefined\n      }\n    | {\n        event?: undefined\n        events?: undefined\n        args?: undefined\n        strict?: undefined\n      }\n  )\n\nexport type WatchEventReturnType = () => void\n\nexport type WatchEventErrorType =\n  | StringifyErrorType\n  | ObserveErrorType\n  | ErrorType\n\n/**\n * Watches and returns emitted [Event Logs](https://viem.sh/docs/glossary/terms#event-log).\n *\n * - Docs: https://viem.sh/docs/actions/public/watchEvent\n * - JSON-RPC Methods:\n *   - **RPC Provider supports `eth_newFilter`:**\n *     - Calls [`eth_newFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newfilter) to create a filter (called on initialize).\n *     - On a polling interval, it will call [`eth_getFilterChanges`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getfilterchanges).\n *   - **RPC Provider does not support `eth_newFilter`:**\n *     - Calls [`eth_getLogs`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getlogs) for each block between the polling interval.\n *\n * This Action will batch up all the Event Logs found within the [`pollingInterval`](https://viem.sh/docs/actions/public/watchEvent#pollinginterval-optional), and invoke them via [`onLogs`](https://viem.sh/docs/actions/public/watchEvent#onLogs).\n *\n * `watchEvent` will attempt to create an [Event Filter](https://viem.sh/docs/actions/public/createEventFilter) and listen to changes to the Filter per polling interval, however, if the RPC Provider does not support Filters (e.g. `eth_newFilter`), then `watchEvent` will fall back to using [`getLogs`](https://viem.sh/docs/actions/public/getLogs) instead.\n *\n * @param client - Client to use\n * @param parameters - {@link WatchEventParameters}\n * @returns A function that can be invoked to stop watching for new Event Logs. {@link WatchEventReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { watchEvent } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const unwatch = watchEvent(client, {\n *   onLogs: (logs) => console.log(logs),\n * })\n */\nexport function watchEvent<\n  chain extends Chain | undefined,\n  const abiEvent extends AbiEvent | undefined = undefined,\n  const abiEvents extends\n    | readonly AbiEvent[]\n    | readonly unknown[]\n    | undefined = abiEvent extends AbiEvent ? [abiEvent] : undefined,\n  strict extends boolean | undefined = undefined,\n  transport extends Transport = Transport,\n  _eventName extends string | undefined = undefined,\n>(\n  client: Client<transport, chain>,\n  {\n    address,\n    args,\n    batch = true,\n    event,\n    events,\n    fromBlock,\n    onError,\n    onLogs,\n    poll: poll_,\n    pollingInterval = client.pollingInterval,\n    strict: strict_,\n  }: WatchEventParameters<abiEvent, abiEvents, strict, transport>,\n): WatchEventReturnType {\n  const enablePolling = (() => {\n    if (typeof poll_ !== 'undefined') return poll_\n    if (typeof fromBlock === 'bigint') return true\n    if (client.transport.type === 'webSocket') return false\n    if (\n      client.transport.type === 'fallback' &&\n      client.transport.transports[0].config.type === 'webSocket'\n    )\n      return false\n    return true\n  })()\n  const strict = strict_ ?? false\n\n  const pollEvent = () => {\n    const observerId = stringify([\n      'watchEvent',\n      address,\n      args,\n      batch,\n      client.uid,\n      event,\n      pollingInterval,\n      fromBlock,\n    ])\n\n    return observe(observerId, { onLogs, onError }, (emit) => {\n      let previousBlockNumber: bigint\n      if (fromBlock !== undefined) previousBlockNumber = fromBlock - 1n\n      let filter: Filter<'event', abiEvents, _eventName, any>\n      let initialized = false\n\n      const unwatch = poll(\n        async () => {\n          if (!initialized) {\n            try {\n              filter = (await getAction(\n                client,\n                createEventFilter as any,\n                'createEventFilter',\n              )({\n                address,\n                args,\n                event: event!,\n                events,\n                strict,\n                fromBlock,\n              } as unknown as CreateEventFilterParameters)) as unknown as Filter<\n                'event',\n                abiEvents,\n                _eventName\n              >\n            } catch {}\n            initialized = true\n            return\n          }\n\n          try {\n            let logs: Log[]\n            if (filter) {\n              logs = await getAction(\n                client,\n                getFilterChanges,\n                'getFilterChanges',\n              )({ filter })\n            } else {\n              // If the filter doesn't exist, we will fall back to use `getLogs`.\n              // The fall back exists because some RPC Providers do not support filters.\n\n              // Fetch the block number to use for `getLogs`.\n              const blockNumber = await getAction(\n                client,\n                getBlockNumber,\n                'getBlockNumber',\n              )({})\n\n              // If the block number has changed, we will need to fetch the logs.\n              // If the block number doesn't exist, we are yet to reach the first poll interval,\n              // so do not emit any logs.\n              if (previousBlockNumber && previousBlockNumber !== blockNumber) {\n                logs = await getAction(\n                  client,\n                  getLogs,\n                  'getLogs',\n                )({\n                  address,\n                  args,\n                  event: event!,\n                  events,\n                  fromBlock: previousBlockNumber + 1n,\n                  toBlock: blockNumber,\n                } as unknown as GetLogsParameters)\n              } else {\n                logs = []\n              }\n              previousBlockNumber = blockNumber\n            }\n\n            if (logs.length === 0) return\n            if (batch) emit.onLogs(logs as any)\n            else for (const log of logs) emit.onLogs([log] as any)\n          } catch (err) {\n            // If a filter has been set and gets uninstalled, providers will throw an InvalidInput error.\n            // Reinitialize the filter when this occurs\n            if (filter && err instanceof InvalidInputRpcError)\n              initialized = false\n            emit.onError?.(err as Error)\n          }\n        },\n        {\n          emitOnBegin: true,\n          interval: pollingInterval,\n        },\n      )\n\n      return async () => {\n        if (filter)\n          await getAction(\n            client,\n            uninstallFilter,\n            'uninstallFilter',\n          )({ filter })\n        unwatch()\n      }\n    })\n  }\n\n  const subscribeEvent = () => {\n    let active = true\n    let unsubscribe = () => (active = false)\n    ;(async () => {\n      try {\n        const transport = (() => {\n          if (client.transport.type === 'fallback') {\n            const transport = client.transport.transports.find(\n              (transport: ReturnType<Transport>) =>\n                transport.config.type === 'webSocket',\n            )\n            if (!transport) return client.transport\n            return transport.value\n          }\n          return client.transport\n        })()\n\n        const events_ = events ?? (event ? [event] : undefined)\n        let topics: LogTopic[] = []\n        if (events_) {\n          const encoded = (events_ as AbiEvent[]).flatMap((event) =>\n            encodeEventTopics({\n              abi: [event],\n              eventName: (event as AbiEvent).name,\n              args,\n            } as EncodeEventTopicsParameters),\n          )\n          // TODO: Clean up type casting\n          topics = [encoded as LogTopic]\n          if (event) topics = topics[0] as LogTopic[]\n        }\n\n        const { unsubscribe: unsubscribe_ } = await transport.subscribe({\n          params: ['logs', { address, topics }],\n          onData(data: any) {\n            if (!active) return\n            const log = data.result\n            try {\n              const { eventName, args } = decodeEventLog({\n                abi: events_ ?? [],\n                data: log.data,\n                topics: log.topics,\n                strict,\n              })\n              const formatted = formatLog(log, { args, eventName })\n              onLogs([formatted] as any)\n            } catch (err) {\n              let eventName: string | undefined\n              let isUnnamed: boolean | undefined\n              if (\n                err instanceof DecodeLogDataMismatch ||\n                err instanceof DecodeLogTopicsMismatch\n              ) {\n                // If strict mode is on, and log data/topics do not match event definition, skip.\n                if (strict_) return\n                eventName = err.abiItem.name\n                isUnnamed = err.abiItem.inputs?.some(\n                  (x) => !('name' in x && x.name),\n                )\n              }\n\n              // Set args to empty if there is an error decoding (e.g. indexed/non-indexed params mismatch).\n              const formatted = formatLog(log, {\n                args: isUnnamed ? [] : {},\n                eventName,\n              })\n              onLogs([formatted] as any)\n            }\n          },\n          onError(error: Error) {\n            onError?.(error)\n          },\n        })\n        unsubscribe = unsubscribe_\n        if (!active) unsubscribe()\n      } catch (err) {\n        onError?.(err as Error)\n      }\n    })()\n    return () => unsubscribe()\n  }\n\n  return enablePolling ? pollEvent() : subscribeEvent()\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 12045, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12050, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/actions/public/watchPendingTransactions.ts"],"sourcesContent":["import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Filter } from '../../types/filter.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { GetPollOptions } from '../../types/transport.js'\nimport { getAction } from '../../utils/getAction.js'\nimport { type ObserveErrorType, observe } from '../../utils/observe.js'\nimport { poll } from '../../utils/poll.js'\nimport { type StringifyErrorType, stringify } from '../../utils/stringify.js'\n\nimport { createPendingTransactionFilter } from './createPendingTransactionFilter.js'\nimport { getFilterChanges } from './getFilterChanges.js'\nimport { uninstallFilter } from './uninstallFilter.js'\n\nexport type OnTransactionsParameter = Hash[]\nexport type OnTransactionsFn = (transactions: OnTransactionsParameter) => void\n\nexport type WatchPendingTransactionsParameters<\n  transport extends Transport = Transport,\n> = {\n  /** The callback to call when an error occurred when trying to get for a new block. */\n  onError?: ((error: Error) => void) | undefined\n  /** The callback to call when new transactions are received. */\n  onTransactions: OnTransactionsFn\n} & GetPollOptions<transport>\n\nexport type WatchPendingTransactionsReturnType = () => void\n\nexport type WatchPendingTransactionsErrorType =\n  | StringifyErrorType\n  | ObserveErrorType\n  | ErrorType\n\n/**\n * Watches and returns pending transaction hashes.\n *\n * - Docs: https://viem.sh/docs/actions/public/watchPendingTransactions\n * - JSON-RPC Methods:\n *   - When `poll: true`\n *     - Calls [`eth_newPendingTransactionFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newpendingtransactionfilter) to initialize the filter.\n *     - Calls [`eth_getFilterChanges`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getFilterChanges) on a polling interval.\n *   - When `poll: false` & WebSocket Transport, uses a WebSocket subscription via [`eth_subscribe`](https://docs.alchemy.com/reference/eth-subscribe-polygon) and the `\"newPendingTransactions\"` event.\n *\n * This Action will batch up all the pending transactions found within the [`pollingInterval`](https://viem.sh/docs/actions/public/watchPendingTransactions#pollinginterval-optional), and invoke them via [`onTransactions`](https://viem.sh/docs/actions/public/watchPendingTransactions#ontransactions).\n *\n * @param client - Client to use\n * @param parameters - {@link WatchPendingTransactionsParameters}\n * @returns A function that can be invoked to stop watching for new pending transaction hashes. {@link WatchPendingTransactionsReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { watchPendingTransactions } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const unwatch = await watchPendingTransactions(client, {\n *   onTransactions: (hashes) => console.log(hashes),\n * })\n */\nexport function watchPendingTransactions<\n  transport extends Transport,\n  chain extends Chain | undefined,\n>(\n  client: Client<transport, chain>,\n  {\n    batch = true,\n    onError,\n    onTransactions,\n    poll: poll_,\n    pollingInterval = client.pollingInterval,\n  }: WatchPendingTransactionsParameters<transport>,\n) {\n  const enablePolling =\n    typeof poll_ !== 'undefined' ? poll_ : client.transport.type !== 'webSocket'\n\n  const pollPendingTransactions = () => {\n    const observerId = stringify([\n      'watchPendingTransactions',\n      client.uid,\n      batch,\n      pollingInterval,\n    ])\n    return observe(observerId, { onTransactions, onError }, (emit) => {\n      let filter: Filter<'transaction'>\n\n      const unwatch = poll(\n        async () => {\n          try {\n            if (!filter) {\n              try {\n                filter = await getAction(\n                  client,\n                  createPendingTransactionFilter,\n                  'createPendingTransactionFilter',\n                )({})\n                return\n              } catch (err) {\n                unwatch()\n                throw err\n              }\n            }\n\n            const hashes = await getAction(\n              client,\n              getFilterChanges,\n              'getFilterChanges',\n            )({ filter })\n            if (hashes.length === 0) return\n            if (batch) emit.onTransactions(hashes)\n            else for (const hash of hashes) emit.onTransactions([hash])\n          } catch (err) {\n            emit.onError?.(err as Error)\n          }\n        },\n        {\n          emitOnBegin: true,\n          interval: pollingInterval,\n        },\n      )\n\n      return async () => {\n        if (filter)\n          await getAction(\n            client,\n            uninstallFilter,\n            'uninstallFilter',\n          )({ filter })\n        unwatch()\n      }\n    })\n  }\n\n  const subscribePendingTransactions = () => {\n    let active = true\n    let unsubscribe = () => (active = false)\n    ;(async () => {\n      try {\n        const { unsubscribe: unsubscribe_ } = await client.transport.subscribe({\n          params: ['newPendingTransactions'],\n          onData(data: any) {\n            if (!active) return\n            const transaction = data.result\n            onTransactions([transaction])\n          },\n          onError(error: Error) {\n            onError?.(error)\n          },\n        })\n        unsubscribe = unsubscribe_\n        if (!active) unsubscribe()\n      } catch (err) {\n        onError?.(err as Error)\n      }\n    })()\n    return () => unsubscribe()\n  }\n\n  return enablePolling\n    ? pollPendingTransactions()\n    : subscribePendingTransactions()\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAgEM,SAAU,yBAId,MAAgC,EAChC,EACE,QAAQ,IAAI,EACZ,OAAO,EACP,cAAc,EACd,MAAM,KAAK,EACX,kBAAkB,OAAO,eAAe,EACM;IAEhD,MAAM,gBACJ,OAAO,UAAU,cAAc,QAAQ,OAAO,SAAS,CAAC,IAAI,KAAK;IAEnE,MAAM,0BAA0B;QAC9B,MAAM,aAAa,CAAA,GAAA,8IAAA,CAAA,YAAS,AAAT,EAAU;YAC3B;YACA,OAAO,GAAG;YACV;YACA;SACD;QACD,OAAO,CAAA,GAAA,4IAAA,CAAA,UAAO,AAAP,EAAQ,YAAY;YAAE;YAAgB;QAAO,GAAI,CAAC;YACvD,IAAI;YAEJ,MAAM,UAAU,CAAA,GAAA,yIAAA,CAAA,OAAI,AAAJ,EACd;gBACE,IAAI;oBACF,IAAI,CAAC,QAAQ;wBACX,IAAI;4BACF,SAAS,MAAM,CAAA,GAAA,8IAAA,CAAA,YAAS,AAAT,EACb,QACA,+KAAA,CAAA,iCAA8B,EAC9B,kCACA,CAAA;4BACF;wBACF,EAAE,OAAO,KAAK;4BACZ;4BACA,MAAM;wBACR;oBACF;oBAEA,MAAM,SAAS,MAAM,CAAA,GAAA,8IAAA,CAAA,YAAS,AAAT,EACnB,QACA,iKAAA,CAAA,mBAAgB,EAChB,oBACA;wBAAE;oBAAM;oBACV,IAAI,OAAO,MAAM,KAAK,GAAG;oBACzB,IAAI,OAAO,KAAK,cAAc,CAAC;yBAC1B,KAAK,MAAM,QAAQ,OAAQ,KAAK,cAAc,CAAC;wBAAC;qBAAK;gBAC5D,EAAE,OAAO,KAAK;oBACZ,KAAK,OAAO,GAAG;gBACjB;YACF,GACA;gBACE,aAAa;gBACb,UAAU;;YAId,OAAO;gBACL,IAAI,QACF,MAAM,CAAA,GAAA,8IAAA,CAAA,YAAS,AAAT,EACJ,QACA,gKAAA,CAAA,kBAAe,EACf,mBACA;oBAAE;gBAAM;gBACZ;YACF;QACF;IACF;IAEA,MAAM,+BAA+B;QACnC,IAAI,SAAS;QACb,IAAI,cAAc,IAAO,SAAS;QACjC,CAAC;YACA,IAAI;gBACF,MAAM,EAAE,aAAa,YAAY,EAAE,GAAG,MAAM,OAAO,SAAS,CAAC,SAAS,CAAC;oBACrE,QAAQ;wBAAC;qBAAyB;oBAClC,QAAO,IAAS;wBACd,IAAI,CAAC,QAAQ;wBACb,MAAM,cAAc,KAAK,MAAM;wBAC/B,eAAe;4BAAC;yBAAY;oBAC9B;oBACA,SAAQ,KAAY;wBAClB,UAAU;oBACZ;;gBAEF,cAAc;gBACd,IAAI,CAAC,QAAQ;YACf,EAAE,OAAO,KAAK;gBACZ,UAAU;YACZ;QACF,CAAC;QACD,OAAO,IAAM;IACf;IAEA,OAAO,gBACH,4BACA;AACN"}},
    {"offset": {"line": 12146, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12151, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/siwe/parseSiweMessage.ts"],"sourcesContent":["import type { Address } from 'abitype'\n\nimport type { ExactPartial, Prettify } from '../../types/utils.js'\nimport type { SiweMessage } from './types.js'\n\n/**\n * @description Parses EIP-4361 formatted message into message fields object.\n *\n * @see https://eips.ethereum.org/EIPS/eip-4361\n *\n * @returns EIP-4361 fields object\n */\nexport function parseSiweMessage(\n  message: string,\n): Prettify<ExactPartial<SiweMessage>> {\n  const { scheme, statement, ...prefix } = (message.match(prefixRegex)\n    ?.groups ?? {}) as {\n    address: Address\n    domain: string\n    scheme?: string\n    statement?: string\n  }\n  const { chainId, expirationTime, issuedAt, notBefore, requestId, ...suffix } =\n    (message.match(suffixRegex)?.groups ?? {}) as {\n      chainId: string\n      expirationTime?: string\n      issuedAt?: string\n      nonce: string\n      notBefore?: string\n      requestId?: string\n      uri: string\n      version: '1'\n    }\n  const resources = message.split('Resources:')[1]?.split('\\n- ').slice(1)\n  return {\n    ...prefix,\n    ...suffix,\n    ...(chainId ? { chainId: Number(chainId) } : {}),\n    ...(expirationTime ? { expirationTime: new Date(expirationTime) } : {}),\n    ...(issuedAt ? { issuedAt: new Date(issuedAt) } : {}),\n    ...(notBefore ? { notBefore: new Date(notBefore) } : {}),\n    ...(requestId ? { requestId } : {}),\n    ...(resources ? { resources } : {}),\n    ...(scheme ? { scheme } : {}),\n    ...(statement ? { statement } : {}),\n  }\n}\n\n// https://regexr.com/80gdj\nconst prefixRegex =\n  /^(?:(?<scheme>[a-zA-Z][a-zA-Z0-9+-.]*):\\/\\/)?(?<domain>[a-zA-Z0-9+-.]*(?::[0-9]{1,5})?) (?:wants you to sign in with your Ethereum account:\\n)(?<address>0x[a-fA-F0-9]{40})\\n\\n(?:(?<statement>.*)\\n\\n)?/\n\n// https://regexr.com/80gf9\nconst suffixRegex =\n  /(?:URI: (?<uri>.+))\\n(?:Version: (?<version>.+))\\n(?:Chain ID: (?<chainId>\\d+))\\n(?:Nonce: (?<nonce>[a-zA-Z0-9]+))\\n(?:Issued At: (?<issuedAt>.+))(?:\\nExpiration Time: (?<expirationTime>.+))?(?:\\nNot Before: (?<notBefore>.+))?(?:\\nRequest ID: (?<requestId>.+))?/\n"],"names":[],"mappings":"AAKA;;;;;;;;;AAOM,SAAU,iBACd,OAAe;IAEf,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,GAAG,QAAQ,GAAI,QAAQ,KAAK,CAAC,cACpD,UAAU,CAAA;IAMd,MAAM,EAAE,OAAO,EAAE,cAAc,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,GAAG,QAAQ,GACzE,QAAQ,KAAK,CAAC,cAAc,UAAU,CAAA;IAUzC,MAAM,YAAY,QAAQ,KAAK,CAAC,aAAa,CAAC,EAAE,EAAE,MAAM,QAAQ,MAAM;IACtE,OAAO;QACL,GAAG,MAAM;QACT,GAAG,MAAM;QACT,GAAI,UAAU;YAAE,SAAS,OAAO;QAAQ,IAAK,CAAA,CAAE;QAC/C,GAAI,iBAAiB;YAAE,gBAAgB,IAAI,KAAK;QAAe,IAAK,CAAA,CAAE;QACtE,GAAI,WAAW;YAAE,UAAU,IAAI,KAAK;QAAS,IAAK,CAAA,CAAE;QACpD,GAAI,YAAY;YAAE,WAAW,IAAI,KAAK;QAAU,IAAK,CAAA,CAAE;QACvD,GAAI,YAAY;YAAE;QAAS,IAAK,CAAA,CAAE;QAClC,GAAI,YAAY;YAAE;QAAS,IAAK,CAAA,CAAE;QAClC,GAAI,SAAS;YAAE;QAAM,IAAK,CAAA,CAAE;QAC5B,GAAI,YAAY;YAAE;QAAS,IAAK,CAAA,CAAE;;AAEtC;AAEA,2BAA2B;AAC3B,MAAM,cACJ;AAEF,2BAA2B;AAC3B,MAAM,cACJ"}},
    {"offset": {"line": 12197, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12202, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/siwe/validateSiweMessage.ts"],"sourcesContent":["import type { Address } from 'abitype'\n\nimport type { ExactPartial } from '../../types/utils.js'\nimport { isAddressEqual } from '../address/isAddressEqual.js'\nimport type { SiweMessage } from './types.js'\n\nexport type ValidateSiweMessageParameters = {\n  /**\n   * Ethereum address to check against.\n   */\n  address?: Address | undefined\n  /**\n   * [RFC 3986](https://www.rfc-editor.org/rfc/rfc3986) authority to check against.\n   */\n  domain?: string | undefined\n  /**\n   * EIP-4361 message fields.\n   */\n  message: ExactPartial<SiweMessage>\n  /**\n   * Random string to check against.\n   */\n  nonce?: string | undefined\n  /**\n   * [RFC 3986](https://www.rfc-editor.org/rfc/rfc3986#section-3.1) URI scheme to check against.\n   */\n  scheme?: string | undefined\n  /**\n   * Current time to check optional `expirationTime` and `notBefore` fields.\n   *\n   * @default new Date()\n   */\n  time?: Date | undefined\n}\n\nexport type ValidateSiweMessageReturnType = boolean\n\n/**\n * @description Validates EIP-4361 message.\n *\n * @see https://eips.ethereum.org/EIPS/eip-4361\n */\nexport function validateSiweMessage(\n  parameters: ValidateSiweMessageParameters,\n): ValidateSiweMessageReturnType {\n  const {\n    address,\n    domain,\n    message,\n    nonce,\n    scheme,\n    time = new Date(),\n  } = parameters\n\n  if (domain && message.domain !== domain) return false\n  if (nonce && message.nonce !== nonce) return false\n  if (scheme && message.scheme !== scheme) return false\n\n  if (message.expirationTime && time >= message.expirationTime) return false\n  if (message.notBefore && time < message.notBefore) return false\n\n  try {\n    if (!message.address) return false\n    if (address && !isAddressEqual(message.address, address)) return false\n  } catch {\n    return false\n  }\n\n  return true\n}\n"],"names":[],"mappings":";;;;;;AA0CM,SAAU,oBACd,UAAyC;IAEzC,MAAM,EACJ,OAAO,EACP,MAAM,EACN,OAAO,EACP,KAAK,EACL,MAAM,EACN,OAAO,IAAI,MAAM,EAClB,GAAG;IAEJ,IAAI,UAAU,QAAQ,MAAM,KAAK,QAAQ,OAAO;IAChD,IAAI,SAAS,QAAQ,KAAK,KAAK,OAAO,OAAO;IAC7C,IAAI,UAAU,QAAQ,MAAM,KAAK,QAAQ,OAAO;IAEhD,IAAI,QAAQ,cAAc,IAAI,QAAQ,QAAQ,cAAc,EAAE,OAAO;IACrE,IAAI,QAAQ,SAAS,IAAI,OAAO,QAAQ,SAAS,EAAE,OAAO;IAE1D,IAAI;QACF,IAAI,CAAC,QAAQ,OAAO,EAAE,OAAO;QAC7B,IAAI,WAAW,CAAC,CAAA,GAAA,8JAAA,CAAA,iBAAc,AAAd,EAAe,QAAQ,OAAO,EAAE,UAAU,OAAO;IACnE,EAAE,OAAM;QACN,OAAO;IACT;IAEA,OAAO;AACT"}},
    {"offset": {"line": 12223, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12228, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/actions/siwe/verifySiweMessage.ts"],"sourcesContent":["import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { Prettify } from '../../types/utils.js'\nimport { hashMessage } from '../../utils/signature/hashMessage.js'\nimport type { HashMessageErrorType } from '../../utils/signature/hashMessage.js'\nimport { parseSiweMessage } from '../../utils/siwe/parseSiweMessage.js'\nimport {\n  type ValidateSiweMessageParameters,\n  validateSiweMessage,\n} from '../../utils/siwe/validateSiweMessage.js'\nimport {\n  type VerifyHashErrorType,\n  type VerifyHashParameters,\n  verifyHash,\n} from '../public/verifyHash.js'\n\nexport type VerifySiweMessageParameters = Prettify<\n  Pick<VerifyHashParameters, 'blockNumber' | 'blockTag'> &\n    Pick<\n      ValidateSiweMessageParameters,\n      'address' | 'domain' | 'nonce' | 'scheme' | 'time'\n    > & {\n      /**\n       * EIP-4361 formatted message.\n       */\n      message: string\n      /**\n       * Signature to check against.\n       */\n      signature: Hex\n    }\n>\n\nexport type VerifySiweMessageReturnType = boolean\n\nexport type VerifySiweMessageErrorType =\n  | HashMessageErrorType\n  | VerifyHashErrorType\n  | ErrorType\n\n/**\n * Verifies [EIP-4361](https://eips.ethereum.org/EIPS/eip-4361) formatted message was signed.\n *\n * Compatible with Smart Contract Accounts & Externally Owned Accounts via [ERC-6492](https://eips.ethereum.org/EIPS/eip-6492).\n *\n * - Docs {@link https://viem.sh/docs/siwe/actions/verifySiweMessage}\n *\n * @param client - Client to use.\n * @param parameters - {@link VerifySiweMessageParameters}\n * @returns Whether or not the signature is valid. {@link VerifySiweMessageReturnType}\n */\nexport async function verifySiweMessage<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n  parameters: VerifySiweMessageParameters,\n): Promise<VerifySiweMessageReturnType> {\n  const {\n    address,\n    domain,\n    message,\n    nonce,\n    scheme,\n    signature,\n    time = new Date(),\n    ...callRequest\n  } = parameters\n\n  const parsed = parseSiweMessage(message)\n  if (!parsed.address) return false\n\n  const isValid = validateSiweMessage({\n    address,\n    domain,\n    message: parsed,\n    nonce,\n    scheme,\n    time,\n  })\n  if (!isValid) return false\n\n  const hash = hashMessage(message)\n  return verifyHash(client, {\n    address: parsed.address,\n    hash,\n    signature,\n    ...callRequest,\n  })\n}\n"],"names":[],"mappings":";;;;;;;;;;;;AAsDO,eAAe,kBACpB,MAAgC,EAChC,UAAuC;IAEvC,MAAM,EACJ,OAAO,EACP,MAAM,EACN,OAAO,EACP,KAAK,EACL,MAAM,EACN,SAAS,EACT,OAAO,IAAI,MAAM,EACjB,GAAG,aACJ,GAAG;IAEJ,MAAM,SAAS,CAAA,GAAA,6JAAA,CAAA,mBAAgB,AAAhB,EAAiB;IAChC,IAAI,CAAC,OAAO,OAAO,EAAE,OAAO;IAE5B,MAAM,UAAU,CAAA,GAAA,gKAAA,CAAA,sBAAmB,AAAnB,EAAoB;QAClC;QACA;QACA,SAAS;QACT;QACA;QACA;;IAEF,IAAI,CAAC,SAAS,OAAO;IAErB,MAAM,OAAO,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAX,EAAY;IACzB,OAAO,CAAA,GAAA,2JAAA,CAAA,aAAU,AAAV,EAAW,QAAQ;QACxB,SAAS,OAAO,OAAO;QACvB;QACA;QACA,GAAG,WAAW;;AAElB"}},
    {"offset": {"line": 12261, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12266, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/actions/wallet/sendRawTransaction.ts"],"sourcesContent":["import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { TransactionSerializedGeneric } from '../../types/transaction.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type SendRawTransactionParameters = {\n  /** The signed serialized transaction. */\n  serializedTransaction: TransactionSerializedGeneric\n}\n\nexport type SendRawTransactionReturnType = Hash\n\nexport type SendRawTransactionErrorType = RequestErrorType | ErrorType\n\n/**\n * Sends a **signed** transaction to the network\n *\n * - Docs: https://viem.sh/docs/actions/wallet/sendRawTransaction\n * - JSON-RPC Method: [`eth_sendRawTransaction`](https://ethereum.github.io/execution-apis/api-documentation/)\n *\n * @param client - Client to use\n * @param parameters - {@link SendRawTransactionParameters}\n * @returns The transaction hash. {@link SendRawTransactionReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { sendRawTransaction } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n *\n * const hash = await sendRawTransaction(client, {\n *   serializedTransaction: '0x02f850018203118080825208808080c080a04012522854168b27e5dc3d5839bab5e6b39e1a0ffd343901ce1622e3d64b48f1a04e00902ae0502c4728cbf12156290df99c3ed7de85b1dbfe20b5c36931733a33'\n * })\n */\nexport async function sendRawTransaction<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n  { serializedTransaction }: SendRawTransactionParameters,\n): Promise<SendRawTransactionReturnType> {\n  return client.request(\n    {\n      method: 'eth_sendRawTransaction',\n      params: [serializedTransaction],\n    },\n    { retryCount: 0 },\n  )\n}\n"],"names":[],"mappings":"AAiBA;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBO,eAAe,mBACpB,MAAgC,EAChC,EAAE,qBAAqB,EAAgC;IAEvD,OAAO,OAAO,OAAO,CACnB;QACE,QAAQ;QACR,QAAQ;YAAC;SAAsB;OAEjC;QAAE,YAAY;IAAC;AAEnB"}},
    {"offset": {"line": 12302, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12307, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/clients/decorators/public.ts"],"sourcesContent":["import type { Abi, AbiEvent, Address } from 'abitype'\n\nimport {\n  type GetEnsAddressParameters,\n  type GetEnsAddressReturnType,\n  getEnsAddress,\n} from '../../actions/ens/getEnsAddress.js'\nimport {\n  type GetEnsAvatarParameters,\n  type GetEnsAvatarReturnType,\n  getEnsAvatar,\n} from '../../actions/ens/getEnsAvatar.js'\nimport {\n  type GetEnsNameParameters,\n  type GetEnsNameReturnType,\n  getEnsName,\n} from '../../actions/ens/getEnsName.js'\nimport {\n  type GetEnsResolverParameters,\n  type GetEnsResolverReturnType,\n  getEnsResolver,\n} from '../../actions/ens/getEnsResolver.js'\nimport {\n  type GetEnsTextParameters,\n  type GetEnsTextReturnType,\n  getEnsText,\n} from '../../actions/ens/getEnsText.js'\nimport {\n  type CallParameters,\n  type CallReturnType,\n  call,\n} from '../../actions/public/call.js'\nimport {\n  type CreateBlockFilterReturnType,\n  createBlockFilter,\n} from '../../actions/public/createBlockFilter.js'\nimport {\n  type CreateContractEventFilterParameters,\n  type CreateContractEventFilterReturnType,\n  createContractEventFilter,\n} from '../../actions/public/createContractEventFilter.js'\nimport {\n  type CreateEventFilterParameters,\n  type CreateEventFilterReturnType,\n  createEventFilter,\n} from '../../actions/public/createEventFilter.js'\nimport {\n  type CreatePendingTransactionFilterReturnType,\n  createPendingTransactionFilter,\n} from '../../actions/public/createPendingTransactionFilter.js'\nimport {\n  type EstimateContractGasParameters,\n  type EstimateContractGasReturnType,\n  estimateContractGas,\n} from '../../actions/public/estimateContractGas.js'\nimport {\n  type EstimateFeesPerGasParameters,\n  type EstimateFeesPerGasReturnType,\n  estimateFeesPerGas,\n} from '../../actions/public/estimateFeesPerGas.js'\nimport {\n  type EstimateGasParameters,\n  type EstimateGasReturnType,\n  estimateGas,\n} from '../../actions/public/estimateGas.js'\nimport {\n  type EstimateMaxPriorityFeePerGasParameters,\n  type EstimateMaxPriorityFeePerGasReturnType,\n  estimateMaxPriorityFeePerGas,\n} from '../../actions/public/estimateMaxPriorityFeePerGas.js'\nimport {\n  type GetBalanceParameters,\n  type GetBalanceReturnType,\n  getBalance,\n} from '../../actions/public/getBalance.js'\nimport {\n  type GetBlobBaseFeeReturnType,\n  getBlobBaseFee,\n} from '../../actions/public/getBlobBaseFee.js'\nimport {\n  type GetBlockParameters,\n  type GetBlockReturnType,\n  getBlock,\n} from '../../actions/public/getBlock.js'\nimport {\n  type GetBlockNumberParameters,\n  type GetBlockNumberReturnType,\n  getBlockNumber,\n} from '../../actions/public/getBlockNumber.js'\nimport {\n  type GetBlockTransactionCountParameters,\n  type GetBlockTransactionCountReturnType,\n  getBlockTransactionCount,\n} from '../../actions/public/getBlockTransactionCount.js'\nimport {\n  type GetChainIdReturnType,\n  getChainId,\n} from '../../actions/public/getChainId.js'\nimport {\n  type GetCodeParameters,\n  type GetCodeReturnType,\n  getCode,\n} from '../../actions/public/getCode.js'\nimport {\n  type GetContractEventsParameters,\n  type GetContractEventsReturnType,\n  getContractEvents,\n} from '../../actions/public/getContractEvents.js'\nimport {\n  type GetEip712DomainParameters,\n  type GetEip712DomainReturnType,\n  getEip712Domain,\n} from '../../actions/public/getEip712Domain.js'\nimport {\n  type GetFeeHistoryParameters,\n  type GetFeeHistoryReturnType,\n  getFeeHistory,\n} from '../../actions/public/getFeeHistory.js'\nimport {\n  type GetFilterChangesParameters,\n  type GetFilterChangesReturnType,\n  getFilterChanges,\n} from '../../actions/public/getFilterChanges.js'\nimport {\n  type GetFilterLogsParameters,\n  type GetFilterLogsReturnType,\n  getFilterLogs,\n} from '../../actions/public/getFilterLogs.js'\nimport {\n  type GetGasPriceReturnType,\n  getGasPrice,\n} from '../../actions/public/getGasPrice.js'\nimport {\n  type GetLogsParameters,\n  type GetLogsReturnType,\n  getLogs,\n} from '../../actions/public/getLogs.js'\nimport {\n  type GetProofParameters,\n  type GetProofReturnType,\n  getProof,\n} from '../../actions/public/getProof.js'\nimport {\n  type GetStorageAtParameters,\n  type GetStorageAtReturnType,\n  getStorageAt,\n} from '../../actions/public/getStorageAt.js'\nimport {\n  type GetTransactionParameters,\n  type GetTransactionReturnType,\n  getTransaction,\n} from '../../actions/public/getTransaction.js'\nimport {\n  type GetTransactionConfirmationsParameters,\n  type GetTransactionConfirmationsReturnType,\n  getTransactionConfirmations,\n} from '../../actions/public/getTransactionConfirmations.js'\nimport {\n  type GetTransactionCountParameters,\n  type GetTransactionCountReturnType,\n  getTransactionCount,\n} from '../../actions/public/getTransactionCount.js'\nimport {\n  type GetTransactionReceiptParameters,\n  type GetTransactionReceiptReturnType,\n  getTransactionReceipt,\n} from '../../actions/public/getTransactionReceipt.js'\nimport {\n  type MulticallParameters,\n  type MulticallReturnType,\n  multicall,\n} from '../../actions/public/multicall.js'\nimport {\n  type ReadContractParameters,\n  type ReadContractReturnType,\n  readContract,\n} from '../../actions/public/readContract.js'\nimport {\n  type SimulateContractParameters,\n  type SimulateContractReturnType,\n  simulateContract,\n} from '../../actions/public/simulateContract.js'\nimport {\n  type UninstallFilterParameters,\n  type UninstallFilterReturnType,\n  uninstallFilter,\n} from '../../actions/public/uninstallFilter.js'\nimport {\n  type VerifyMessageParameters,\n  type VerifyMessageReturnType,\n  verifyMessage,\n} from '../../actions/public/verifyMessage.js'\nimport {\n  type VerifyTypedDataParameters,\n  type VerifyTypedDataReturnType,\n  verifyTypedData,\n} from '../../actions/public/verifyTypedData.js'\nimport {\n  type WaitForTransactionReceiptParameters,\n  type WaitForTransactionReceiptReturnType,\n  waitForTransactionReceipt,\n} from '../../actions/public/waitForTransactionReceipt.js'\nimport {\n  type WatchBlockNumberParameters,\n  type WatchBlockNumberReturnType,\n  watchBlockNumber,\n} from '../../actions/public/watchBlockNumber.js'\nimport {\n  type WatchBlocksParameters,\n  type WatchBlocksReturnType,\n  watchBlocks,\n} from '../../actions/public/watchBlocks.js'\nimport {\n  type WatchContractEventParameters,\n  type WatchContractEventReturnType,\n  watchContractEvent,\n} from '../../actions/public/watchContractEvent.js'\nimport {\n  type WatchEventParameters,\n  type WatchEventReturnType,\n  watchEvent,\n} from '../../actions/public/watchEvent.js'\nimport {\n  type WatchPendingTransactionsParameters,\n  type WatchPendingTransactionsReturnType,\n  watchPendingTransactions,\n} from '../../actions/public/watchPendingTransactions.js'\nimport {\n  type VerifySiweMessageParameters,\n  type VerifySiweMessageReturnType,\n  verifySiweMessage,\n} from '../../actions/siwe/verifySiweMessage.js'\nimport {\n  type PrepareTransactionRequestParameters,\n  type PrepareTransactionRequestRequest,\n  type PrepareTransactionRequestReturnType,\n  prepareTransactionRequest,\n} from '../../actions/wallet/prepareTransactionRequest.js'\nimport {\n  type SendRawTransactionParameters,\n  type SendRawTransactionReturnType,\n  sendRawTransaction,\n} from '../../actions/wallet/sendRawTransaction.js'\nimport type { Account } from '../../types/account.js'\nimport type { BlockNumber, BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type {\n  ContractEventName,\n  ContractFunctionArgs,\n  ContractFunctionName,\n  MaybeAbiEventName,\n  MaybeExtractEventArgsFromAbi,\n} from '../../types/contract.js'\nimport type { FeeValuesType } from '../../types/fee.js'\nimport type { FilterType } from '../../types/filter.js'\nimport type { Client } from '../createClient.js'\nimport type { Transport } from '../transports/createTransport.js'\n\nexport type PublicActions<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  account extends Account | undefined = Account | undefined,\n> = {\n  /**\n   * Executes a new message call immediately without submitting a transaction to the network.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/call\n   * - JSON-RPC Methods: [`eth_call`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_call)\n   *\n   * @param args - {@link CallParameters}\n   * @returns The call data. {@link CallReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const data = await client.call({\n   *   account: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',\n   *   data: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n   *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n   * })\n   */\n  call: (parameters: CallParameters<chain>) => Promise<CallReturnType>\n  /**\n   * Creates a Filter to listen for new block hashes that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges).\n   *\n   * - Docs: https://viem.sh/docs/actions/public/createBlockFilter\n   * - JSON-RPC Methods: [`eth_newBlockFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newBlockFilter)\n   *\n   * @returns Filter. {@link CreateBlockFilterReturnType}\n   *\n   * @example\n   * import { createPublicClient, createBlockFilter, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const filter = await createBlockFilter(client)\n   * // { id: \"0x345a6572337856574a76364e457a4366\", type: 'block' }\n   */\n  createBlockFilter: () => Promise<CreateBlockFilterReturnType>\n  /**\n   * Creates a Filter to retrieve event logs that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges) or [`getFilterLogs`](https://viem.sh/docs/actions/public/getFilterLogs).\n   *\n   * - Docs: https://viem.sh/docs/contract/createContractEventFilter\n   *\n   * @param args - {@link CreateContractEventFilterParameters}\n   * @returns [`Filter`](https://viem.sh/docs/glossary/types#filter). {@link CreateContractEventFilterReturnType}\n   *\n   * @example\n   * import { createPublicClient, http, parseAbi } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const filter = await client.createContractEventFilter({\n   *   abi: parseAbi(['event Transfer(address indexed, address indexed, uint256)']),\n   * })\n   */\n  createContractEventFilter: <\n    const abi extends Abi | readonly unknown[],\n    eventName extends ContractEventName<abi> | undefined,\n    args extends MaybeExtractEventArgsFromAbi<abi, eventName> | undefined,\n    strict extends boolean | undefined = undefined,\n    fromBlock extends BlockNumber | BlockTag | undefined = undefined,\n    toBlock extends BlockNumber | BlockTag | undefined = undefined,\n  >(\n    args: CreateContractEventFilterParameters<\n      abi,\n      eventName,\n      args,\n      strict,\n      fromBlock,\n      toBlock\n    >,\n  ) => Promise<\n    CreateContractEventFilterReturnType<\n      abi,\n      eventName,\n      args,\n      strict,\n      fromBlock,\n      toBlock\n    >\n  >\n  /**\n   * Creates a [`Filter`](https://viem.sh/docs/glossary/types#filter) to listen for new events that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges).\n   *\n   * - Docs: https://viem.sh/docs/actions/public/createEventFilter\n   * - JSON-RPC Methods: [`eth_newFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newfilter)\n   *\n   * @param args - {@link CreateEventFilterParameters}\n   * @returns [`Filter`](https://viem.sh/docs/glossary/types#filter). {@link CreateEventFilterReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const filter = await client.createEventFilter({\n   *   address: '0xfba3912ca04dd458c843e2ee08967fc04f3579c2',\n   * })\n   */\n  createEventFilter: <\n    const abiEvent extends AbiEvent | undefined = undefined,\n    const abiEvents extends\n      | readonly AbiEvent[]\n      | readonly unknown[]\n      | undefined = abiEvent extends AbiEvent ? [abiEvent] : undefined,\n    strict extends boolean | undefined = undefined,\n    fromBlock extends BlockNumber | BlockTag | undefined = undefined,\n    toBlock extends BlockNumber | BlockTag | undefined = undefined,\n    _EventName extends string | undefined = MaybeAbiEventName<abiEvent>,\n    _Args extends\n      | MaybeExtractEventArgsFromAbi<abiEvents, _EventName>\n      | undefined = undefined,\n  >(\n    args?:\n      | CreateEventFilterParameters<\n          abiEvent,\n          abiEvents,\n          strict,\n          fromBlock,\n          toBlock,\n          _EventName,\n          _Args\n        >\n      | undefined,\n  ) => Promise<\n    CreateEventFilterReturnType<\n      abiEvent,\n      abiEvents,\n      strict,\n      fromBlock,\n      toBlock,\n      _EventName,\n      _Args\n    >\n  >\n  /**\n   * Creates a Filter to listen for new pending transaction hashes that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges).\n   *\n   * - Docs: https://viem.sh/docs/actions/public/createPendingTransactionFilter\n   * - JSON-RPC Methods: [`eth_newPendingTransactionFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newpendingtransactionfilter)\n   *\n   * @returns [`Filter`](https://viem.sh/docs/glossary/types#filter). {@link CreateBlockFilterReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const filter = await client.createPendingTransactionFilter()\n   * // { id: \"0x345a6572337856574a76364e457a4366\", type: 'transaction' }\n   */\n  createPendingTransactionFilter: () => Promise<CreatePendingTransactionFilterReturnType>\n  /**\n   * Estimates the gas required to successfully execute a contract write function call.\n   *\n   * - Docs: https://viem.sh/docs/contract/estimateContractGas\n   *\n   * @remarks\n   * Internally, uses a [Public Client](https://viem.sh/docs/clients/public) to call the [`estimateGas` action](https://viem.sh/docs/actions/public/estimateGas) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData).\n   *\n   * @param args - {@link EstimateContractGasParameters}\n   * @returns The gas estimate (in wei). {@link EstimateContractGasReturnType}\n   *\n   * @example\n   * import { createPublicClient, http, parseAbi } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const gas = await client.estimateContractGas({\n   *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n   *   abi: parseAbi(['function mint() public']),\n   *   functionName: 'mint',\n   *   account: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',\n   * })\n   */\n  estimateContractGas: <\n    chain extends Chain | undefined,\n    const abi extends Abi | readonly unknown[],\n    functionName extends ContractFunctionName<abi, 'nonpayable' | 'payable'>,\n    args extends ContractFunctionArgs<\n      abi,\n      'nonpayable' | 'payable',\n      functionName\n    >,\n  >(\n    args: EstimateContractGasParameters<abi, functionName, args, chain>,\n  ) => Promise<EstimateContractGasReturnType>\n  /**\n   * Estimates the gas necessary to complete a transaction without submitting it to the network.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/estimateGas\n   * - JSON-RPC Methods: [`eth_estimateGas`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_estimategas)\n   *\n   * @param args - {@link EstimateGasParameters}\n   * @returns The gas estimate (in wei). {@link EstimateGasReturnType}\n   *\n   * @example\n   * import { createPublicClient, http, parseEther } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const gasEstimate = await client.estimateGas({\n   *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n   *   value: parseEther('1'),\n   * })\n   */\n  estimateGas: (\n    args: EstimateGasParameters<chain>,\n  ) => Promise<EstimateGasReturnType>\n  /**\n   * Returns the balance of an address in wei.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getBalance\n   * - JSON-RPC Methods: [`eth_getBalance`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getbalance)\n   *\n   * @remarks\n   * You can convert the balance to ether units with [`formatEther`](https://viem.sh/docs/utilities/formatEther).\n   *\n   * ```ts\n   * const balance = await getBalance(client, {\n   *   address: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   *   blockTag: 'safe'\n   * })\n   * const balanceAsEther = formatEther(balance)\n   * // \"6.942\"\n   * ```\n   *\n   * @param args - {@link GetBalanceParameters}\n   * @returns The balance of the address in wei. {@link GetBalanceReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const balance = await client.getBalance({\n   *   address: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   * })\n   * // 10000000000000000000000n (wei)\n   */\n  getBalance: (args: GetBalanceParameters) => Promise<GetBalanceReturnType>\n  /**\n   * Returns the base fee per blob gas in wei.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getBlobBaseFee\n   * - JSON-RPC Methods: [`eth_blobBaseFee`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_blobBaseFee)\n   *\n   * @param client - Client to use\n   * @returns The blob base fee (in wei). {@link GetBlobBaseFeeReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { getBlobBaseFee } from 'viem/public'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const blobBaseFee = await client.getBlobBaseFee()\n   */\n  getBlobBaseFee: () => Promise<GetBlobBaseFeeReturnType>\n  /**\n   * Returns information about a block at a block number, hash, or tag.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getBlock\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/blocks/fetching-blocks\n   * - JSON-RPC Methods:\n   *   - Calls [`eth_getBlockByNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblockbynumber) for `blockNumber` & `blockTag`.\n   *   - Calls [`eth_getBlockByHash`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblockbyhash) for `blockHash`.\n   *\n   * @param args - {@link GetBlockParameters}\n   * @returns Information about the block. {@link GetBlockReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const block = await client.getBlock()\n   */\n  getBlock: <\n    includeTransactions extends boolean = false,\n    blockTag extends BlockTag = 'latest',\n  >(\n    args?: GetBlockParameters<includeTransactions, blockTag> | undefined,\n  ) => Promise<GetBlockReturnType<chain, includeTransactions, blockTag>>\n  /**\n   * Returns the number of the most recent block seen.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getBlockNumber\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/blocks/fetching-blocks\n   * - JSON-RPC Methods: [`eth_blockNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_blocknumber)\n   *\n   * @param args - {@link GetBlockNumberParameters}\n   * @returns The number of the block. {@link GetBlockNumberReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const blockNumber = await client.getBlockNumber()\n   * // 69420n\n   */\n  getBlockNumber: (\n    args?: GetBlockNumberParameters | undefined,\n  ) => Promise<GetBlockNumberReturnType>\n  /**\n   * Returns the number of Transactions at a block number, hash, or tag.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getBlockTransactionCount\n   * - JSON-RPC Methods:\n   *   - Calls [`eth_getBlockTransactionCountByNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblocktransactioncountbynumber) for `blockNumber` & `blockTag`.\n   *   - Calls [`eth_getBlockTransactionCountByHash`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblocktransactioncountbyhash) for `blockHash`.\n   *\n   * @param args - {@link GetBlockTransactionCountParameters}\n   * @returns The block transaction count. {@link GetBlockTransactionCountReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const count = await client.getBlockTransactionCount()\n   */\n  getBlockTransactionCount: (\n    args?: GetBlockTransactionCountParameters | undefined,\n  ) => Promise<GetBlockTransactionCountReturnType>\n  /** @deprecated Use `getCode` instead. */\n  getBytecode: (args: GetCodeParameters) => Promise<GetCodeReturnType>\n  /**\n   * Returns the chain ID associated with the current network.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getChainId\n   * - JSON-RPC Methods: [`eth_chainId`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_chainid)\n   *\n   * @returns The current chain ID. {@link GetChainIdReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const chainId = await client.getChainId()\n   * // 1\n   */\n  getChainId: () => Promise<GetChainIdReturnType>\n  /**\n   * Retrieves the bytecode at an address.\n   *\n   * - Docs: https://viem.sh/docs/contract/getCode\n   * - JSON-RPC Methods: [`eth_getCode`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getcode)\n   *\n   * @param args - {@link GetBytecodeParameters}\n   * @returns The contract's bytecode. {@link GetBytecodeReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const code = await client.getCode({\n   *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n   * })\n   */\n  getCode: (args: GetCodeParameters) => Promise<GetCodeReturnType>\n  /**\n   * Returns a list of event logs emitted by a contract.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getContractEvents\n   * - JSON-RPC Methods: [`eth_getLogs`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getlogs)\n   *\n   * @param client - Client to use\n   * @param parameters - {@link GetContractEventsParameters}\n   * @returns A list of event logs. {@link GetContractEventsReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { wagmiAbi } from './abi'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const logs = await client.getContractEvents(client, {\n   *  address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n   *  abi: wagmiAbi,\n   *  eventName: 'Transfer'\n   * })\n   */\n  getContractEvents: <\n    const abi extends Abi | readonly unknown[],\n    eventName extends ContractEventName<abi> | undefined = undefined,\n    strict extends boolean | undefined = undefined,\n    fromBlock extends BlockNumber | BlockTag | undefined = undefined,\n    toBlock extends BlockNumber | BlockTag | undefined = undefined,\n  >(\n    args: GetContractEventsParameters<\n      abi,\n      eventName,\n      strict,\n      fromBlock,\n      toBlock\n    >,\n  ) => Promise<\n    GetContractEventsReturnType<abi, eventName, strict, fromBlock, toBlock>\n  >\n  /**\n   * Reads the EIP-712 domain from a contract, based on the ERC-5267 specification.\n   *\n   * @param client - A {@link Client} instance.\n   * @param parameters - The parameters of the action. {@link GetEip712DomainParameters}\n   * @returns The EIP-712 domain, fields, and extensions. {@link GetEip712DomainReturnType}\n   *\n   * @example\n   * ```ts\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   *\n   * const domain = await client.getEip712Domain({\n   *   address: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\n   * })\n   * // {\n   * //   domain: {\n   * //     name: 'ExampleContract',\n   * //     version: '1',\n   * //     chainId: 1,\n   * //     verifyingContract: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\n   * //   },\n   * //   fields: '0x0f',\n   * //   extensions: [],\n   * // }\n   * ```\n   */\n  getEip712Domain: (\n    args: GetEip712DomainParameters,\n  ) => Promise<GetEip712DomainReturnType>\n  /**\n   * Gets address for ENS name.\n   *\n   * - Docs: https://viem.sh/docs/ens/actions/getEnsAddress\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/ens\n   *\n   * @remarks\n   * Calls `resolve(bytes, bytes)` on ENS Universal Resolver Contract.\n   *\n   * Since ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS names](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `getEnsAddress`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize) function for this.\n   *\n   * @param args - {@link GetEnsAddressParameters}\n   * @returns Address for ENS name or `null` if not found. {@link GetEnsAddressReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { normalize } from 'viem/ens'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const ensAddress = await client.getEnsAddress({\n   *   name: normalize('wevm.eth'),\n   * })\n   * // '0xd2135CfB216b74109775236E36d4b433F1DF507B'\n   */\n  getEnsAddress: (\n    args: GetEnsAddressParameters,\n  ) => Promise<GetEnsAddressReturnType>\n  /**\n   * Gets the avatar of an ENS name.\n   *\n   * - Docs: https://viem.sh/docs/ens/actions/getEnsAvatar\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/ens\n   *\n   * @remarks\n   * Calls [`getEnsText`](https://viem.sh/docs/ens/actions/getEnsText) with `key` set to `'avatar'`.\n   *\n   * Since ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS names](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `getEnsAddress`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize) function for this.\n   *\n   * @param args - {@link GetEnsAvatarParameters}\n   * @returns Avatar URI or `null` if not found. {@link GetEnsAvatarReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { normalize } from 'viem/ens'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const ensAvatar = await client.getEnsAvatar({\n   *   name: normalize('wevm.eth'),\n   * })\n   * // 'https://ipfs.io/ipfs/Qma8mnp6xV3J2cRNf3mTth5C8nV11CAnceVinc3y8jSbio'\n   */\n  getEnsAvatar: (\n    args: GetEnsAvatarParameters,\n  ) => Promise<GetEnsAvatarReturnType>\n  /**\n   * Gets primary name for specified address.\n   *\n   * - Docs: https://viem.sh/docs/ens/actions/getEnsName\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/ens\n   *\n   * @remarks\n   * Calls `reverse(bytes)` on ENS Universal Resolver Contract to \"reverse resolve\" the address to the primary ENS name.\n   *\n   * @param args - {@link GetEnsNameParameters}\n   * @returns Name or `null` if not found. {@link GetEnsNameReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const ensName = await client.getEnsName({\n   *   address: '0xd2135CfB216b74109775236E36d4b433F1DF507B',\n   * })\n   * // 'wevm.eth'\n   */\n  getEnsName: (args: GetEnsNameParameters) => Promise<GetEnsNameReturnType>\n  /**\n   * Gets resolver for ENS name.\n   *\n   * - Docs: https://viem.sh/docs/ens/actions/getEnsResolver\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/ens\n   *\n   * @remarks\n   * Calls `findResolver(bytes)` on ENS Universal Resolver Contract to retrieve the resolver of an ENS name.\n   *\n   * Since ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS names](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `getEnsAddress`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize) function for this.\n   *\n   * @param args - {@link GetEnsResolverParameters}\n   * @returns Address for ENS resolver. {@link GetEnsResolverReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { normalize } from 'viem/ens'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const resolverAddress = await client.getEnsResolver({\n   *   name: normalize('wevm.eth'),\n   * })\n   * // '0x4976fb03C32e5B8cfe2b6cCB31c09Ba78EBaBa41'\n   */\n  getEnsResolver: (\n    args: GetEnsResolverParameters,\n  ) => Promise<GetEnsResolverReturnType>\n  /**\n   * Gets a text record for specified ENS name.\n   *\n   * - Docs: https://viem.sh/docs/ens/actions/getEnsResolver\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/ens\n   *\n   * @remarks\n   * Calls `resolve(bytes, bytes)` on ENS Universal Resolver Contract.\n   *\n   * Since ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS names](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `getEnsAddress`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize) function for this.\n   *\n   * @param args - {@link GetEnsTextParameters}\n   * @returns Address for ENS resolver. {@link GetEnsTextReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { normalize } from 'viem/ens'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const twitterRecord = await client.getEnsText({\n   *   name: normalize('wevm.eth'),\n   *   key: 'com.twitter',\n   * })\n   * // 'wevm_dev'\n   */\n  getEnsText: (args: GetEnsTextParameters) => Promise<GetEnsTextReturnType>\n  /**\n   * Returns a collection of historical gas information.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getFeeHistory\n   * - JSON-RPC Methods: [`eth_feeHistory`](https://docs.alchemy.com/reference/eth-feehistory)\n   *\n   * @param args - {@link GetFeeHistoryParameters}\n   * @returns The gas estimate (in wei). {@link GetFeeHistoryReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const feeHistory = await client.getFeeHistory({\n   *   blockCount: 4,\n   *   rewardPercentiles: [25, 75],\n   * })\n   */\n  getFeeHistory: (\n    args: GetFeeHistoryParameters,\n  ) => Promise<GetFeeHistoryReturnType>\n  /**\n   * Returns an estimate for the fees per gas for a transaction to be included\n   * in the next block.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/estimateFeesPerGas\n   *\n   * @param client - Client to use\n   * @param parameters - {@link EstimateFeesPerGasParameters}\n   * @returns An estimate (in wei) for the fees per gas. {@link EstimateFeesPerGasReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const maxPriorityFeePerGas = await client.estimateFeesPerGas()\n   * // { maxFeePerGas: ..., maxPriorityFeePerGas: ... }\n   */\n  estimateFeesPerGas: <\n    chainOverride extends Chain | undefined = undefined,\n    type extends FeeValuesType = 'eip1559',\n  >(\n    args?: EstimateFeesPerGasParameters<chain, chainOverride, type> | undefined,\n  ) => Promise<EstimateFeesPerGasReturnType<type>>\n  /**\n   * Returns a list of logs or hashes based on a [Filter](/docs/glossary/terms#filter) since the last time it was called.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getFilterChanges\n   * - JSON-RPC Methods: [`eth_getFilterChanges`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getfilterchanges)\n   *\n   * @remarks\n   * A Filter can be created from the following actions:\n   *\n   * - [`createBlockFilter`](https://viem.sh/docs/actions/public/createBlockFilter)\n   * - [`createContractEventFilter`](https://viem.sh/docs/contract/createContractEventFilter)\n   * - [`createEventFilter`](https://viem.sh/docs/actions/public/createEventFilter)\n   * - [`createPendingTransactionFilter`](https://viem.sh/docs/actions/public/createPendingTransactionFilter)\n   *\n   * Depending on the type of filter, the return value will be different:\n   *\n   * - If the filter was created with `createContractEventFilter` or `createEventFilter`, it returns a list of logs.\n   * - If the filter was created with `createPendingTransactionFilter`, it returns a list of transaction hashes.\n   * - If the filter was created with `createBlockFilter`, it returns a list of block hashes.\n   *\n   * @param args - {@link GetFilterChangesParameters}\n   * @returns Logs or hashes. {@link GetFilterChangesReturnType}\n   *\n   * @example\n   * // Blocks\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const filter = await client.createBlockFilter()\n   * const hashes = await client.getFilterChanges({ filter })\n   *\n   * @example\n   * // Contract Events\n   * import { createPublicClient, http, parseAbi } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const filter = await client.createContractEventFilter({\n   *   address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n   *   abi: parseAbi(['event Transfer(address indexed, address indexed, uint256)']),\n   *   eventName: 'Transfer',\n   * })\n   * const logs = await client.getFilterChanges({ filter })\n   *\n   * @example\n   * // Raw Events\n   * import { createPublicClient, http, parseAbiItem } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const filter = await client.createEventFilter({\n   *   address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n   *   event: parseAbiItem('event Transfer(address indexed, address indexed, uint256)'),\n   * })\n   * const logs = await client.getFilterChanges({ filter })\n   *\n   * @example\n   * // Transactions\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const filter = await client.createPendingTransactionFilter()\n   * const hashes = await client.getFilterChanges({ filter })\n   */\n  getFilterChanges: <\n    filterType extends FilterType,\n    const abi extends Abi | readonly unknown[] | undefined,\n    eventName extends string | undefined,\n    strict extends boolean | undefined = undefined,\n    fromBlock extends BlockNumber | BlockTag | undefined = undefined,\n    toBlock extends BlockNumber | BlockTag | undefined = undefined,\n  >(\n    args: GetFilterChangesParameters<\n      filterType,\n      abi,\n      eventName,\n      strict,\n      fromBlock,\n      toBlock\n    >,\n  ) => Promise<\n    GetFilterChangesReturnType<\n      filterType,\n      abi,\n      eventName,\n      strict,\n      fromBlock,\n      toBlock\n    >\n  >\n  /**\n   * Returns a list of event logs since the filter was created.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getFilterLogs\n   * - JSON-RPC Methods: [`eth_getFilterLogs`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getfilterlogs)\n   *\n   * @remarks\n   * `getFilterLogs` is only compatible with **event filters**.\n   *\n   * @param args - {@link GetFilterLogsParameters}\n   * @returns A list of event logs. {@link GetFilterLogsReturnType}\n   *\n   * @example\n   * import { createPublicClient, http, parseAbiItem } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const filter = await client.createEventFilter({\n   *   address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n   *   event: parseAbiItem('event Transfer(address indexed, address indexed, uint256)'),\n   * })\n   * const logs = await client.getFilterLogs({ filter })\n   */\n  getFilterLogs: <\n    const abi extends Abi | readonly unknown[] | undefined,\n    eventName extends string | undefined,\n    strict extends boolean | undefined = undefined,\n    fromBlock extends BlockNumber | BlockTag | undefined = undefined,\n    toBlock extends BlockNumber | BlockTag | undefined = undefined,\n  >(\n    args: GetFilterLogsParameters<abi, eventName, strict, fromBlock, toBlock>,\n  ) => Promise<\n    GetFilterLogsReturnType<abi, eventName, strict, fromBlock, toBlock>\n  >\n  /**\n   * Returns the current price of gas (in wei).\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getGasPrice\n   * - JSON-RPC Methods: [`eth_gasPrice`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_gasprice)\n   *\n   * @returns The gas price (in wei). {@link GetGasPriceReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const gasPrice = await client.getGasPrice()\n   */\n  getGasPrice: () => Promise<GetGasPriceReturnType>\n  /**\n   * Returns a list of event logs matching the provided parameters.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getLogs\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/filters-and-logs/event-logs\n   * - JSON-RPC Methods: [`eth_getLogs`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getlogs)\n   *\n   * @param args - {@link GetLogsParameters}\n   * @returns A list of event logs. {@link GetLogsReturnType}\n   *\n   * @example\n   * import { createPublicClient, http, parseAbiItem } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const logs = await client.getLogs()\n   */\n  getLogs: <\n    const abiEvent extends AbiEvent | undefined = undefined,\n    const abiEvents extends\n      | readonly AbiEvent[]\n      | readonly unknown[]\n      | undefined = abiEvent extends AbiEvent ? [abiEvent] : undefined,\n    strict extends boolean | undefined = undefined,\n    fromBlock extends BlockNumber | BlockTag | undefined = undefined,\n    toBlock extends BlockNumber | BlockTag | undefined = undefined,\n  >(\n    args?:\n      | GetLogsParameters<abiEvent, abiEvents, strict, fromBlock, toBlock>\n      | undefined,\n  ) => Promise<\n    GetLogsReturnType<abiEvent, abiEvents, strict, fromBlock, toBlock>\n  >\n  /**\n   * Returns the account and storage values of the specified account including the Merkle-proof.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getProof\n   * - JSON-RPC Methods:\n   *   - Calls [`eth_getProof`](https://eips.ethereum.org/EIPS/eip-1186)\n   *\n   * @param client - Client to use\n   * @param parameters - {@link GetProofParameters}\n   * @returns Proof data. {@link GetProofReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const block = await client.getProof({\n   *  address: '0x...',\n   *  storageKeys: ['0x...'],\n   * })\n   */\n  getProof: (args: GetProofParameters) => Promise<GetProofReturnType>\n  /**\n   * Returns an estimate for the max priority fee per gas (in wei) for a transaction\n   * to be included in the next block.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/estimateMaxPriorityFeePerGas\n   *\n   * @param client - Client to use\n   * @returns An estimate (in wei) for the max priority fee per gas. {@link EstimateMaxPriorityFeePerGasReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const maxPriorityFeePerGas = await client.estimateMaxPriorityFeePerGas()\n   * // 10000000n\n   */\n  estimateMaxPriorityFeePerGas: <\n    chainOverride extends Chain | undefined = undefined,\n  >(\n    args?:\n      | EstimateMaxPriorityFeePerGasParameters<chain, chainOverride>\n      | undefined,\n  ) => Promise<EstimateMaxPriorityFeePerGasReturnType>\n  /**\n   * Returns the value from a storage slot at a given address.\n   *\n   * - Docs: https://viem.sh/docs/contract/getStorageAt\n   * - JSON-RPC Methods: [`eth_getStorageAt`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getstorageat)\n   *\n   * @param args - {@link GetStorageAtParameters}\n   * @returns The value of the storage slot. {@link GetStorageAtReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { getStorageAt } from 'viem/contract'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const code = await client.getStorageAt({\n   *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n   *   slot: toHex(0),\n   * })\n   */\n  getStorageAt: (\n    args: GetStorageAtParameters,\n  ) => Promise<GetStorageAtReturnType>\n  /**\n   * Returns information about a [Transaction](https://viem.sh/docs/glossary/terms#transaction) given a hash or block identifier.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getTransaction\n   * - Example: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions/fetching-transactions\n   * - JSON-RPC Methods: [`eth_getTransactionByHash`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionByHash)\n   *\n   * @param args - {@link GetTransactionParameters}\n   * @returns The transaction information. {@link GetTransactionReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const transaction = await client.getTransaction({\n   *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n   * })\n   */\n  getTransaction: <blockTag extends BlockTag = 'latest'>(\n    args: GetTransactionParameters<blockTag>,\n  ) => Promise<GetTransactionReturnType<chain, blockTag>>\n  /**\n   * Returns the number of blocks passed (confirmations) since the transaction was processed on a block.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getTransactionConfirmations\n   * - Example: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions/fetching-transactions\n   * - JSON-RPC Methods: [`eth_getTransactionConfirmations`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionConfirmations)\n   *\n   * @param args - {@link GetTransactionConfirmationsParameters}\n   * @returns The number of blocks passed since the transaction was processed. If confirmations is 0, then the Transaction has not been confirmed & processed yet. {@link GetTransactionConfirmationsReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const confirmations = await client.getTransactionConfirmations({\n   *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n   * })\n   */\n  getTransactionConfirmations: (\n    args: GetTransactionConfirmationsParameters<chain>,\n  ) => Promise<GetTransactionConfirmationsReturnType>\n  /**\n   * Returns the number of [Transactions](https://viem.sh/docs/glossary/terms#transaction) an Account has broadcast / sent.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getTransactionCount\n   * - JSON-RPC Methods: [`eth_getTransactionCount`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_gettransactioncount)\n   *\n   * @param args - {@link GetTransactionCountParameters}\n   * @returns The number of transactions an account has sent. {@link GetTransactionCountReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const transactionCount = await client.getTransactionCount({\n   *   address: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   * })\n   */\n  getTransactionCount: (\n    args: GetTransactionCountParameters,\n  ) => Promise<GetTransactionCountReturnType>\n  /**\n   * Returns the [Transaction Receipt](https://viem.sh/docs/glossary/terms#transaction-receipt) given a [Transaction](https://viem.sh/docs/glossary/terms#transaction) hash.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getTransactionReceipt\n   * - Example: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions/fetching-transactions\n   * - JSON-RPC Methods: [`eth_getTransactionReceipt`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionReceipt)\n   *\n   * @param args - {@link GetTransactionReceiptParameters}\n   * @returns The transaction receipt. {@link GetTransactionReceiptReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const transactionReceipt = await client.getTransactionReceipt({\n   *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n   * })\n   */\n  getTransactionReceipt: (\n    args: GetTransactionReceiptParameters,\n  ) => Promise<GetTransactionReceiptReturnType<chain>>\n  /**\n   * Similar to [`readContract`](https://viem.sh/docs/contract/readContract), but batches up multiple functions on a contract in a single RPC call via the [`multicall3` contract](https://github.com/mds1/multicall).\n   *\n   * - Docs: https://viem.sh/docs/contract/multicall\n   *\n   * @param args - {@link MulticallParameters}\n   * @returns An array of results with accompanying status. {@link MulticallReturnType}\n   *\n   * @example\n   * import { createPublicClient, http, parseAbi } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const abi = parseAbi([\n   *   'function balanceOf(address) view returns (uint256)',\n   *   'function totalSupply() view returns (uint256)',\n   * ])\n   * const result = await client.multicall({\n   *   contracts: [\n   *     {\n   *       address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n   *       abi,\n   *       functionName: 'balanceOf',\n   *       args: ['0xA0Cf798816D4b9b9866b5330EEa46a18382f251e'],\n   *     },\n   *     {\n   *       address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n   *       abi,\n   *       functionName: 'totalSupply',\n   *     },\n   *   ],\n   * })\n   * // [{ result: 424122n, status: 'success' }, { result: 1000000n, status: 'success' }]\n   */\n  multicall: <\n    const contracts extends readonly unknown[],\n    allowFailure extends boolean = true,\n  >(\n    args: MulticallParameters<contracts, allowFailure>,\n  ) => Promise<MulticallReturnType<contracts, allowFailure>>\n  /**\n   * Prepares a transaction request for signing.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/prepareTransactionRequest\n   *\n   * @param args - {@link PrepareTransactionRequestParameters}\n   * @returns The transaction request. {@link PrepareTransactionRequestReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const request = await client.prepareTransactionRequest({\n   *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   *   to: '0x0000000000000000000000000000000000000000',\n   *   value: 1n,\n   * })\n   *\n   * @example\n   * // Account Hoisting\n   * import { createWalletClient, http } from 'viem'\n   * import { privateKeyToAccount } from 'viem/accounts'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   account: privateKeyToAccount('0x…'),\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const request = await client.prepareTransactionRequest({\n   *   to: '0x0000000000000000000000000000000000000000',\n   *   value: 1n,\n   * })\n   */\n  prepareTransactionRequest: <\n    const request extends PrepareTransactionRequestRequest<\n      chain,\n      chainOverride\n    >,\n    chainOverride extends Chain | undefined = undefined,\n    accountOverride extends Account | Address | undefined = undefined,\n  >(\n    args: PrepareTransactionRequestParameters<\n      chain,\n      account,\n      chainOverride,\n      accountOverride,\n      request\n    >,\n  ) => Promise<\n    PrepareTransactionRequestReturnType<\n      chain,\n      account,\n      chainOverride,\n      accountOverride,\n      request\n    >\n  >\n  /**\n   * Calls a read-only function on a contract, and returns the response.\n   *\n   * - Docs: https://viem.sh/docs/contract/readContract\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/contracts/reading-contracts\n   *\n   * @remarks\n   * A \"read-only\" function (constant function) on a Solidity contract is denoted by a `view` or `pure` keyword. They can only read the state of the contract, and cannot make any changes to it. Since read-only methods do not change the state of the contract, they do not require any gas to be executed, and can be called by any user without the need to pay for gas.\n   *\n   * Internally, uses a [Public Client](https://viem.sh/docs/clients/public) to call the [`call` action](https://viem.sh/docs/actions/public/call) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData).\n   *\n   * @param args - {@link ReadContractParameters}\n   * @returns The response from the contract. Type is inferred. {@link ReadContractReturnType}\n   *\n   * @example\n   * import { createPublicClient, http, parseAbi } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { readContract } from 'viem/contract'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const result = await client.readContract({\n   *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n   *   abi: parseAbi(['function balanceOf(address) view returns (uint256)']),\n   *   functionName: 'balanceOf',\n   *   args: ['0xA0Cf798816D4b9b9866b5330EEa46a18382f251e'],\n   * })\n   * // 424122n\n   */\n  readContract: <\n    const abi extends Abi | readonly unknown[],\n    functionName extends ContractFunctionName<abi, 'pure' | 'view'>,\n    args extends ContractFunctionArgs<abi, 'pure' | 'view', functionName>,\n  >(\n    args: ReadContractParameters<abi, functionName, args>,\n  ) => Promise<ReadContractReturnType<abi, functionName, args>>\n  /**\n   * Sends a **signed** transaction to the network\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/sendRawTransaction\n   * - JSON-RPC Method: [`eth_sendRawTransaction`](https://ethereum.github.io/execution-apis/api-documentation/)\n   *\n   * @param client - Client to use\n   * @param parameters - {@link SendRawTransactionParameters}\n   * @returns The transaction hash. {@link SendRawTransactionReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { sendRawTransaction } from 'viem/wallet'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   *\n   * const hash = await client.sendRawTransaction({\n   *   serializedTransaction: '0x02f850018203118080825208808080c080a04012522854168b27e5dc3d5839bab5e6b39e1a0ffd343901ce1622e3d64b48f1a04e00902ae0502c4728cbf12156290df99c3ed7de85b1dbfe20b5c36931733a33'\n   * })\n   */\n  sendRawTransaction: (\n    args: SendRawTransactionParameters,\n  ) => Promise<SendRawTransactionReturnType>\n  /**\n   * Simulates/validates a contract interaction. This is useful for retrieving **return data** and **revert reasons** of contract write functions.\n   *\n   * - Docs: https://viem.sh/docs/contract/simulateContract\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/contracts/writing-to-contracts\n   *\n   * @remarks\n   * This function does not require gas to execute and _**does not**_ change the state of the blockchain. It is almost identical to [`readContract`](https://viem.sh/docs/contract/readContract), but also supports contract write functions.\n   *\n   * Internally, uses a [Public Client](https://viem.sh/docs/clients/public) to call the [`call` action](https://viem.sh/docs/actions/public/call) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData).\n   *\n   * @param args - {@link SimulateContractParameters}\n   * @returns The simulation result and write request. {@link SimulateContractReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const result = await client.simulateContract({\n   *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n   *   abi: parseAbi(['function mint(uint32) view returns (uint32)']),\n   *   functionName: 'mint',\n   *   args: ['69420'],\n   *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   * })\n   */\n  simulateContract: <\n    const abi extends Abi | readonly unknown[],\n    functionName extends ContractFunctionName<abi, 'nonpayable' | 'payable'>,\n    args extends ContractFunctionArgs<\n      abi,\n      'nonpayable' | 'payable',\n      functionName\n    >,\n    chainOverride extends Chain | undefined,\n    accountOverride extends Account | Address | undefined = undefined,\n  >(\n    args: SimulateContractParameters<\n      abi,\n      functionName,\n      args,\n      chain,\n      chainOverride,\n      accountOverride\n    >,\n  ) => Promise<\n    SimulateContractReturnType<\n      abi,\n      functionName,\n      args,\n      chain,\n      account,\n      chainOverride,\n      accountOverride\n    >\n  >\n  /**\n   * Verify that a message was signed by the provided address.\n   *\n   * Compatible with Smart Contract Accounts & Externally Owned Accounts via [ERC-6492](https://eips.ethereum.org/EIPS/eip-6492).\n   *\n   * - Docs {@link https://viem.sh/docs/actions/public/verifyMessage}\n   *\n   * @param parameters - {@link VerifyMessageParameters}\n   * @returns Whether or not the signature is valid. {@link VerifyMessageReturnType}\n   */\n  verifyMessage: (\n    args: VerifyMessageParameters,\n  ) => Promise<VerifyMessageReturnType>\n  /**\n   * Verifies [EIP-4361](https://eips.ethereum.org/EIPS/eip-4361) formatted message was signed.\n   *\n   * Compatible with Smart Contract Accounts & Externally Owned Accounts via [ERC-6492](https://eips.ethereum.org/EIPS/eip-6492).\n   *\n   * - Docs {@link https://viem.sh/docs/siwe/actions/verifySiweMessage}\n   *\n   * @param parameters - {@link VerifySiweMessageParameters}\n   * @returns Whether or not the signature is valid. {@link VerifySiweMessageReturnType}\n   */\n  verifySiweMessage: (\n    args: VerifySiweMessageParameters,\n  ) => Promise<VerifySiweMessageReturnType>\n  /**\n   * Verify that typed data was signed by the provided address.\n   *\n   * - Docs {@link https://viem.sh/docs/actions/public/verifyTypedData}\n   *\n   * @param parameters - {@link VerifyTypedDataParameters}\n   * @returns Whether or not the signature is valid. {@link VerifyTypedDataReturnType}\n   */\n  verifyTypedData: (\n    args: VerifyTypedDataParameters,\n  ) => Promise<VerifyTypedDataReturnType>\n  /**\n   * Destroys a Filter that was created from one of the following Actions:\n   *\n   * - [`createBlockFilter`](https://viem.sh/docs/actions/public/createBlockFilter)\n   * - [`createEventFilter`](https://viem.sh/docs/actions/public/createEventFilter)\n   * - [`createPendingTransactionFilter`](https://viem.sh/docs/actions/public/createPendingTransactionFilter)\n   *\n   * - Docs: https://viem.sh/docs/actions/public/uninstallFilter\n   * - JSON-RPC Methods: [`eth_uninstallFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_uninstallFilter)\n   *\n   * @param args - {@link UninstallFilterParameters}\n   * @returns A boolean indicating if the Filter was successfully uninstalled. {@link UninstallFilterReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { createPendingTransactionFilter, uninstallFilter } from 'viem/public'\n   *\n   * const filter = await client.createPendingTransactionFilter()\n   * const uninstalled = await client.uninstallFilter({ filter })\n   * // true\n   */\n  uninstallFilter: (\n    args: UninstallFilterParameters,\n  ) => Promise<UninstallFilterReturnType>\n  /**\n   * Waits for the [Transaction](https://viem.sh/docs/glossary/terms#transaction) to be included on a [Block](https://viem.sh/docs/glossary/terms#block) (one confirmation), and then returns the [Transaction Receipt](https://viem.sh/docs/glossary/terms#transaction-receipt). If the Transaction reverts, then the action will throw an error.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/waitForTransactionReceipt\n   * - Example: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions/sending-transactions\n   * - JSON-RPC Methods:\n   *   - Polls [`eth_getTransactionReceipt`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionReceipt) on each block until it has been processed.\n   *   - If a Transaction has been replaced:\n   *     - Calls [`eth_getBlockByNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblockbynumber) and extracts the transactions\n   *     - Checks if one of the Transactions is a replacement\n   *     - If so, calls [`eth_getTransactionReceipt`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionReceipt).\n   *\n   * @remarks\n   * The `waitForTransactionReceipt` action additionally supports Replacement detection (e.g. sped up Transactions).\n   *\n   * Transactions can be replaced when a user modifies their transaction in their wallet (to speed up or cancel). Transactions are replaced when they are sent from the same nonce.\n   *\n   * There are 3 types of Transaction Replacement reasons:\n   *\n   * - `repriced`: The gas price has been modified (e.g. different `maxFeePerGas`)\n   * - `cancelled`: The Transaction has been cancelled (e.g. `value === 0n`)\n   * - `replaced`: The Transaction has been replaced (e.g. different `value` or `data`)\n   *\n   * @param args - {@link WaitForTransactionReceiptParameters}\n   * @returns The transaction receipt. {@link WaitForTransactionReceiptReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const transactionReceipt = await client.waitForTransactionReceipt({\n   *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n   * })\n   */\n  waitForTransactionReceipt: (\n    args: WaitForTransactionReceiptParameters<chain>,\n  ) => Promise<WaitForTransactionReceiptReturnType<chain>>\n  /**\n   * Watches and returns incoming block numbers.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/watchBlockNumber\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/blocks/watching-blocks\n   * - JSON-RPC Methods:\n   *   - When `poll: true`, calls [`eth_blockNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_blocknumber) on a polling interval.\n   *   - When `poll: false` & WebSocket Transport, uses a WebSocket subscription via [`eth_subscribe`](https://docs.alchemy.com/reference/eth-subscribe-polygon) and the `\"newHeads\"` event.\n   *\n   * @param args - {@link WatchBlockNumberParameters}\n   * @returns A function that can be invoked to stop watching for new block numbers. {@link WatchBlockNumberReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const unwatch = await client.watchBlockNumber({\n   *   onBlockNumber: (blockNumber) => console.log(blockNumber),\n   * })\n   */\n  watchBlockNumber: (\n    args: WatchBlockNumberParameters,\n  ) => WatchBlockNumberReturnType\n  /**\n   * Watches and returns information for incoming blocks.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/watchBlocks\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/blocks/watching-blocks\n   * - JSON-RPC Methods:\n   *   - When `poll: true`, calls [`eth_getBlockByNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getBlockByNumber) on a polling interval.\n   *   - When `poll: false` & WebSocket Transport, uses a WebSocket subscription via [`eth_subscribe`](https://docs.alchemy.com/reference/eth-subscribe-polygon) and the `\"newHeads\"` event.\n   *\n   * @param args - {@link WatchBlocksParameters}\n   * @returns A function that can be invoked to stop watching for new block numbers. {@link WatchBlocksReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const unwatch = await client.watchBlocks({\n   *   onBlock: (block) => console.log(block),\n   * })\n   */\n  watchBlocks: <\n    includeTransactions extends boolean = false,\n    blockTag extends BlockTag = 'latest',\n  >(\n    args: WatchBlocksParameters<\n      transport,\n      chain,\n      includeTransactions,\n      blockTag\n    >,\n  ) => WatchBlocksReturnType\n  /**\n   * Watches and returns emitted contract event logs.\n   *\n   * - Docs: https://viem.sh/docs/contract/watchContractEvent\n   *\n   * @remarks\n   * This Action will batch up all the event logs found within the [`pollingInterval`](https://viem.sh/docs/contract/watchContractEvent#pollinginterval-optional), and invoke them via [`onLogs`](https://viem.sh/docs/contract/watchContractEvent#onLogs).\n   *\n   * `watchContractEvent` will attempt to create an [Event Filter](https://viem.sh/docs/contract/createContractEventFilter) and listen to changes to the Filter per polling interval, however, if the RPC Provider does not support Filters (e.g. `eth_newFilter`), then `watchContractEvent` will fall back to using [`getLogs`](https://viem.sh/docs/actions/public/getLogs) instead.\n   *\n   * @param args - {@link WatchContractEventParameters}\n   * @returns A function that can be invoked to stop watching for new event logs. {@link WatchContractEventReturnType}\n   *\n   * @example\n   * import { createPublicClient, http, parseAbi } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const unwatch = client.watchContractEvent({\n   *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n   *   abi: parseAbi(['event Transfer(address indexed from, address indexed to, uint256 value)']),\n   *   eventName: 'Transfer',\n   *   args: { from: '0xc961145a54C96E3aE9bAA048c4F4D6b04C13916b' },\n   *   onLogs: (logs) => console.log(logs),\n   * })\n   */\n  watchContractEvent: <\n    const abi extends Abi | readonly unknown[],\n    eventName extends ContractEventName<abi>,\n    strict extends boolean | undefined = undefined,\n  >(\n    args: WatchContractEventParameters<abi, eventName, strict, transport>,\n  ) => WatchContractEventReturnType\n  /**\n   * Watches and returns emitted [Event Logs](https://viem.sh/docs/glossary/terms#event-log).\n   *\n   * - Docs: https://viem.sh/docs/actions/public/watchEvent\n   * - JSON-RPC Methods:\n   *   - **RPC Provider supports `eth_newFilter`:**\n   *     - Calls [`eth_newFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newfilter) to create a filter (called on initialize).\n   *     - On a polling interval, it will call [`eth_getFilterChanges`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getfilterchanges).\n   *   - **RPC Provider does not support `eth_newFilter`:**\n   *     - Calls [`eth_getLogs`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getlogs) for each block between the polling interval.\n   *\n   * @remarks\n   * This Action will batch up all the Event Logs found within the [`pollingInterval`](https://viem.sh/docs/actions/public/watchEvent#pollinginterval-optional), and invoke them via [`onLogs`](https://viem.sh/docs/actions/public/watchEvent#onLogs).\n   *\n   * `watchEvent` will attempt to create an [Event Filter](https://viem.sh/docs/actions/public/createEventFilter) and listen to changes to the Filter per polling interval, however, if the RPC Provider does not support Filters (e.g. `eth_newFilter`), then `watchEvent` will fall back to using [`getLogs`](https://viem.sh/docs/actions/public/getLogs) instead.\n   *\n   * @param args - {@link WatchEventParameters}\n   * @returns A function that can be invoked to stop watching for new Event Logs. {@link WatchEventReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const unwatch = client.watchEvent({\n   *   onLogs: (logs) => console.log(logs),\n   * })\n   */\n  watchEvent: <\n    const abiEvent extends AbiEvent | undefined = undefined,\n    const abiEvents extends\n      | readonly AbiEvent[]\n      | readonly unknown[]\n      | undefined = abiEvent extends AbiEvent ? [abiEvent] : undefined,\n    strict extends boolean | undefined = undefined,\n  >(\n    args: WatchEventParameters<abiEvent, abiEvents, strict, transport>,\n  ) => WatchEventReturnType\n  /**\n   * Watches and returns pending transaction hashes.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/watchPendingTransactions\n   * - JSON-RPC Methods:\n   *   - When `poll: true`\n   *     - Calls [`eth_newPendingTransactionFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newpendingtransactionfilter) to initialize the filter.\n   *     - Calls [`eth_getFilterChanges`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getFilterChanges) on a polling interval.\n   *   - When `poll: false` & WebSocket Transport, uses a WebSocket subscription via [`eth_subscribe`](https://docs.alchemy.com/reference/eth-subscribe-polygon) and the `\"newPendingTransactions\"` event.\n   *\n   * @remarks\n   * This Action will batch up all the pending transactions found within the [`pollingInterval`](https://viem.sh/docs/actions/public/watchPendingTransactions#pollinginterval-optional), and invoke them via [`onTransactions`](https://viem.sh/docs/actions/public/watchPendingTransactions#ontransactions).\n   *\n   * @param args - {@link WatchPendingTransactionsParameters}\n   * @returns A function that can be invoked to stop watching for new pending transaction hashes. {@link WatchPendingTransactionsReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const unwatch = await client.watchPendingTransactions({\n   *   onTransactions: (hashes) => console.log(hashes),\n   * })\n   */\n  watchPendingTransactions: (\n    args: WatchPendingTransactionsParameters<transport>,\n  ) => WatchPendingTransactionsReturnType\n}\n\nexport function publicActions<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  account extends Account | undefined = Account | undefined,\n>(\n  client: Client<transport, chain, account>,\n): PublicActions<transport, chain, account> {\n  return {\n    call: (args) => call(client, args),\n    createBlockFilter: () => createBlockFilter(client),\n    createContractEventFilter: (args) =>\n      createContractEventFilter(client, args),\n    createEventFilter: (args) => createEventFilter(client, args),\n    createPendingTransactionFilter: () =>\n      createPendingTransactionFilter(client),\n    estimateContractGas: (args) => estimateContractGas(client, args as any),\n    estimateGas: (args) => estimateGas(client, args),\n    getBalance: (args) => getBalance(client, args),\n    getBlobBaseFee: () => getBlobBaseFee(client),\n    getBlock: (args) => getBlock(client, args),\n    getBlockNumber: (args) => getBlockNumber(client, args),\n    getBlockTransactionCount: (args) => getBlockTransactionCount(client, args),\n    getBytecode: (args) => getCode(client, args),\n    getChainId: () => getChainId(client),\n    getCode: (args) => getCode(client, args),\n    getContractEvents: (args) => getContractEvents(client, args),\n    getEip712Domain: (args) => getEip712Domain(client, args),\n    getEnsAddress: (args) => getEnsAddress(client, args),\n    getEnsAvatar: (args) => getEnsAvatar(client, args),\n    getEnsName: (args) => getEnsName(client, args),\n    getEnsResolver: (args) => getEnsResolver(client, args),\n    getEnsText: (args) => getEnsText(client, args),\n    getFeeHistory: (args) => getFeeHistory(client, args),\n    estimateFeesPerGas: (args) => estimateFeesPerGas(client, args),\n    getFilterChanges: (args) => getFilterChanges(client, args),\n    getFilterLogs: (args) => getFilterLogs(client, args),\n    getGasPrice: () => getGasPrice(client),\n    getLogs: (args) => getLogs(client, args as any),\n    getProof: (args) => getProof(client, args),\n    estimateMaxPriorityFeePerGas: (args) =>\n      estimateMaxPriorityFeePerGas(client, args),\n    getStorageAt: (args) => getStorageAt(client, args),\n    getTransaction: (args) => getTransaction(client, args),\n    getTransactionConfirmations: (args) =>\n      getTransactionConfirmations(client, args),\n    getTransactionCount: (args) => getTransactionCount(client, args),\n    getTransactionReceipt: (args) => getTransactionReceipt(client, args),\n    multicall: (args) => multicall(client, args),\n    prepareTransactionRequest: (args) =>\n      prepareTransactionRequest(client as any, args as any) as any,\n    readContract: (args) => readContract(client, args),\n    sendRawTransaction: (args) => sendRawTransaction(client, args),\n    simulateContract: (args) => simulateContract(client, args),\n    verifyMessage: (args) => verifyMessage(client, args),\n    verifySiweMessage: (args) => verifySiweMessage(client, args),\n    verifyTypedData: (args) => verifyTypedData(client, args),\n    uninstallFilter: (args) => uninstallFilter(client, args),\n    waitForTransactionReceipt: (args) =>\n      waitForTransactionReceipt(client, args),\n    watchBlocks: (args) => watchBlocks(client, args),\n    watchBlockNumber: (args) => watchBlockNumber(client, args),\n    watchContractEvent: (args) => watchContractEvent(client, args),\n    watchEvent: (args) => watchEvent(client, args),\n    watchPendingTransactions: (args) => watchPendingTransactions(client, args),\n  }\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 12463, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12468, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/errors/account.ts"],"sourcesContent":["import { BaseError } from './base.js'\n\nexport type AccountNotFoundErrorType = AccountNotFoundError & {\n  name: 'AccountNotFoundError'\n}\nexport class AccountNotFoundError extends BaseError {\n  constructor({ docsPath }: { docsPath?: string | undefined } = {}) {\n    super(\n      [\n        'Could not find an Account to execute with this Action.',\n        'Please provide an Account with the `account` argument on the Action, or by supplying an `account` to the Client.',\n      ].join('\\n'),\n      {\n        docsPath,\n        docsSlug: 'account',\n        name: 'AccountNotFoundError',\n      },\n    )\n  }\n}\n\nexport type AccountTypeNotSupportedErrorType = AccountTypeNotSupportedError & {\n  name: 'AccountTypeNotSupportedError'\n}\nexport class AccountTypeNotSupportedError extends BaseError {\n  constructor({\n    docsPath,\n    metaMessages,\n    type,\n  }: {\n    docsPath?: string | undefined\n    metaMessages?: string[] | undefined\n    type: string\n  }) {\n    super(`Account type \"${type}\" is not supported.`, {\n      docsPath,\n      metaMessages,\n      name: 'AccountTypeNotSupportedError',\n    })\n  }\n}\n"],"names":[],"mappings":";;;;;;;AAKM,MAAO,6BAA6B,0IAAA,CAAA,YAAS;IACjD,YAAY,EAAE,QAAQ,EAAA,GAAwC,CAAA,CAAE,CAAA;QAC9D,KAAK,CACH;YACE;YACA;SACD,CAAC,IAAI,CAAC,OACP;YACE;YACA,UAAU;YACV,MAAM;;IAGZ;;AAMI,MAAO,qCAAqC,0IAAA,CAAA,YAAS;IACzD,YAAY,EACV,QAAQ,EACR,YAAY,EACZ,IAAI,EAKL,CAAA;QACC,KAAK,CAAC,CAAA,cAAA,EAAiB,KAAI,mBAAA,CAAqB,EAAE;YAChD;YACA;YACA,MAAM;;IAEV"}},
    {"offset": {"line": 12496, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12501, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/actions/wallet/signMessage.ts"],"sourcesContent":["import type { Account } from '../../accounts/types.js'\nimport {\n  type ParseAccountErrorType,\n  parseAccount,\n} from '../../accounts/utils/parseAccount.js'\nimport type { SignMessageErrorType as SignMessageErrorType_account } from '../../accounts/utils/signMessage.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport { AccountNotFoundError } from '../../errors/account.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { GetAccountParameter } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hex, SignableMessage } from '../../types/misc.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type ToHexErrorType,\n  stringToHex,\n  toHex,\n} from '../../utils/encoding/toHex.js'\n\nexport type SignMessageParameters<\n  account extends Account | undefined = Account | undefined,\n> = GetAccountParameter<account> & {\n  message: SignableMessage\n}\n\nexport type SignMessageReturnType = Hex\n\nexport type SignMessageErrorType =\n  | ParseAccountErrorType\n  | RequestErrorType\n  | SignMessageErrorType_account\n  | ToHexErrorType\n  | ErrorType\n\n/**\n * Calculates an Ethereum-specific signature in [EIP-191 format](https://eips.ethereum.org/EIPS/eip-191): `keccak256(\"\\x19Ethereum Signed Message:\\n\" + len(message) + message))`.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/signMessage\n * - JSON-RPC Methods:\n *   - JSON-RPC Accounts: [`personal_sign`](https://docs.metamask.io/guide/signing-data#personal-sign)\n *   - Local Accounts: Signs locally. No JSON-RPC request.\n *\n * With the calculated signature, you can:\n * - use [`verifyMessage`](https://viem.sh/docs/utilities/verifyMessage) to verify the signature,\n * - use [`recoverMessageAddress`](https://viem.sh/docs/utilities/recoverMessageAddress) to recover the signing address from a signature.\n *\n * @param client - Client to use\n * @param parameters - {@link SignMessageParameters}\n * @returns The signed message. {@link SignMessageReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { signMessage } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const signature = await signMessage(client, {\n *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n *   message: 'hello world',\n * })\n *\n * @example\n * // Account Hoisting\n * import { createWalletClient, custom } from 'viem'\n * import { privateKeyToAccount } from 'viem/accounts'\n * import { mainnet } from 'viem/chains'\n * import { signMessage } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   account: privateKeyToAccount('0x…'),\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const signature = await signMessage(client, {\n *   message: 'hello world',\n * })\n */\nexport async function signMessage<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n>(\n  client: Client<Transport, chain, account>,\n  {\n    account: account_ = client.account,\n    message,\n  }: SignMessageParameters<account>,\n): Promise<SignMessageReturnType> {\n  if (!account_)\n    throw new AccountNotFoundError({\n      docsPath: '/docs/actions/wallet/signMessage',\n    })\n  const account = parseAccount(account_)\n\n  if (account.signMessage) return account.signMessage({ message })\n\n  const message_ = (() => {\n    if (typeof message === 'string') return stringToHex(message)\n    if (message.raw instanceof Uint8Array) return toHex(message.raw)\n    return message.raw\n  })()\n\n  return client.request(\n    {\n      method: 'personal_sign',\n      params: [message_, account.address],\n    },\n    { retryCount: 0 },\n  )\n}\n"],"names":[],"mappings":";;;;;;;;;;AAiFO,eAAe,YAIpB,MAAyC,EACzC,EACE,SAAS,WAAW,OAAO,OAAO,EAClC,OAAO,EACwB;IAEjC,IAAI,CAAC,UACH,MAAM,IAAI,6IAAA,CAAA,uBAAoB,CAAC;QAC7B,UAAU;;IAEd,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,eAAY,AAAZ,EAAa;IAE7B,IAAI,QAAQ,WAAW,EAAE,OAAO,QAAQ,WAAW,CAAC;QAAE;IAAO;IAE7D,MAAM,WAAW,CAAC;QAChB,IAAI,OAAO,YAAY,UAAU,OAAO,CAAA,GAAA,sJAAA,CAAA,cAAW,AAAX,EAAY;QACpD,IAAI,QAAQ,GAAG,YAAY,YAAY,OAAO,CAAA,GAAA,sJAAA,CAAA,QAAK,AAAL,EAAM,QAAQ,GAAG;QAC/D,OAAO,QAAQ,GAAG;IACpB,CAAC;IAED,OAAO,OAAO,OAAO,CACnB;QACE,QAAQ;QACR,QAAQ;YAAC;YAAU,QAAQ,OAAO;SAAC;OAErC;QAAE,YAAY;IAAC;AAEnB"}},
    {"offset": {"line": 12534, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12539, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/uid.ts"],"sourcesContent":["const size = 256\nlet index = size\nlet buffer: string\n\nexport function uid(length = 11) {\n  if (!buffer || index + length > size * 2) {\n    buffer = ''\n    index = 0\n    for (let i = 0; i < size; i++) {\n      buffer += ((256 + Math.random() * 256) | 0).toString(16).substring(1)\n    }\n  }\n  return buffer.substring(index, index++ + length)\n}\n"],"names":[],"mappings":";;;AAAA,MAAM,OAAO;AACb,IAAI,QAAQ;AACZ,IAAI;AAEE,SAAU,IAAI,SAAS,EAAE;IAC7B,IAAI,CAAC,UAAU,QAAQ,SAAS,OAAO,GAAG;QACxC,SAAS;QACT,QAAQ;QACR,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,IAAK;YAC7B,UAAU,CAAC,AAAC,MAAM,KAAK,MAAM,KAAK,MAAO,CAAC,EAAE,QAAQ,CAAC,IAAI,SAAS,CAAC;QACrE;IACF;IACA,OAAO,OAAO,SAAS,CAAC,OAAO,UAAU;AAC3C"}},
    {"offset": {"line": 12555, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12560, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/clients/createClient.ts"],"sourcesContent":["import type { Address } from 'abitype'\n\nimport type { JsonRpcAccount } from '../accounts/types.js'\nimport {\n  type ParseAccountErrorType,\n  parseAccount,\n} from '../accounts/utils/parseAccount.js'\nimport type { ErrorType } from '../errors/utils.js'\nimport type { Account } from '../types/account.js'\nimport type { Chain } from '../types/chain.js'\nimport type {\n  EIP1193RequestFn,\n  EIP1474Methods,\n  RpcSchema,\n} from '../types/eip1193.js'\nimport type { ExactPartial, Prettify } from '../types/utils.js'\nimport type {\n  CcipRequestParameters,\n  CcipRequestReturnType,\n} from '../utils/ccip.js'\nimport { uid } from '../utils/uid.js'\nimport type { PublicActions } from './decorators/public.js'\nimport type { WalletActions } from './decorators/wallet.js'\nimport type { Transport } from './transports/createTransport.js'\n\nexport type ClientConfig<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  accountOrAddress extends Account | Address | undefined =\n    | Account\n    | Address\n    | undefined,\n  rpcSchema extends RpcSchema | undefined = undefined,\n> = {\n  /** The Account to use for the Client. This will be used for Actions that require an account as an argument. */\n  account?: accountOrAddress | Account | Address | undefined\n  /** Flags for batch settings. */\n  batch?:\n    | {\n        /** Toggle to enable `eth_call` multicall aggregation. */\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined\n      }\n    | undefined\n  /**\n   * Time (in ms) that cached data will remain in memory.\n   * @default 4_000\n   */\n  cacheTime?: number | undefined\n  /**\n   * [CCIP Read](https://eips.ethereum.org/EIPS/eip-3668) configuration.\n   * If `false`, the client will not support offchain CCIP lookups.\n   */\n  ccipRead?:\n    | {\n        /**\n         * A function that will be called to make the offchain CCIP lookup request.\n         * @see https://eips.ethereum.org/EIPS/eip-3668#client-lookup-protocol\n         */\n        request?: (\n          parameters: CcipRequestParameters,\n        ) => Promise<CcipRequestReturnType>\n      }\n    | false\n    | undefined\n  /** Chain for the client. */\n  chain?: Chain | undefined | chain\n  /** A key for the client. */\n  key?: string | undefined\n  /** A name for the client. */\n  name?: string | undefined\n  /**\n   * Frequency (in ms) for polling enabled actions & events.\n   * @default 4_000\n   */\n  pollingInterval?: number | undefined\n  /**\n   * Typed JSON-RPC schema for the client.\n   */\n  rpcSchema?: rpcSchema | undefined\n  /** The RPC transport */\n  transport: transport\n  /** The type of client. */\n  type?: string | undefined\n}\n\n// Actions that are used internally by other Actions (ie. `call` is used by `readContract`).\n// They are allowed to be extended, but must conform to their parameter & return type interfaces.\n// Example: an extended `call` action must accept `CallParameters` as parameters,\n// and conform to the `CallReturnType` return type.\ntype ExtendableProtectedActions<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  account extends Account | undefined = Account | undefined,\n> = Pick<\n  PublicActions<transport, chain, account>,\n  | 'call'\n  | 'createContractEventFilter'\n  | 'createEventFilter'\n  | 'estimateContractGas'\n  | 'estimateGas'\n  | 'getBlock'\n  | 'getBlockNumber'\n  | 'getChainId'\n  | 'getContractEvents'\n  | 'getEnsText'\n  | 'getFilterChanges'\n  | 'getGasPrice'\n  | 'getLogs'\n  | 'getTransaction'\n  | 'getTransactionCount'\n  | 'getTransactionReceipt'\n  | 'prepareTransactionRequest'\n  | 'readContract'\n  | 'sendRawTransaction'\n  | 'simulateContract'\n  | 'uninstallFilter'\n  | 'watchBlockNumber'\n  | 'watchContractEvent'\n> &\n  Pick<WalletActions<chain, account>, 'sendTransaction' | 'writeContract'>\n\n// TODO: Move `transport` to slot index 2 since `chain` and `account` used more frequently.\n// Otherwise, we end up with a lot of `Client<Transport, chain, account>` in actions.\nexport type Client<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  account extends Account | undefined = Account | undefined,\n  rpcSchema extends RpcSchema | undefined = undefined,\n  extended extends Extended | undefined = Extended | undefined,\n> = Client_Base<transport, chain, account, rpcSchema> &\n  (extended extends Extended ? extended : unknown) & {\n    extend: <\n      const client extends Extended &\n        ExactPartial<ExtendableProtectedActions<transport, chain, account>>,\n    >(\n      fn: (\n        client: Client<transport, chain, account, rpcSchema, extended>,\n      ) => client,\n    ) => Client<\n      transport,\n      chain,\n      account,\n      rpcSchema,\n      Prettify<client> & (extended extends Extended ? extended : unknown)\n    >\n  }\n\ntype Client_Base<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  account extends Account | undefined = Account | undefined,\n  rpcSchema extends RpcSchema | undefined = undefined,\n> = {\n  /** The Account of the Client. */\n  account: account\n  /** Flags for batch settings. */\n  batch?: ClientConfig['batch'] | undefined\n  /** Time (in ms) that cached data will remain in memory. */\n  cacheTime: number\n  /** [CCIP Read](https://eips.ethereum.org/EIPS/eip-3668) configuration. */\n  ccipRead?: ClientConfig['ccipRead'] | undefined\n  /** Chain for the client. */\n  chain: chain\n  /** A key for the client. */\n  key: string\n  /** A name for the client. */\n  name: string\n  /** Frequency (in ms) for polling enabled actions & events. Defaults to 4_000 milliseconds. */\n  pollingInterval: number\n  /** Request function wrapped with friendly error handling */\n  request: EIP1193RequestFn<\n    rpcSchema extends undefined ? EIP1474Methods : rpcSchema\n  >\n  /** The RPC transport */\n  transport: ReturnType<transport>['config'] & ReturnType<transport>['value']\n  /** The type of client. */\n  type: string\n  /** A unique ID for the client. */\n  uid: string\n}\n\ntype Extended = Prettify<\n  // disallow redefining base properties\n  { [_ in keyof Client_Base]?: undefined } & {\n    [key: string]: unknown\n  }\n>\n\nexport type MulticallBatchOptions = {\n  /** The maximum size (in bytes) for each calldata chunk. @default 1_024 */\n  batchSize?: number | undefined\n  /** The maximum number of milliseconds to wait before sending a batch. @default 0 */\n  wait?: number | undefined\n}\n\nexport type CreateClientErrorType = ParseAccountErrorType | ErrorType\n\nexport function createClient<\n  transport extends Transport,\n  chain extends Chain | undefined = undefined,\n  accountOrAddress extends Account | Address | undefined = undefined,\n  rpcSchema extends RpcSchema | undefined = undefined,\n>(\n  parameters: ClientConfig<transport, chain, accountOrAddress, rpcSchema>,\n): Prettify<\n  Client<\n    transport,\n    chain,\n    accountOrAddress extends Address\n      ? Prettify<JsonRpcAccount<accountOrAddress>>\n      : accountOrAddress,\n    rpcSchema\n  >\n>\n\nexport function createClient(parameters: ClientConfig): Client {\n  const {\n    batch,\n    cacheTime = parameters.pollingInterval ?? 4_000,\n    ccipRead,\n    key = 'base',\n    name = 'Base Client',\n    pollingInterval = 4_000,\n    type = 'base',\n  } = parameters\n\n  const chain = parameters.chain\n  const account = parameters.account\n    ? parseAccount(parameters.account)\n    : undefined\n  const { config, request, value } = parameters.transport({\n    chain,\n    pollingInterval,\n  })\n  const transport = { ...config, ...value }\n\n  const client = {\n    account,\n    batch,\n    cacheTime,\n    ccipRead,\n    chain,\n    key,\n    name,\n    pollingInterval,\n    request,\n    transport,\n    type,\n    uid: uid(),\n  }\n\n  function extend(base: typeof client) {\n    type ExtendFn = (base: typeof client) => unknown\n    return (extendFn: ExtendFn) => {\n      const extended = extendFn(base) as Extended\n      for (const key in client) delete extended[key]\n      const combined = { ...base, ...extended }\n      return Object.assign(combined, { extend: extend(combined as any) })\n    }\n  }\n\n  return Object.assign(client, { extend: extend(client) as any })\n}\n\n/**\n * Defines a typed JSON-RPC schema for the client.\n * Note: This is a runtime noop function.\n */\nexport function rpcSchema<rpcSchema extends RpcSchema>(): rpcSchema {\n  return null as any\n}\n"],"names":[],"mappings":";;;;;;;;;AAuNM,SAAU,aAAa,UAAwB;IACnD,MAAM,EACJ,KAAK,EACL,YAAY,WAAW,eAAe,IAAI,KAAK,EAC/C,QAAQ,EACR,MAAM,MAAM,EACZ,OAAO,aAAa,EACpB,kBAAkB,KAAK,EACvB,OAAO,MAAM,EACd,GAAG;IAEJ,MAAM,QAAQ,WAAW,KAAK;IAC9B,MAAM,UAAU,WAAW,OAAO,GAC9B,CAAA,GAAA,6JAAA,CAAA,eAAY,AAAZ,EAAa,WAAW,OAAO,IAC/B;IACJ,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,WAAW,SAAS,CAAC;QACtD;QACA;;IAEF,MAAM,YAAY;QAAE,GAAG,MAAM;QAAE,GAAG,KAAK;IAAA;IAEvC,MAAM,SAAS;QACb;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,KAAK,CAAA,GAAA,wIAAA,CAAA,MAAG,AAAH;;IAGP,SAAS,OAAO,IAAmB;QAEjC,OAAO,CAAC;YACN,MAAM,WAAW,SAAS;YAC1B,IAAK,MAAM,OAAO,OAAQ,OAAO,QAAQ,CAAC,IAAI;YAC9C,MAAM,WAAW;gBAAE,GAAG,IAAI;gBAAE,GAAG,QAAQ;YAAA;YACvC,OAAO,OAAO,MAAM,CAAC,UAAU;gBAAE,QAAQ,OAAO;YAAgB;QAClE;IACF;IAEA,OAAO,OAAO,MAAM,CAAC,QAAQ;QAAE,QAAQ,OAAO;IAAc;AAC9D;AAMM,SAAU;IACd,OAAO;AACT"}},
    {"offset": {"line": 12615, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12620, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/promise/withDedupe.ts"],"sourcesContent":["import { LruMap } from '../lru.js'\n\n/** @internal */\nexport const promiseCache = /*#__PURE__*/ new LruMap<Promise<any>>(8192)\n\ntype WithDedupeOptions = {\n  enabled?: boolean | undefined\n  id?: string | undefined\n}\n\n/** Deduplicates in-flight promises. */\nexport function withDedupe<data>(\n  fn: () => Promise<data>,\n  { enabled = true, id }: WithDedupeOptions,\n): Promise<data> {\n  if (!enabled || !id) return fn()\n  if (promiseCache.get(id)) return promiseCache.get(id)!\n  const promise = fn().finally(() => promiseCache.delete(id))\n  promiseCache.set(id, promise)\n  return promise\n}\n"],"names":[],"mappings":";;;;;;;AAGO,MAAM,eAAe,WAAA,GAAc,IAAI,wIAAA,CAAA,SAAM,CAAe;AAQ7D,SAAU,WACd,EAAuB,EACvB,EAAE,UAAU,IAAI,EAAE,EAAE,EAAqB;IAEzC,IAAI,CAAC,WAAW,CAAC,IAAI,OAAO;IAC5B,IAAI,aAAa,GAAG,CAAC,KAAK,OAAO,aAAa,GAAG,CAAC;IAClD,MAAM,UAAU,KAAK,OAAO,CAAC,IAAM,aAAa,MAAM,CAAC;IACvD,aAAa,GAAG,CAAC,IAAI;IACrB,OAAO;AACT"}},
    {"offset": {"line": 12635, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12640, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/buildRequest.ts"],"sourcesContent":["import { BaseError } from '../errors/base.js'\nimport {\n  HttpRequestError,\n  type HttpRequestErrorType,\n  type RpcRequestErrorType,\n  type TimeoutErrorType,\n  type WebSocketRequestErrorType,\n} from '../errors/request.js'\nimport {\n  ChainDisconnectedError,\n  type ChainDisconnectedErrorType,\n  InternalRpcError,\n  type InternalRpcErrorType,\n  InvalidInputRpcError,\n  type InvalidInputRpcErrorType,\n  InvalidParamsRpcError,\n  type InvalidParamsRpcErrorType,\n  InvalidRequestRpcError,\n  type InvalidRequestRpcErrorType,\n  JsonRpcVersionUnsupportedError,\n  type JsonRpcVersionUnsupportedErrorType,\n  LimitExceededRpcError,\n  type LimitExceededRpcErrorType,\n  MethodNotFoundRpcError,\n  type MethodNotFoundRpcErrorType,\n  MethodNotSupportedRpcError,\n  type MethodNotSupportedRpcErrorType,\n  ParseRpcError,\n  type ParseRpcErrorType,\n  ProviderDisconnectedError,\n  type ProviderDisconnectedErrorType,\n  type ProviderRpcErrorCode,\n  ResourceNotFoundRpcError,\n  type ResourceNotFoundRpcErrorType,\n  ResourceUnavailableRpcError,\n  type ResourceUnavailableRpcErrorType,\n  type RpcError,\n  type RpcErrorCode,\n  type RpcErrorType,\n  SwitchChainError,\n  type SwitchChainErrorType,\n  TransactionRejectedRpcError,\n  type TransactionRejectedRpcErrorType,\n  UnauthorizedProviderError,\n  type UnauthorizedProviderErrorType,\n  UnknownRpcError,\n  type UnknownRpcErrorType,\n  UnsupportedProviderMethodError,\n  type UnsupportedProviderMethodErrorType,\n  UserRejectedRequestError,\n  type UserRejectedRequestErrorType,\n} from '../errors/rpc.js'\nimport type { ErrorType } from '../errors/utils.js'\nimport type {\n  EIP1193RequestFn,\n  EIP1193RequestOptions,\n} from '../types/eip1193.js'\nimport { stringToHex } from './encoding/toHex.js'\nimport { keccak256 } from './hash/keccak256.js'\nimport type { CreateBatchSchedulerErrorType } from './promise/createBatchScheduler.js'\nimport { withDedupe } from './promise/withDedupe.js'\nimport { type WithRetryErrorType, withRetry } from './promise/withRetry.js'\nimport type { GetSocketRpcClientErrorType } from './rpc/socket.js'\nimport { stringify } from './stringify.js'\n\nexport type RequestErrorType =\n  | ChainDisconnectedErrorType\n  | CreateBatchSchedulerErrorType\n  | HttpRequestErrorType\n  | InternalRpcErrorType\n  | InvalidInputRpcErrorType\n  | InvalidParamsRpcErrorType\n  | InvalidRequestRpcErrorType\n  | GetSocketRpcClientErrorType\n  | JsonRpcVersionUnsupportedErrorType\n  | LimitExceededRpcErrorType\n  | MethodNotFoundRpcErrorType\n  | MethodNotSupportedRpcErrorType\n  | ParseRpcErrorType\n  | ProviderDisconnectedErrorType\n  | ResourceNotFoundRpcErrorType\n  | ResourceUnavailableRpcErrorType\n  | RpcErrorType\n  | RpcRequestErrorType\n  | SwitchChainErrorType\n  | TimeoutErrorType\n  | TransactionRejectedRpcErrorType\n  | UnauthorizedProviderErrorType\n  | UnknownRpcErrorType\n  | UnsupportedProviderMethodErrorType\n  | UserRejectedRequestErrorType\n  | WebSocketRequestErrorType\n  | WithRetryErrorType\n  | ErrorType\n\nexport function buildRequest<request extends (args: any) => Promise<any>>(\n  request: request,\n  options: EIP1193RequestOptions = {},\n): EIP1193RequestFn {\n  return async (args, overrideOptions = {}) => {\n    const {\n      dedupe = false,\n      retryDelay = 150,\n      retryCount = 3,\n      uid,\n    } = {\n      ...options,\n      ...overrideOptions,\n    }\n    const requestId = dedupe\n      ? keccak256(stringToHex(`${uid}.${stringify(args)}`))\n      : undefined\n    return withDedupe(\n      () =>\n        withRetry(\n          async () => {\n            try {\n              return await request(args)\n            } catch (err_) {\n              const err = err_ as unknown as RpcError<\n                RpcErrorCode | ProviderRpcErrorCode\n              >\n              switch (err.code) {\n                // -32700\n                case ParseRpcError.code:\n                  throw new ParseRpcError(err)\n                // -32600\n                case InvalidRequestRpcError.code:\n                  throw new InvalidRequestRpcError(err)\n                // -32601\n                case MethodNotFoundRpcError.code:\n                  throw new MethodNotFoundRpcError(err, { method: args.method })\n                // -32602\n                case InvalidParamsRpcError.code:\n                  throw new InvalidParamsRpcError(err)\n                // -32603\n                case InternalRpcError.code:\n                  throw new InternalRpcError(err)\n                // -32000\n                case InvalidInputRpcError.code:\n                  throw new InvalidInputRpcError(err)\n                // -32001\n                case ResourceNotFoundRpcError.code:\n                  throw new ResourceNotFoundRpcError(err)\n                // -32002\n                case ResourceUnavailableRpcError.code:\n                  throw new ResourceUnavailableRpcError(err)\n                // -32003\n                case TransactionRejectedRpcError.code:\n                  throw new TransactionRejectedRpcError(err)\n                // -32004\n                case MethodNotSupportedRpcError.code:\n                  throw new MethodNotSupportedRpcError(err, {\n                    method: args.method,\n                  })\n                // -32005\n                case LimitExceededRpcError.code:\n                  throw new LimitExceededRpcError(err)\n                // -32006\n                case JsonRpcVersionUnsupportedError.code:\n                  throw new JsonRpcVersionUnsupportedError(err)\n                // 4001\n                case UserRejectedRequestError.code:\n                  throw new UserRejectedRequestError(err)\n                // 4100\n                case UnauthorizedProviderError.code:\n                  throw new UnauthorizedProviderError(err)\n                // 4200\n                case UnsupportedProviderMethodError.code:\n                  throw new UnsupportedProviderMethodError(err)\n                // 4900\n                case ProviderDisconnectedError.code:\n                  throw new ProviderDisconnectedError(err)\n                // 4901\n                case ChainDisconnectedError.code:\n                  throw new ChainDisconnectedError(err)\n                // 4902\n                case SwitchChainError.code:\n                  throw new SwitchChainError(err)\n                // CAIP-25: User Rejected Error\n                // https://docs.walletconnect.com/2.0/specs/clients/sign/error-codes#rejected-caip-25\n                case 5000:\n                  throw new UserRejectedRequestError(err)\n                default:\n                  if (err_ instanceof BaseError) throw err_\n                  throw new UnknownRpcError(err as Error)\n              }\n            }\n          },\n          {\n            delay: ({ count, error }) => {\n              // If we find a Retry-After header, let's retry after the given time.\n              if (error && error instanceof HttpRequestError) {\n                const retryAfter = error?.headers?.get('Retry-After')\n                if (retryAfter?.match(/\\d/))\n                  return Number.parseInt(retryAfter) * 1000\n              }\n\n              // Otherwise, let's retry with an exponential backoff.\n              return ~~(1 << count) * retryDelay\n            },\n            retryCount,\n            shouldRetry: ({ error }) => shouldRetry(error),\n          },\n        ),\n      { enabled: dedupe, id: requestId },\n    )\n  }\n}\n\n/** @internal */\nexport function shouldRetry(error: Error) {\n  if ('code' in error && typeof error.code === 'number') {\n    if (error.code === -1) return true // Unknown error\n    if (error.code === LimitExceededRpcError.code) return true\n    if (error.code === InternalRpcError.code) return true\n    return false\n  }\n  if (error instanceof HttpRequestError && error.status) {\n    // Forbidden\n    if (error.status === 403) return true\n    // Request Timeout\n    if (error.status === 408) return true\n    // Request Entity Too Large\n    if (error.status === 413) return true\n    // Too Many Requests\n    if (error.status === 429) return true\n    // Internal Server Error\n    if (error.status === 500) return true\n    // Bad Gateway\n    if (error.status === 502) return true\n    // Service Unavailable\n    if (error.status === 503) return true\n    // Gateway Timeout\n    if (error.status === 504) return true\n    return false\n  }\n  return true\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 12787, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12792, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/clients/transports/createTransport.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { EIP1193RequestFn } from '../../types/eip1193.js'\nimport { buildRequest } from '../../utils/buildRequest.js'\nimport { uid as uid_ } from '../../utils/uid.js'\nimport type { ClientConfig } from '../createClient.js'\n\nexport type TransportConfig<\n  type extends string = string,\n  eip1193RequestFn extends EIP1193RequestFn = EIP1193RequestFn,\n> = {\n  /** The name of the transport. */\n  name: string\n  /** The key of the transport. */\n  key: string\n  /** The JSON-RPC request function that matches the EIP-1193 request spec. */\n  request: eip1193RequestFn\n  /** The base delay (in ms) between retries. */\n  retryDelay?: number | undefined\n  /** The max number of times to retry. */\n  retryCount?: number | undefined\n  /** The timeout (in ms) for requests. */\n  timeout?: number | undefined\n  /** The type of the transport. */\n  type: type\n}\n\nexport type Transport<\n  type extends string = string,\n  rpcAttributes = Record<string, any>,\n  eip1193RequestFn extends EIP1193RequestFn = EIP1193RequestFn,\n> = <chain extends Chain | undefined = Chain>({\n  chain,\n}: {\n  chain?: chain | undefined\n  pollingInterval?: ClientConfig['pollingInterval'] | undefined\n  retryCount?: TransportConfig['retryCount'] | undefined\n  timeout?: TransportConfig['timeout'] | undefined\n}) => {\n  config: TransportConfig<type>\n  request: eip1193RequestFn\n  value?: rpcAttributes | undefined\n}\n\nexport type CreateTransportErrorType = ErrorType\n\n/**\n * @description Creates an transport intended to be used with a client.\n */\nexport function createTransport<\n  type extends string,\n  rpcAttributes extends Record<string, any>,\n>(\n  {\n    key,\n    name,\n    request,\n    retryCount = 3,\n    retryDelay = 150,\n    timeout,\n    type,\n  }: TransportConfig<type>,\n  value?: rpcAttributes | undefined,\n): ReturnType<Transport<type, rpcAttributes>> {\n  const uid = uid_()\n  return {\n    config: {\n      key,\n      name,\n      request,\n      retryCount,\n      retryDelay,\n      timeout,\n      type,\n    },\n    request: buildRequest(request, { retryCount, retryDelay, uid }),\n    value,\n  }\n}\n"],"names":[],"mappings":";;;;;;;;AAiDM,SAAU,gBAId,EACE,GAAG,EACH,IAAI,EACJ,OAAO,EACP,aAAa,CAAC,EACd,aAAa,GAAG,EAChB,OAAO,EACP,IAAI,EACkB,EACxB,KAAiC;IAEjC,MAAM,MAAM,CAAA,GAAA,wIAAA,CAAA,MAAI,AAAJ;IACZ,OAAO;QACL,QAAQ;YACN;YACA;YACA;YACA;YACA;YACA;YACA;;QAEF,SAAS,CAAA,GAAA,iJAAA,CAAA,eAAY,AAAZ,EAAa,SAAS;YAAE;YAAY;YAAY;QAAG;QAC5D;;AAEJ"}},
    {"offset": {"line": 12820, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12825, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/clients/transports/custom.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\nimport {\n  type CreateTransportErrorType,\n  type Transport,\n  type TransportConfig,\n  createTransport,\n} from './createTransport.js'\n\ntype EthereumProvider = { request(...args: any): Promise<any> }\n\nexport type CustomTransportConfig = {\n  /** The key of the transport. */\n  key?: TransportConfig['key'] | undefined\n  /** The name of the transport. */\n  name?: TransportConfig['name'] | undefined\n  /** The max number of times to retry. */\n  retryCount?: TransportConfig['retryCount'] | undefined\n  /** The base delay (in ms) between retries. */\n  retryDelay?: TransportConfig['retryDelay'] | undefined\n}\n\nexport type CustomTransport = Transport<\n  'custom',\n  {},\n  EthereumProvider['request']\n>\n\nexport type CustomTransportErrorType = CreateTransportErrorType | ErrorType\n\n/**\n * @description Creates a custom transport given an EIP-1193 compliant `request` attribute.\n */\nexport function custom<provider extends EthereumProvider>(\n  provider: provider,\n  config: CustomTransportConfig = {},\n): CustomTransport {\n  const { key = 'custom', name = 'Custom Provider', retryDelay } = config\n  return ({ retryCount: defaultRetryCount }) =>\n    createTransport({\n      key,\n      name,\n      request: provider.request.bind(provider),\n      retryCount: config.retryCount ?? defaultRetryCount,\n      retryDelay,\n      type: 'custom',\n    })\n}\n"],"names":[],"mappings":";;;;;;AAgCM,SAAU,OACd,QAAkB,EAClB,SAAgC,CAAA,CAAE;IAElC,MAAM,EAAE,MAAM,QAAQ,EAAE,OAAO,iBAAiB,EAAE,UAAU,EAAE,GAAG;IACjE,OAAO,CAAC,EAAE,YAAY,iBAAiB,EAAE,GACvC,CAAA,GAAA,oKAAA,CAAA,kBAAe,AAAf,EAAgB;YACd;YACA;YACA,SAAS,SAAS,OAAO,CAAC,IAAI,CAAC;YAC/B,YAAY,OAAO,UAAU,IAAI;YACjC;YACA,MAAM;;AAEZ"}},
    {"offset": {"line": 12842, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12847, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/promise/withTimeout.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\n\nexport type WithTimeoutErrorType = ErrorType\n\nexport function withTimeout<data>(\n  fn: ({\n    signal,\n  }: { signal: AbortController['signal'] | null }) => Promise<data>,\n  {\n    errorInstance = new Error('timed out'),\n    timeout,\n    signal,\n  }: {\n    // The error instance to throw when the timeout is reached.\n    errorInstance?: Error | undefined\n    // The timeout (in ms).\n    timeout: number\n    // Whether or not the timeout should use an abort signal.\n    signal?: boolean | undefined\n  },\n): Promise<data> {\n  return new Promise((resolve, reject) => {\n    ;(async () => {\n      let timeoutId!: NodeJS.Timeout\n      try {\n        const controller = new AbortController()\n        if (timeout > 0) {\n          timeoutId = setTimeout(() => {\n            if (signal) {\n              controller.abort()\n            } else {\n              reject(errorInstance)\n            }\n          }, timeout) as NodeJS.Timeout // need to cast because bun globals.d.ts overrides @types/node\n        }\n        resolve(await fn({ signal: controller?.signal || null }))\n      } catch (err) {\n        if ((err as Error)?.name === 'AbortError') reject(errorInstance)\n        reject(err)\n      } finally {\n        clearTimeout(timeoutId)\n      }\n    })()\n  })\n}\n"],"names":[],"mappings":";;;AAIM,SAAU,YACd,EAEiE,EACjE,EACE,gBAAgB,IAAI,MAAM,YAAY,EACtC,OAAO,EACP,MAAM,EAQP;IAED,OAAO,IAAI,QAAQ,CAAC,SAAS;;QAC1B,CAAC;YACA,IAAI;YACJ,IAAI;gBACF,MAAM,aAAa,IAAI;gBACvB,IAAI,UAAU,GAAG;oBACf,YAAY,WAAW;wBACrB,IAAI,QAAQ;4BACV,WAAW,KAAK;wBAClB,OAAO;4BACL,OAAO;wBACT;oBACF,GAAG,UAA2B,8DAA8D;gBAC9F;gBACA,QAAQ,MAAM,GAAG;oBAAE,QAAQ,YAAY,UAAU;gBAAI;YACvD,EAAE,OAAO,KAAK;gBACZ,IAAK,KAAe,SAAS,cAAc,OAAO;gBAClD,OAAO;YACT,SAAU;gBACR,aAAa;YACf;QACF,CAAC;IACH;AACF"}},
    {"offset": {"line": 12878, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12883, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/errors/transport.ts"],"sourcesContent":["import { BaseError } from './base.js'\n\nexport type UrlRequiredErrorType = UrlRequiredError & {\n  name: 'UrlRequiredError'\n}\nexport class UrlRequiredError extends BaseError {\n  constructor() {\n    super(\n      'No URL was provided to the Transport. Please provide a valid RPC URL to the Transport.',\n      {\n        docsPath: '/docs/clients/intro',\n        name: 'UrlRequiredError',\n      },\n    )\n  }\n}\n"],"names":[],"mappings":";;;;;;AAKM,MAAO,yBAAyB,0IAAA,CAAA,YAAS;IAC7C,aAAA;QACE,KAAK,CACH,0FACA;YACE,UAAU;YACV,MAAM;;IAGZ"}},
    {"offset": {"line": 12897, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12902, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/rpc/id.ts"],"sourcesContent":["function createIdStore() {\n  return {\n    current: 0,\n    take() {\n      return this.current++\n    },\n    reset() {\n      this.current = 0\n    },\n  }\n}\n\nexport const idCache = /*#__PURE__*/ createIdStore()\n"],"names":[],"mappings":";;;AAAA,SAAS;IACP,OAAO;QACL,SAAS;QACT;YACE,OAAO,IAAI,CAAC,OAAO;QACrB;QACA;YACE,IAAI,CAAC,OAAO,GAAG;QACjB;;AAEJ;AAEO,MAAM,UAAU,WAAA,GAAc"}},
    {"offset": {"line": 12917, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12922, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/rpc/http.ts"],"sourcesContent":["import {\n  HttpRequestError,\n  type HttpRequestErrorType as HttpRequestErrorType_,\n  TimeoutError,\n  type TimeoutErrorType,\n} from '../../errors/request.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { RpcRequest, RpcResponse } from '../../types/rpc.js'\nimport type { MaybePromise } from '../../types/utils.js'\nimport {\n  type WithTimeoutErrorType,\n  withTimeout,\n} from '../promise/withTimeout.js'\nimport { stringify } from '../stringify.js'\nimport { idCache } from './id.js'\n\nexport type HttpRpcClientOptions = {\n  /** Request configuration to pass to `fetch`. */\n  fetchOptions?: Omit<RequestInit, 'body'> | undefined\n  /** A callback to handle the request. */\n  onRequest?:\n    | ((\n        request: Request,\n        init: RequestInit,\n      ) => MaybePromise<\n        void | undefined | (RequestInit & { url?: string | undefined })\n      >)\n    | undefined\n  /** A callback to handle the response. */\n  onResponse?: ((response: Response) => Promise<void> | void) | undefined\n  /** The timeout (in ms) for the request. */\n  timeout?: number | undefined\n}\n\nexport type HttpRequestParameters<\n  body extends RpcRequest | RpcRequest[] = RpcRequest,\n> = {\n  /** The RPC request body. */\n  body: body\n  /** Request configuration to pass to `fetch`. */\n  fetchOptions?: HttpRpcClientOptions['fetchOptions'] | undefined\n  /** A callback to handle the response. */\n  onRequest?:\n    | ((\n        request: Request,\n        init: RequestInit,\n      ) => MaybePromise<\n        void | undefined | (RequestInit & { url?: string | undefined })\n      >)\n    | undefined\n  /** A callback to handle the response. */\n  onResponse?: ((response: Response) => Promise<void> | void) | undefined\n  /** The timeout (in ms) for the request. */\n  timeout?: HttpRpcClientOptions['timeout'] | undefined\n}\n\nexport type HttpRequestReturnType<\n  body extends RpcRequest | RpcRequest[] = RpcRequest,\n> = body extends RpcRequest[] ? RpcResponse[] : RpcResponse\n\nexport type HttpRequestErrorType =\n  | HttpRequestErrorType_\n  | TimeoutErrorType\n  | WithTimeoutErrorType\n  | ErrorType\n\nexport type HttpRpcClient = {\n  request<body extends RpcRequest | RpcRequest[]>(\n    params: HttpRequestParameters<body>,\n  ): Promise<HttpRequestReturnType<body>>\n}\n\nexport function getHttpRpcClient(\n  url: string,\n  options: HttpRpcClientOptions = {},\n): HttpRpcClient {\n  return {\n    async request(params) {\n      const {\n        body,\n        onRequest = options.onRequest,\n        onResponse = options.onResponse,\n        timeout = options.timeout ?? 10_000,\n      } = params\n\n      const fetchOptions = {\n        ...(options.fetchOptions ?? {}),\n        ...(params.fetchOptions ?? {}),\n      }\n\n      const { headers, method, signal: signal_ } = fetchOptions\n\n      try {\n        const response = await withTimeout(\n          async ({ signal }) => {\n            const init: RequestInit = {\n              ...fetchOptions,\n              body: Array.isArray(body)\n                ? stringify(\n                    body.map((body) => ({\n                      jsonrpc: '2.0',\n                      id: body.id ?? idCache.take(),\n                      ...body,\n                    })),\n                  )\n                : stringify({\n                    jsonrpc: '2.0',\n                    id: body.id ?? idCache.take(),\n                    ...body,\n                  }),\n              headers: {\n                'Content-Type': 'application/json',\n                ...headers,\n              },\n              method: method || 'POST',\n              signal: signal_ || (timeout > 0 ? signal : null),\n            }\n            const request = new Request(url, init)\n            const args = (await onRequest?.(request, init)) ?? { ...init, url }\n            const response = await fetch(args.url ?? url, args)\n            return response\n          },\n          {\n            errorInstance: new TimeoutError({ body, url }),\n            timeout,\n            signal: true,\n          },\n        )\n\n        if (onResponse) await onResponse(response)\n\n        let data: any\n        if (\n          response.headers.get('Content-Type')?.startsWith('application/json')\n        )\n          data = await response.json()\n        else {\n          data = await response.text()\n          try {\n            data = JSON.parse(data || '{}')\n          } catch (err) {\n            if (response.ok) throw err\n            data = { error: data }\n          }\n        }\n\n        if (!response.ok) {\n          throw new HttpRequestError({\n            body,\n            details: stringify(data.error) || response.statusText,\n            headers: response.headers,\n            status: response.status,\n            url,\n          })\n        }\n\n        return data\n      } catch (err) {\n        if (err instanceof HttpRequestError) throw err\n        if (err instanceof TimeoutError) throw err\n        throw new HttpRequestError({\n          body,\n          cause: err as Error,\n          url,\n        })\n      }\n    },\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;;;;AAwEM,SAAU,iBACd,GAAW,EACX,UAAgC,CAAA,CAAE;IAElC,OAAO;QACL,MAAM,SAAQ,MAAM;YAClB,MAAM,EACJ,IAAI,EACJ,YAAY,QAAQ,SAAS,EAC7B,aAAa,QAAQ,UAAU,EAC/B,UAAU,QAAQ,OAAO,IAAI,MAAM,EACpC,GAAG;YAEJ,MAAM,eAAe;gBACnB,GAAI,QAAQ,YAAY,IAAI,CAAA,CAAE;gBAC9B,GAAI,OAAO,YAAY,IAAI,CAAA,CAAE;;YAG/B,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,OAAO,EAAE,GAAG;YAE7C,IAAI;gBACF,MAAM,WAAW,MAAM,CAAA,GAAA,2JAAA,CAAA,cAAW,AAAX,EACrB,OAAO,EAAE,MAAM,EAAE;oBACf,MAAM,OAAoB;wBACxB,GAAG,YAAY;wBACf,MAAM,MAAM,OAAO,CAAC,QAChB,CAAA,GAAA,8IAAA,CAAA,YAAS,AAAT,EACE,KAAK,GAAG,CAAC,CAAC,OAAS,CAAC;gCAClB,SAAS;gCACT,IAAI,KAAK,EAAE,IAAI,8IAAA,CAAA,UAAO,CAAC,IAAI;gCAC3B,GAAG,IAAI;6BACR,MAEH,CAAA,GAAA,8IAAA,CAAA,YAAS,AAAT,EAAU;4BACR,SAAS;4BACT,IAAI,KAAK,EAAE,IAAI,8IAAA,CAAA,UAAO,CAAC,IAAI;4BAC3B,GAAG,IAAI;;wBAEb,SAAS;4BACP,gBAAgB;4BAChB,GAAG,OAAO;;wBAEZ,QAAQ,UAAU;wBAClB,QAAQ,WAAW,CAAC,UAAU,IAAI,SAAS,IAAI;;oBAEjD,MAAM,UAAU,IAAI,QAAQ,KAAK;oBACjC,MAAM,OAAO,AAAC,MAAM,YAAY,SAAS,SAAU;wBAAE,GAAG,IAAI;wBAAE;oBAAG;oBACjE,MAAM,WAAW,MAAM,MAAM,KAAK,GAAG,IAAI,KAAK;oBAC9C,OAAO;gBACT,GACA;oBACE,eAAe,IAAI,6IAAA,CAAA,eAAY,CAAC;wBAAE;wBAAM;oBAAG;oBAC3C;oBACA,QAAQ;;gBAIZ,IAAI,YAAY,MAAM,WAAW;gBAEjC,IAAI;gBACJ,IACE,SAAS,OAAO,CAAC,GAAG,CAAC,iBAAiB,WAAW,qBAEjD,OAAO,MAAM,SAAS,IAAI;qBACvB;oBACH,OAAO,MAAM,SAAS,IAAI;oBAC1B,IAAI;wBACF,OAAO,KAAK,KAAK,CAAC,QAAQ;oBAC5B,EAAE,OAAO,KAAK;wBACZ,IAAI,SAAS,EAAE,EAAE,MAAM;wBACvB,OAAO;4BAAE,OAAO;wBAAI;oBACtB;gBACF;gBAEA,IAAI,CAAC,SAAS,EAAE,EAAE;oBAChB,MAAM,IAAI,6IAAA,CAAA,mBAAgB,CAAC;wBACzB;wBACA,SAAS,CAAA,GAAA,8IAAA,CAAA,YAAS,AAAT,EAAU,KAAK,KAAK,KAAK,SAAS,UAAU;wBACrD,SAAS,SAAS,OAAO;wBACzB,QAAQ,SAAS,MAAM;wBACvB;;gBAEJ;gBAEA,OAAO;YACT,EAAE,OAAO,KAAK;gBACZ,IAAI,eAAe,6IAAA,CAAA,mBAAgB,EAAE,MAAM;gBAC3C,IAAI,eAAe,6IAAA,CAAA,eAAY,EAAE,MAAM;gBACvC,MAAM,IAAI,6IAAA,CAAA,mBAAgB,CAAC;oBACzB;oBACA,OAAO;oBACP;;YAEJ;QACF;;AAEJ"}},
    {"offset": {"line": 13014, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13019, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/clients/transports/http.ts"],"sourcesContent":["import { RpcRequestError } from '../../errors/request.js'\nimport {\n  UrlRequiredError,\n  type UrlRequiredErrorType,\n} from '../../errors/transport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { RpcRequest } from '../../types/rpc.js'\nimport { createBatchScheduler } from '../../utils/promise/createBatchScheduler.js'\nimport {\n  type HttpRpcClientOptions,\n  getHttpRpcClient,\n} from '../../utils/rpc/http.js'\n\nimport {\n  type CreateTransportErrorType,\n  type Transport,\n  type TransportConfig,\n  createTransport,\n} from './createTransport.js'\n\nexport type HttpTransportConfig = {\n  /**\n   * Whether to enable Batch JSON-RPC.\n   * @link https://www.jsonrpc.org/specification#batch\n   */\n  batch?:\n    | boolean\n    | {\n        /** The maximum number of JSON-RPC requests to send in a batch. @default 1_000 */\n        batchSize?: number | undefined\n        /** The maximum number of milliseconds to wait before sending a batch. @default 0 */\n        wait?: number | undefined\n      }\n    | undefined\n  /**\n   * Request configuration to pass to `fetch`.\n   * @link https://developer.mozilla.org/en-US/docs/Web/API/fetch\n   */\n  fetchOptions?: HttpRpcClientOptions['fetchOptions'] | undefined\n  /** A callback to handle the response from `fetch`. */\n  onFetchRequest?: HttpRpcClientOptions['onRequest'] | undefined\n  /** A callback to handle the response from `fetch`. */\n  onFetchResponse?: HttpRpcClientOptions['onResponse'] | undefined\n  /** The key of the HTTP transport. */\n  key?: TransportConfig['key'] | undefined\n  /** The name of the HTTP transport. */\n  name?: TransportConfig['name'] | undefined\n  /** The max number of times to retry. */\n  retryCount?: TransportConfig['retryCount'] | undefined\n  /** The base delay (in ms) between retries. */\n  retryDelay?: TransportConfig['retryDelay'] | undefined\n  /** The timeout (in ms) for the HTTP request. Default: 10_000 */\n  timeout?: TransportConfig['timeout'] | undefined\n}\n\nexport type HttpTransport = Transport<\n  'http',\n  {\n    fetchOptions?: HttpTransportConfig['fetchOptions'] | undefined\n    url?: string | undefined\n  }\n>\n\nexport type HttpTransportErrorType =\n  | CreateTransportErrorType\n  | UrlRequiredErrorType\n  | ErrorType\n\n/**\n * @description Creates a HTTP transport that connects to a JSON-RPC API.\n */\nexport function http(\n  /** URL of the JSON-RPC API. Defaults to the chain's public RPC URL. */\n  url?: string | undefined,\n  config: HttpTransportConfig = {},\n): HttpTransport {\n  const {\n    batch,\n    fetchOptions,\n    key = 'http',\n    name = 'HTTP JSON-RPC',\n    onFetchRequest,\n    onFetchResponse,\n    retryDelay,\n  } = config\n  return ({ chain, retryCount: retryCount_, timeout: timeout_ }) => {\n    const { batchSize = 1000, wait = 0 } =\n      typeof batch === 'object' ? batch : {}\n    const retryCount = config.retryCount ?? retryCount_\n    const timeout = timeout_ ?? config.timeout ?? 10_000\n    const url_ = url || chain?.rpcUrls.default.http[0]\n    if (!url_) throw new UrlRequiredError()\n\n    const rpcClient = getHttpRpcClient(url_, {\n      fetchOptions,\n      onRequest: onFetchRequest,\n      onResponse: onFetchResponse,\n      timeout,\n    })\n\n    return createTransport(\n      {\n        key,\n        name,\n        async request({ method, params }) {\n          const body = { method, params }\n\n          const { schedule } = createBatchScheduler({\n            id: url_,\n            wait,\n            shouldSplitBatch(requests) {\n              return requests.length > batchSize\n            },\n            fn: (body: RpcRequest[]) =>\n              rpcClient.request({\n                body,\n              }),\n            sort: (a, b) => a.id - b.id,\n          })\n\n          const fn = async (body: RpcRequest) =>\n            batch\n              ? schedule(body)\n              : [\n                  await rpcClient.request({\n                    body,\n                  }),\n                ]\n\n          const [{ error, result }] = await fn(body)\n          if (error)\n            throw new RpcRequestError({\n              body,\n              error,\n              url: url_,\n            })\n          return result\n        },\n        retryCount,\n        retryDelay,\n        timeout,\n        type: 'http',\n      },\n      {\n        fetchOptions,\n        url: url_,\n      },\n    )\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;AAuEM,SAAU,KACd,qEAAA,GACA,GAAwB,EACxB,SAA8B,CAAA,CAAE;IAEhC,MAAM,EACJ,KAAK,EACL,YAAY,EACZ,MAAM,MAAM,EACZ,OAAO,eAAe,EACtB,cAAc,EACd,eAAe,EACf,UAAU,EACX,GAAG;IACJ,OAAO,CAAC,EAAE,KAAK,EAAE,YAAY,WAAW,EAAE,SAAS,QAAQ,EAAE;QAC3D,MAAM,EAAE,YAAY,IAAI,EAAE,OAAO,CAAC,EAAE,GAClC,OAAO,UAAU,WAAW,QAAQ,CAAA;QACtC,MAAM,aAAa,OAAO,UAAU,IAAI;QACxC,MAAM,UAAU,YAAY,OAAO,OAAO,IAAI;QAC9C,MAAM,OAAO,OAAO,OAAO,QAAQ,QAAQ,IAAI,CAAC,EAAE;QAClD,IAAI,CAAC,MAAM,MAAM,IAAI,+IAAA,CAAA,mBAAgB;QAErC,MAAM,YAAY,CAAA,GAAA,gJAAA,CAAA,mBAAgB,AAAhB,EAAiB,MAAM;YACvC;YACA,WAAW;YACX,YAAY;YACZ;;QAGF,OAAO,CAAA,GAAA,oKAAA,CAAA,kBAAe,AAAf,EACL;YACE;YACA;YACA,MAAM,SAAQ,EAAE,MAAM,EAAE,MAAM,EAAE;gBAC9B,MAAM,OAAO;oBAAE;oBAAQ;gBAAM;gBAE7B,MAAM,EAAE,QAAQ,EAAE,GAAG,CAAA,GAAA,oKAAA,CAAA,uBAAoB,AAApB,EAAqB;oBACxC,IAAI;oBACJ;oBACA,kBAAiB,QAAQ;wBACvB,OAAO,SAAS,MAAM,GAAG;oBAC3B;oBACA,IAAI,CAAC,OACH,UAAU,OAAO,CAAC;4BAChB;;oBAEJ,MAAM,CAAC,GAAG,IAAM,EAAE,EAAE,GAAG,EAAE,EAAE;;gBAG7B,MAAM,KAAK,OAAO,OAChB,QACI,SAAS,QACT;wBACE,MAAM,UAAU,OAAO,CAAC;4BACtB;;qBAEH;gBAEP,MAAM,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,GAAG,MAAM,GAAG;gBACrC,IAAI,OACF,MAAM,IAAI,6IAAA,CAAA,kBAAe,CAAC;oBACxB;oBACA;oBACA,KAAK;;gBAET,OAAO;YACT;YACA;YACA;YACA;YACA,MAAM;WAER;YACE;YACA,KAAK;;IAGX;AACF"}},
    {"offset": {"line": 13089, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13094, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/chain/assertCurrentChain.ts"],"sourcesContent":["import {\n  ChainMismatchError,\n  type ChainMismatchErrorType,\n  ChainNotFoundError,\n  type ChainNotFoundErrorType,\n} from '../../errors/chain.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\n\nexport type AssertCurrentChainParameters = {\n  chain?: Chain | undefined\n  currentChainId: number\n}\n\nexport type AssertCurrentChainErrorType =\n  | ChainNotFoundErrorType\n  | ChainMismatchErrorType\n  | ErrorType\n\nexport function assertCurrentChain({\n  chain,\n  currentChainId,\n}: AssertCurrentChainParameters): void {\n  if (!chain) throw new ChainNotFoundError()\n  if (currentChainId !== chain.id)\n    throw new ChainMismatchError({ chain, currentChainId })\n}\n"],"names":[],"mappings":";;;;;;AAmBM,SAAU,mBAAmB,EACjC,KAAK,EACL,cAAc,EACe;IAC7B,IAAI,CAAC,OAAO,MAAM,IAAI,2IAAA,CAAA,qBAAkB;IACxC,IAAI,mBAAmB,MAAM,EAAE,EAC7B,MAAM,IAAI,2IAAA,CAAA,qBAAkB,CAAC;QAAE;QAAO;IAAc;AACxD"}},
    {"offset": {"line": 13107, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13112, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/errors/getTransactionError.ts"],"sourcesContent":["import type { Account } from '../../accounts/types.js'\nimport type { SendTransactionParameters } from '../../actions/wallet/sendTransaction.js'\nimport type { BaseError } from '../../errors/base.js'\nimport { UnknownNodeError } from '../../errors/node.js'\nimport {\n  TransactionExecutionError,\n  type TransactionExecutionErrorType,\n} from '../../errors/transaction.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\n\nimport {\n  type GetNodeErrorParameters,\n  type GetNodeErrorReturnType,\n  getNodeError,\n} from './getNodeError.js'\n\nexport type GetTransactionErrorParameters = Omit<\n  SendTransactionParameters,\n  'account' | 'chain'\n> & {\n  account: Account | null\n  chain?: Chain | undefined\n  docsPath?: string | undefined\n}\n\nexport type GetTransactionErrorReturnType<cause = ErrorType> = Omit<\n  TransactionExecutionErrorType,\n  'cause'\n> & { cause: cause | GetNodeErrorReturnType }\n\nexport function getTransactionError<err extends ErrorType<string>>(\n  err: err,\n  { docsPath, ...args }: GetTransactionErrorParameters,\n): GetTransactionErrorReturnType<err> {\n  const cause = (() => {\n    const cause = getNodeError(\n      err as {} as BaseError,\n      args as GetNodeErrorParameters,\n    )\n    if (cause instanceof UnknownNodeError) return err as {} as BaseError\n    return cause\n  })()\n  return new TransactionExecutionError(cause, {\n    docsPath,\n    ...args,\n  }) as GetTransactionErrorReturnType<err>\n}\n"],"names":[],"mappings":";;;;;;;;;;AA+BM,SAAU,oBACd,GAAQ,EACR,EAAE,QAAQ,EAAE,GAAG,MAAqC;IAEpD,MAAM,QAAQ,CAAC;QACb,MAAM,QAAQ,CAAA,GAAA,2JAAA,CAAA,eAAY,AAAZ,EACZ,KACA;QAEF,IAAI,iBAAiB,0IAAA,CAAA,mBAAgB,EAAE,OAAO;QAC9C,OAAO;IACT,CAAC;IACD,OAAO,IAAI,iJAAA,CAAA,4BAAyB,CAAC,OAAO;QAC1C;QACA,GAAG,IAAI;;AAEX"}},
    {"offset": {"line": 13133, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13138, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/actions/wallet/sendTransaction.ts"],"sourcesContent":["import type { Address } from 'abitype'\n\nimport type { Account } from '../../accounts/types.js'\nimport {\n  type ParseAccountErrorType,\n  parseAccount,\n} from '../../accounts/utils/parseAccount.js'\nimport type { SignTransactionErrorType } from '../../accounts/utils/signTransaction.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport {\n  AccountNotFoundError,\n  type AccountNotFoundErrorType,\n  AccountTypeNotSupportedError,\n  type AccountTypeNotSupportedErrorType,\n} from '../../errors/account.js'\nimport { BaseError } from '../../errors/base.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport {\n  type RecoverAuthorizationAddressErrorType,\n  recoverAuthorizationAddress,\n} from '../../experimental/eip7702/utils/recoverAuthorizationAddress.js'\nimport type { GetAccountParameter } from '../../types/account.js'\nimport type { Chain, DeriveChain } from '../../types/chain.js'\nimport type { GetChainParameter } from '../../types/chain.js'\nimport type { GetTransactionRequestKzgParameter } from '../../types/kzg.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { TransactionRequest } from '../../types/transaction.js'\nimport type { UnionOmit } from '../../types/utils.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type AssertCurrentChainErrorType,\n  assertCurrentChain,\n} from '../../utils/chain/assertCurrentChain.js'\nimport {\n  type GetTransactionErrorReturnType,\n  getTransactionError,\n} from '../../utils/errors/getTransactionError.js'\nimport { extract } from '../../utils/formatters/extract.js'\nimport {\n  type FormattedTransactionRequest,\n  formatTransactionRequest,\n} from '../../utils/formatters/transactionRequest.js'\nimport { getAction } from '../../utils/getAction.js'\nimport { LruMap } from '../../utils/lru.js'\nimport {\n  type AssertRequestErrorType,\n  type AssertRequestParameters,\n  assertRequest,\n} from '../../utils/transaction/assertRequest.js'\nimport { type GetChainIdErrorType, getChainId } from '../public/getChainId.js'\nimport {\n  type PrepareTransactionRequestErrorType,\n  defaultParameters,\n  prepareTransactionRequest,\n} from './prepareTransactionRequest.js'\nimport {\n  type SendRawTransactionErrorType,\n  sendRawTransaction,\n} from './sendRawTransaction.js'\n\nconst supportsWalletNamespace = new LruMap<boolean>(128)\n\nexport type SendTransactionRequest<\n  chain extends Chain | undefined = Chain | undefined,\n  chainOverride extends Chain | undefined = Chain | undefined,\n  ///\n  _derivedChain extends Chain | undefined = DeriveChain<chain, chainOverride>,\n> = UnionOmit<FormattedTransactionRequest<_derivedChain>, 'from'> &\n  GetTransactionRequestKzgParameter\n\nexport type SendTransactionParameters<\n  chain extends Chain | undefined = Chain | undefined,\n  account extends Account | undefined = Account | undefined,\n  chainOverride extends Chain | undefined = Chain | undefined,\n  request extends SendTransactionRequest<\n    chain,\n    chainOverride\n  > = SendTransactionRequest<chain, chainOverride>,\n> = request &\n  GetAccountParameter<account, Account | Address, true, true> &\n  GetChainParameter<chain, chainOverride> &\n  GetTransactionRequestKzgParameter<request>\n\nexport type SendTransactionReturnType = Hash\n\nexport type SendTransactionErrorType =\n  | ParseAccountErrorType\n  | GetTransactionErrorReturnType<\n      | AccountNotFoundErrorType\n      | AccountTypeNotSupportedErrorType\n      | AssertCurrentChainErrorType\n      | AssertRequestErrorType\n      | GetChainIdErrorType\n      | PrepareTransactionRequestErrorType\n      | SendRawTransactionErrorType\n      | RecoverAuthorizationAddressErrorType\n      | SignTransactionErrorType\n      | RequestErrorType\n    >\n  | ErrorType\n\n/**\n * Creates, signs, and sends a new transaction to the network.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/sendTransaction\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions/sending-transactions\n * - JSON-RPC Methods:\n *   - JSON-RPC Accounts: [`eth_sendTransaction`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sendtransaction)\n *   - Local Accounts: [`eth_sendRawTransaction`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sendrawtransaction)\n *\n * @param client - Client to use\n * @param parameters - {@link SendTransactionParameters}\n * @returns The [Transaction](https://viem.sh/docs/glossary/terms#transaction) hash. {@link SendTransactionReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { sendTransaction } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const hash = await sendTransaction(client, {\n *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n *   value: 1000000000000000000n,\n * })\n *\n * @example\n * // Account Hoisting\n * import { createWalletClient, http } from 'viem'\n * import { privateKeyToAccount } from 'viem/accounts'\n * import { mainnet } from 'viem/chains'\n * import { sendTransaction } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   account: privateKeyToAccount('0x…'),\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const hash = await sendTransaction(client, {\n *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n *   value: 1000000000000000000n,\n * })\n */\nexport async function sendTransaction<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n  const request extends SendTransactionRequest<chain, chainOverride>,\n  chainOverride extends Chain | undefined = undefined,\n>(\n  client: Client<Transport, chain, account>,\n  parameters: SendTransactionParameters<chain, account, chainOverride, request>,\n): Promise<SendTransactionReturnType> {\n  const {\n    account: account_ = client.account,\n    chain = client.chain,\n    accessList,\n    authorizationList,\n    blobs,\n    data,\n    gas,\n    gasPrice,\n    maxFeePerBlobGas,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    nonce,\n    value,\n    ...rest\n  } = parameters\n\n  if (typeof account_ === 'undefined')\n    throw new AccountNotFoundError({\n      docsPath: '/docs/actions/wallet/sendTransaction',\n    })\n  const account = account_ ? parseAccount(account_) : null\n\n  try {\n    assertRequest(parameters as AssertRequestParameters)\n\n    const to = await (async () => {\n      // If `to` exists on the parameters, use that.\n      if (parameters.to) return parameters.to\n\n      // If no `to` exists, and we are sending a EIP-7702 transaction, use the\n      // address of the first authorization in the list.\n      if (authorizationList && authorizationList.length > 0)\n        return await recoverAuthorizationAddress({\n          authorization: authorizationList[0],\n        }).catch(() => {\n          throw new BaseError(\n            '`to` is required. Could not infer from `authorizationList`.',\n          )\n        })\n\n      // Otherwise, we are sending a deployment transaction.\n      return undefined\n    })()\n\n    if (account?.type === 'json-rpc' || account === null) {\n      let chainId: number | undefined\n      if (chain !== null) {\n        chainId = await getAction(client, getChainId, 'getChainId')({})\n        assertCurrentChain({\n          currentChainId: chainId,\n          chain,\n        })\n      }\n\n      const chainFormat = client.chain?.formatters?.transactionRequest?.format\n      const format = chainFormat || formatTransactionRequest\n\n      const request = format({\n        // Pick out extra data that might exist on the chain's transaction request type.\n        ...extract(rest, { format: chainFormat }),\n        accessList,\n        authorizationList,\n        blobs,\n        chainId,\n        data,\n        from: account?.address,\n        gas,\n        gasPrice,\n        maxFeePerBlobGas,\n        maxFeePerGas,\n        maxPriorityFeePerGas,\n        nonce,\n        to,\n        value,\n      } as TransactionRequest)\n\n      const method = supportsWalletNamespace.get(client.uid)\n        ? 'wallet_sendTransaction'\n        : 'eth_sendTransaction'\n\n      try {\n        return await client.request(\n          {\n            method,\n            params: [request],\n          },\n          { retryCount: 0 },\n        )\n      } catch (e) {\n        const error = e as BaseError\n        // If the transport does not support the method or input, attempt to use the\n        // `wallet_sendTransaction` method.\n        if (\n          error.name === 'InvalidInputRpcError' ||\n          error.name === 'InvalidParamsRpcError' ||\n          error.name === 'MethodNotFoundRpcError' ||\n          error.name === 'MethodNotSupportedRpcError'\n        )\n          return await client\n            .request(\n              {\n                method: 'wallet_sendTransaction',\n                params: [request],\n              },\n              { retryCount: 0 },\n            )\n            .then((hash) => {\n              supportsWalletNamespace.set(client.uid, true)\n              return hash\n            })\n        throw error\n      }\n    }\n\n    if (account?.type === 'local') {\n      // Prepare the request for signing (assign appropriate fees, etc.)\n      const request = await getAction(\n        client,\n        prepareTransactionRequest,\n        'prepareTransactionRequest',\n      )({\n        account,\n        accessList,\n        authorizationList,\n        blobs,\n        chain,\n        data,\n        gas,\n        gasPrice,\n        maxFeePerBlobGas,\n        maxFeePerGas,\n        maxPriorityFeePerGas,\n        nonce,\n        nonceManager: account.nonceManager,\n        parameters: [...defaultParameters, 'sidecars'],\n        value,\n        ...rest,\n        to,\n      } as any)\n\n      const serializer = chain?.serializers?.transaction\n      const serializedTransaction = (await account.signTransaction(request, {\n        serializer,\n      })) as Hash\n      return await getAction(\n        client,\n        sendRawTransaction,\n        'sendRawTransaction',\n      )({\n        serializedTransaction,\n      })\n    }\n\n    if (account?.type === 'smart')\n      throw new AccountTypeNotSupportedError({\n        metaMessages: [\n          'Consider using the `sendUserOperation` Action instead.',\n        ],\n        docsPath: '/docs/actions/bundler/sendUserOperation',\n        type: 'smart',\n      })\n\n    throw new AccountTypeNotSupportedError({\n      docsPath: '/docs/actions/wallet/sendTransaction',\n      type: (account as any)?.type,\n    })\n  } catch (err) {\n    if (err instanceof AccountTypeNotSupportedError) throw err\n    throw getTransactionError(err as BaseError, {\n      ...parameters,\n      account,\n      chain: parameters.chain || undefined,\n    })\n  }\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 13303, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13308, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/actions/wallet/writeContract.ts"],"sourcesContent":["import type { Abi, Address } from 'abitype'\n\nimport type { Account } from '../../accounts/types.js'\nimport {\n  type ParseAccountErrorType,\n  parseAccount,\n} from '../../accounts/utils/parseAccount.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport {\n  AccountNotFoundError,\n  type AccountNotFoundErrorType,\n} from '../../errors/account.js'\nimport type { BaseError } from '../../errors/base.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { GetAccountParameter } from '../../types/account.js'\nimport type {\n  Chain,\n  DeriveChain,\n  GetChainParameter,\n} from '../../types/chain.js'\nimport type {\n  ContractFunctionArgs,\n  ContractFunctionName,\n  ContractFunctionParameters,\n} from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { Prettify, UnionEvaluate, UnionOmit } from '../../types/utils.js'\nimport {\n  type EncodeFunctionDataErrorType,\n  type EncodeFunctionDataParameters,\n  encodeFunctionData,\n} from '../../utils/abi/encodeFunctionData.js'\nimport {\n  type GetContractErrorReturnType,\n  getContractError,\n} from '../../utils/errors/getContractError.js'\nimport type { FormattedTransactionRequest } from '../../utils/formatters/transactionRequest.js'\nimport { getAction } from '../../utils/getAction.js'\nimport type { GetMutabilityAwareValue } from '../public/simulateContract.js'\nimport {\n  type SendTransactionErrorType,\n  type SendTransactionReturnType,\n  sendTransaction,\n} from './sendTransaction.js'\n\nexport type WriteContractParameters<\n  abi extends Abi | readonly unknown[] = Abi,\n  functionName extends ContractFunctionName<\n    abi,\n    'nonpayable' | 'payable'\n  > = ContractFunctionName<abi, 'nonpayable' | 'payable'>,\n  args extends ContractFunctionArgs<\n    abi,\n    'nonpayable' | 'payable',\n    functionName\n  > = ContractFunctionArgs<abi, 'nonpayable' | 'payable', functionName>,\n  chain extends Chain | undefined = Chain | undefined,\n  account extends Account | undefined = Account | undefined,\n  chainOverride extends Chain | undefined = Chain | undefined,\n  ///\n  allFunctionNames = ContractFunctionName<abi, 'nonpayable' | 'payable'>,\n  derivedChain extends Chain | undefined = DeriveChain<chain, chainOverride>,\n> = ContractFunctionParameters<\n  abi,\n  'nonpayable' | 'payable',\n  functionName,\n  args,\n  false,\n  allFunctionNames\n> &\n  GetChainParameter<chain, chainOverride> &\n  Prettify<\n    GetAccountParameter<account, Account | Address, true, true> &\n      GetMutabilityAwareValue<\n        abi,\n        'nonpayable' | 'payable',\n        functionName,\n        FormattedTransactionRequest<derivedChain>['value'],\n        args\n      > & {\n        /** Data to append to the end of the calldata. Useful for adding a [\"domain\" tag](https://opensea.notion.site/opensea/Seaport-Order-Attributions-ec2d69bf455041a5baa490941aad307f). */\n        dataSuffix?: Hex | undefined\n      }\n  > &\n  UnionEvaluate<\n    UnionOmit<\n      FormattedTransactionRequest<derivedChain>,\n      'data' | 'from' | 'to' | 'value'\n    >\n  >\n\nexport type WriteContractReturnType = SendTransactionReturnType\n\nexport type WriteContractErrorType =\n  | EncodeFunctionDataErrorType\n  | AccountNotFoundErrorType\n  | ParseAccountErrorType\n  | GetContractErrorReturnType<SendTransactionErrorType>\n  | ErrorType\n\n/**\n * Executes a write function on a contract.\n *\n * - Docs: https://viem.sh/docs/contract/writeContract\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/contracts/writing-to-contracts\n *\n * A \"write\" function on a Solidity contract modifies the state of the blockchain. These types of functions require gas to be executed, and hence a [Transaction](https://viem.sh/docs/glossary/terms) is needed to be broadcast in order to change the state.\n *\n * Internally, uses a [Wallet Client](https://viem.sh/docs/clients/wallet) to call the [`sendTransaction` action](https://viem.sh/docs/actions/wallet/sendTransaction) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData).\n *\n * __Warning: The `write` internally sends a transaction – it does not validate if the contract write will succeed (the contract may throw an error). It is highly recommended to [simulate the contract write with `contract.simulate`](https://viem.sh/docs/contract/writeContract#usage) before you execute it.__\n *\n * @param client - Client to use\n * @param parameters - {@link WriteContractParameters}\n * @returns A [Transaction Hash](https://viem.sh/docs/glossary/terms#hash). {@link WriteContractReturnType}\n *\n * @example\n * import { createWalletClient, custom, parseAbi } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { writeContract } from 'viem/contract'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const hash = await writeContract(client, {\n *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *   abi: parseAbi(['function mint(uint32 tokenId) nonpayable']),\n *   functionName: 'mint',\n *   args: [69420],\n * })\n *\n * @example\n * // With Validation\n * import { createWalletClient, http, parseAbi } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { simulateContract, writeContract } from 'viem/contract'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const { request } = await simulateContract(client, {\n *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *   abi: parseAbi(['function mint(uint32 tokenId) nonpayable']),\n *   functionName: 'mint',\n *   args: [69420],\n * }\n * const hash = await writeContract(client, request)\n */\nexport async function writeContract<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n  const abi extends Abi | readonly unknown[],\n  functionName extends ContractFunctionName<abi, 'nonpayable' | 'payable'>,\n  args extends ContractFunctionArgs<\n    abi,\n    'nonpayable' | 'payable',\n    functionName\n  >,\n  chainOverride extends Chain | undefined,\n>(\n  client: Client<Transport, chain, account>,\n  parameters: WriteContractParameters<\n    abi,\n    functionName,\n    args,\n    chain,\n    account,\n    chainOverride\n  >,\n): Promise<WriteContractReturnType> {\n  const {\n    abi,\n    account: account_ = client.account,\n    address,\n    args,\n    dataSuffix,\n    functionName,\n    ...request\n  } = parameters as WriteContractParameters\n\n  if (typeof account_ === 'undefined')\n    throw new AccountNotFoundError({\n      docsPath: '/docs/contract/writeContract',\n    })\n  const account = account_ ? parseAccount(account_) : null\n\n  const data = encodeFunctionData({\n    abi,\n    args,\n    functionName,\n  } as EncodeFunctionDataParameters)\n\n  try {\n    return await getAction(\n      client,\n      sendTransaction,\n      'sendTransaction',\n    )({\n      data: `${data}${dataSuffix ? dataSuffix.replace('0x', '') : ''}`,\n      to: address,\n      account,\n      ...request,\n    })\n  } catch (error) {\n    throw getContractError(error as BaseError, {\n      abi,\n      address,\n      args,\n      docsPath: '/docs/contract/writeContract',\n      functionName,\n      sender: account?.address,\n    })\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAuJO,eAAe,cAYpB,MAAyC,EACzC,UAOC;IAED,MAAM,EACJ,GAAG,EACH,SAAS,WAAW,OAAO,OAAO,EAClC,OAAO,EACP,IAAI,EACJ,UAAU,EACV,YAAY,EACZ,GAAG,SACJ,GAAG;IAEJ,IAAI,OAAO,aAAa,aACtB,MAAM,IAAI,6IAAA,CAAA,uBAAoB,CAAC;QAC7B,UAAU;;IAEd,MAAM,UAAU,WAAW,CAAA,GAAA,6JAAA,CAAA,eAAY,AAAZ,EAAa,YAAY;IAEpD,MAAM,OAAO,CAAA,GAAA,8JAAA,CAAA,qBAAkB,AAAlB,EAAmB;QAC9B;QACA;QACA;;IAGF,IAAI;QACF,OAAO,MAAM,CAAA,GAAA,8IAAA,CAAA,YAAS,AAAT,EACX,QACA,gKAAA,CAAA,kBAAe,EACf,mBACA;YACA,MAAM,CAAA,EAAG,KAAI,EAAG,aAAa,WAAW,OAAO,CAAC,MAAM,MAAM,GAAE,CAAE;YAChE,IAAI;YACJ;YACA,GAAG,OAAO;;IAEd,EAAE,OAAO,OAAO;QACd,MAAM,CAAA,GAAA,+JAAA,CAAA,mBAAgB,AAAhB,EAAiB,OAAoB;YACzC;YACA;YACA;YACA,UAAU;YACV;YACA,QAAQ,SAAS;;IAErB;AACF"}},
    {"offset": {"line": 13353, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13358, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/errors/unit.ts"],"sourcesContent":["import { BaseError } from './base.js'\n\nexport type InvalidDecimalNumberErrorType = InvalidDecimalNumberError & {\n  name: 'InvalidDecimalNumberError'\n}\nexport class InvalidDecimalNumberError extends BaseError {\n  constructor({ value }: { value: string }) {\n    super(`Number \\`${value}\\` is not a valid decimal number.`, {\n      name: 'InvalidDecimalNumberError',\n    })\n  }\n}\n"],"names":[],"mappings":";;;;;;AAKM,MAAO,kCAAkC,0IAAA,CAAA,YAAS;IACtD,YAAY,EAAE,KAAK,EAAqB,CAAA;QACtC,KAAK,CAAC,CAAA,SAAA,EAAY,MAAK,iCAAA,CAAmC,EAAE;YAC1D,MAAM;;IAEV"}},
    {"offset": {"line": 13371, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13376, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/unit/parseUnits.ts"],"sourcesContent":["import { InvalidDecimalNumberError } from '../../errors/unit.js'\nimport type { ErrorType } from '../../errors/utils.js'\n\nexport type ParseUnitsErrorType = ErrorType\n\n/**\n * Multiplies a string representation of a number by a given exponent of base 10 (10exponent).\n *\n * - Docs: https://viem.sh/docs/utilities/parseUnits\n *\n * @example\n * import { parseUnits } from 'viem'\n *\n * parseUnits('420', 9)\n * // 420000000000n\n */\nexport function parseUnits(value: string, decimals: number) {\n  if (!/^(-?)([0-9]*)\\.?([0-9]*)$/.test(value))\n    throw new InvalidDecimalNumberError({ value })\n\n  let [integer, fraction = '0'] = value.split('.')\n\n  const negative = integer.startsWith('-')\n  if (negative) integer = integer.slice(1)\n\n  // trim trailing zeros.\n  fraction = fraction.replace(/(0+)$/, '')\n\n  // round off if the fraction is larger than the number of decimals.\n  if (decimals === 0) {\n    if (Math.round(Number(`.${fraction}`)) === 1)\n      integer = `${BigInt(integer) + 1n}`\n    fraction = ''\n  } else if (fraction.length > decimals) {\n    const [left, unit, right] = [\n      fraction.slice(0, decimals - 1),\n      fraction.slice(decimals - 1, decimals),\n      fraction.slice(decimals),\n    ]\n\n    const rounded = Math.round(Number(`${unit}.${right}`))\n    if (rounded > 9)\n      fraction = `${BigInt(left) + BigInt(1)}0`.padStart(left.length + 1, '0')\n    else fraction = `${left}${rounded}`\n\n    if (fraction.length > decimals) {\n      fraction = fraction.slice(1)\n      integer = `${BigInt(integer) + 1n}`\n    }\n\n    fraction = fraction.slice(0, decimals)\n  } else {\n    fraction = fraction.padEnd(decimals, '0')\n  }\n\n  return BigInt(`${negative ? '-' : ''}${integer}${fraction}`)\n}\n"],"names":[],"mappings":";;;;;;AAgBM,SAAU,WAAW,KAAa,EAAE,QAAgB;IACxD,IAAI,CAAC,4BAA4B,IAAI,CAAC,QACpC,MAAM,IAAI,0IAAA,CAAA,4BAAyB,CAAC;QAAE;IAAK;IAE7C,IAAI,CAAC,SAAS,WAAW,GAAG,CAAC,GAAG,MAAM,KAAK,CAAC;IAE5C,MAAM,WAAW,QAAQ,UAAU,CAAC;IACpC,IAAI,UAAU,UAAU,QAAQ,KAAK,CAAC;IAEtC,uBAAuB;IACvB,WAAW,SAAS,OAAO,CAAC,SAAS;IAErC,mEAAmE;IACnE,IAAI,aAAa,GAAG;QAClB,IAAI,KAAK,KAAK,CAAC,OAAO,CAAA,CAAA,EAAI,SAAQ,CAAE,OAAO,GACzC,UAAU,CAAA,EAAG,OAAO,WAAW,EAAE,CAAA,CAAE;QACrC,WAAW;IACb,OAAO,IAAI,SAAS,MAAM,GAAG,UAAU;QACrC,MAAM,CAAC,MAAM,MAAM,MAAM,GAAG;YAC1B,SAAS,KAAK,CAAC,GAAG,WAAW;YAC7B,SAAS,KAAK,CAAC,WAAW,GAAG;YAC7B,SAAS,KAAK,CAAC;SAChB;QAED,MAAM,UAAU,KAAK,KAAK,CAAC,OAAO,CAAA,EAAG,KAAI,CAAA,EAAI,MAAK,CAAE;QACpD,IAAI,UAAU,GACZ,WAAW,CAAA,EAAG,OAAO,QAAQ,OAAO,GAAE,CAAA,CAAG,CAAC,QAAQ,CAAC,KAAK,MAAM,GAAG,GAAG;aACjE,WAAW,CAAA,EAAG,KAAI,EAAG,QAAO,CAAE;QAEnC,IAAI,SAAS,MAAM,GAAG,UAAU;YAC9B,WAAW,SAAS,KAAK,CAAC;YAC1B,UAAU,CAAA,EAAG,OAAO,WAAW,EAAE,CAAA,CAAE;QACrC;QAEA,WAAW,SAAS,KAAK,CAAC,GAAG;IAC/B,OAAO;QACL,WAAW,SAAS,MAAM,CAAC,UAAU;IACvC;IAEA,OAAO,OAAO,CAAA,EAAG,WAAW,MAAM,GAAE,EAAG,QAAO,EAAG,SAAQ,CAAE;AAC7D"}},
    {"offset": {"line": 13414, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13419, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/unit/parseEther.ts"],"sourcesContent":["import { etherUnits } from '../../constants/unit.js'\nimport type { ErrorType } from '../../errors/utils.js'\n\nimport { type ParseUnitsErrorType, parseUnits } from './parseUnits.js'\n\nexport type ParseEtherErrorType = ParseUnitsErrorType | ErrorType\n\n/**\n * Converts a string representation of ether to numerical wei.\n *\n * - Docs: https://viem.sh/docs/utilities/parseEther\n *\n * @example\n * import { parseEther } from 'viem'\n *\n * parseEther('420')\n * // 420000000000000000000n\n */\nexport function parseEther(ether: string, unit: 'wei' | 'gwei' = 'wei') {\n  return parseUnits(ether, etherUnits[unit])\n}\n"],"names":[],"mappings":";;;;;;;;AAkBM,SAAU,WAAW,KAAa,EAAE,OAAuB,KAAK;IACpE,OAAO,CAAA,GAAA,uJAAA,CAAA,aAAU,AAAV,EAAW,OAAO,6IAAA,CAAA,aAAU,CAAC,KAAK;AAC3C"}},
    {"offset": {"line": 13430, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}